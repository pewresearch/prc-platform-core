@use 'colors';
@use "functions" as functions;
@use "sass:math";
@use "sass:string";
@use "sass:map";


/*******************************
         Site Settings
*******************************/

/*-------------------
       Fonts
--------------------*/
$franklinGothic : 'franklin-gothic-urw';
$abrilText : 'abril-text';

$defaultFont : var(--wp--preset--font-family--default);
$serifFont : var(--wp--preset--font-family--serif);
$sansSerifFont : var(--wp--preset--font-family--sans-serif);
$sansSerif : $sansSerifFont; // Alias for $sansSerifFont

$pageFont : $defaultFont;
$headerFont : $sansSerifFont;
$postTitleFont : $serifFont;

$fontSmoothing : antialiased;

$bold : bold;
$normal : normal;
$light : lighter;


/*-------------------
      Base Sizes
--------------------*/
/* This is the single variable that controls them all */
$baseUnit : 14;

/*  Convert the base unit to a pixel value. */
$emSize : functions.replace-unit($baseUnit, px);

/* The size of page text  */
$fontSize : $emSize;


/*-------------------
        Grid
--------------------*/

$maxWidth: 1152px;
$columnCount: 16;

// /*-------------------
//   Exact Pixel Values
// --------------------*/

/*
  These are used to specify exact pixel values in em
  for things like borders that remain constantly
  sized as emSize adjusts

  Since there are many more sizes than names for sizes,
  these are named by their original pixel values.

*/
$u1px : functions.replace-unit(math.div(1, functions.strip-unit($emSize)), rem);
$u2px : functions.replace-unit(math.div(2, functions.strip-unit($emSize)), rem);
$u3px : functions.replace-unit(math.div(3, functions.strip-unit($emSize)), rem);
$u4px : functions.replace-unit(math.div(4, functions.strip-unit($emSize)), rem);
$u5px : functions.replace-unit(math.div(5, functions.strip-unit($emSize)), rem);
$u6px : functions.replace-unit(math.div(6, functions.strip-unit($emSize)), rem);
$u7px : functions.replace-unit(math.div(7, functions.strip-unit($emSize)), rem);
$u8px : functions.replace-unit(math.div(8, functions.strip-unit($emSize)), rem);
$u9px : functions.replace-unit(math.div(9, functions.strip-unit($emSize)), rem);
$u10px : functions.replace-unit(math.div(10, functions.strip-unit($emSize)), rem);
$u11px : functions.replace-unit(math.div(11, functions.strip-unit($emSize)), rem);
$u12px : functions.replace-unit(math.div(12, functions.strip-unit($emSize)), rem);
$u13px : functions.replace-unit(math.div(13, functions.strip-unit($emSize)), rem);
$u14px : functions.replace-unit(math.div(14, functions.strip-unit($emSize)), rem);
$u15px : functions.replace-unit(math.div(15, functions.strip-unit($emSize)), rem);
$u16px : functions.replace-unit(math.div(16, functions.strip-unit($emSize)), rem);
$u17px : functions.replace-unit(math.div(17, functions.strip-unit($emSize)), rem);
$u18px : functions.replace-unit(math.div(18, functions.strip-unit($emSize)), rem);
$u19px : functions.replace-unit(math.div(19, functions.strip-unit($emSize)), rem);
$u20px : functions.replace-unit(math.div(20, functions.strip-unit($emSize)), rem);
$u21px : functions.replace-unit(math.div(21, functions.strip-unit($emSize)), rem);
$u22px : functions.replace-unit(math.div(22, functions.strip-unit($emSize)), rem);
$u23px : functions.replace-unit(math.div(23, functions.strip-unit($emSize)), rem);
$u24px : functions.replace-unit(math.div(24, functions.strip-unit($emSize)), rem);
$u25px : functions.replace-unit(math.div(25, functions.strip-unit($emSize)), rem);
$u26px : functions.replace-unit(math.div(26, functions.strip-unit($emSize)), rem);
$u27px : functions.replace-unit(math.div(27, functions.strip-unit($emSize)), rem);
$u28px : functions.replace-unit(math.div(28, functions.strip-unit($emSize)), rem);
$u29px : functions.replace-unit(math.div(29, functions.strip-unit($emSize)), rem);
$u30px : functions.replace-unit(math.div(30, functions.strip-unit($emSize)), rem);
$u31px : functions.replace-unit(math.div(31, functions.strip-unit($emSize)), rem);
$u32px : functions.replace-unit(math.div(32, functions.strip-unit($emSize)), rem);
$u33px : functions.replace-unit(math.div(33, functions.strip-unit($emSize)), rem);
$u34px : functions.replace-unit(math.div(34, functions.strip-unit($emSize)), rem);
$u35px : functions.replace-unit(math.div(35, functions.strip-unit($emSize)), rem);
$u36px : functions.replace-unit(math.div(36, functions.strip-unit($emSize)), rem);
$u37px : functions.replace-unit(math.div(37, functions.strip-unit($emSize)), rem);
$u38px : functions.replace-unit(math.div(38, functions.strip-unit($emSize)), rem);
$u39px : functions.replace-unit(math.div(39, functions.strip-unit($emSize)), rem);
$u40px : functions.replace-unit(math.div(40, functions.strip-unit($emSize)), rem);
$u41px : functions.replace-unit(math.div(41, functions.strip-unit($emSize)), rem);
$u42px : functions.replace-unit(math.div(42, functions.strip-unit($emSize)), rem);
$u43px : functions.replace-unit(math.div(43, functions.strip-unit($emSize)), rem);
$u44px : functions.replace-unit(math.div(44, functions.strip-unit($emSize)), rem);
$u45px : functions.replace-unit(math.div(45, functions.strip-unit($emSize)), rem);
$u46px : functions.replace-unit(math.div(46, functions.strip-unit($emSize)), rem);
$u47px : functions.replace-unit(math.div(47, functions.strip-unit($emSize)), rem);
$u48px : functions.replace-unit(math.div(48, functions.strip-unit($emSize)), rem);
$u49px : functions.replace-unit(math.div(49, functions.strip-unit($emSize)), rem);
$u50px : functions.replace-unit(math.div(50, functions.strip-unit($emSize)), rem);
$u51px : functions.replace-unit(math.div(51, functions.strip-unit($emSize)), rem);
$u52px : functions.replace-unit(math.div(52, functions.strip-unit($emSize)), rem);
$u53px : functions.replace-unit(math.div(53, functions.strip-unit($emSize)), rem);
$u54px : functions.replace-unit(math.div(54, functions.strip-unit($emSize)), rem);
$u55px : functions.replace-unit(math.div(55, functions.strip-unit($emSize)), rem);
$u56px : functions.replace-unit(math.div(56, functions.strip-unit($emSize)), rem);
$u57px : functions.replace-unit(math.div(57, functions.strip-unit($emSize)), rem);
$u58px : functions.replace-unit(math.div(58, functions.strip-unit($emSize)), rem);
$u59px : functions.replace-unit(math.div(59, functions.strip-unit($emSize)), rem);
$u60px : functions.replace-unit(math.div(60, functions.strip-unit($emSize)), rem);
$u61px : functions.replace-unit(math.div(61, functions.strip-unit($emSize)), rem);
$u62px : functions.replace-unit(math.div(62, functions.strip-unit($emSize)), rem);
$u63px : functions.replace-unit(math.div(63, functions.strip-unit($emSize)), rem);
$u64px : functions.replace-unit(math.div(64, functions.strip-unit($emSize)), rem);

$relative1px : functions.replace-unit(math.div(1, functions.strip-unit($emSize)), em);
$relative2px : functions.replace-unit(math.div(2, functions.strip-unit($emSize)), em);
$relative3px : functions.replace-unit(math.div(3, functions.strip-unit($emSize)), em);
$relative4px : functions.replace-unit(math.div(4, functions.strip-unit($emSize)), em);
$relative5px : functions.replace-unit(math.div(5, functions.strip-unit($emSize)), em);
$relative6px : functions.replace-unit(math.div(6, functions.strip-unit($emSize)), em);
$relative7px : functions.replace-unit(math.div(7, functions.strip-unit($emSize)), em);
$relative8px : functions.replace-unit(math.div(8, functions.strip-unit($emSize)), em);
$relative9px : functions.replace-unit(math.div(9, functions.strip-unit($emSize)), em);
$relative10px : functions.replace-unit(math.div(10, functions.strip-unit($emSize)), em);
$relative11px : functions.replace-unit(math.div(11, functions.strip-unit($emSize)), em);
$relative12px : functions.replace-unit(math.div(12, functions.strip-unit($emSize)), em);
$relative13px : functions.replace-unit(math.div(13, functions.strip-unit($emSize)), em);
$relative14px : functions.replace-unit(math.div(14, functions.strip-unit($emSize)), em);
$relative15px : functions.replace-unit(math.div(15, functions.strip-unit($emSize)), em);
$relative16px : functions.replace-unit(math.div(16, functions.strip-unit($emSize)), em);
$relative17px : functions.replace-unit(math.div(17, functions.strip-unit($emSize)), em);
$relative18px : functions.replace-unit(math.div(18, functions.strip-unit($emSize)), em);
$relative19px : functions.replace-unit(math.div(19, functions.strip-unit($emSize)), em);
$relative20px : functions.replace-unit(math.div(20, functions.strip-unit($emSize)), em);
$relative21px : functions.replace-unit(math.div(21, functions.strip-unit($emSize)), em);
$relative22px : functions.replace-unit(math.div(22, functions.strip-unit($emSize)), em);
$relative23px : functions.replace-unit(math.div(23, functions.strip-unit($emSize)), em);
$relative24px : functions.replace-unit(math.div(24, functions.strip-unit($emSize)), em);
$relative25px : functions.replace-unit(math.div(25, functions.strip-unit($emSize)), em);
$relative26px : functions.replace-unit(math.div(26, functions.strip-unit($emSize)), em);
$relative27px : functions.replace-unit(math.div(27, functions.strip-unit($emSize)), em);
$relative28px : functions.replace-unit(math.div(28, functions.strip-unit($emSize)), em);
$relative29px : functions.replace-unit(math.div(29, functions.strip-unit($emSize)), em);
$relative30px : functions.replace-unit(math.div(30, functions.strip-unit($emSize)), em);
$relative31px : functions.replace-unit(math.div(31, functions.strip-unit($emSize)), em);
$relative32px : functions.replace-unit(math.div(32, functions.strip-unit($emSize)), em);
$relative33px : functions.replace-unit(math.div(33, functions.strip-unit($emSize)), em);
$relative34px : functions.replace-unit(math.div(34, functions.strip-unit($emSize)), em);
$relative35px : functions.replace-unit(math.div(35, functions.strip-unit($emSize)), em);
$relative36px : functions.replace-unit(math.div(36, functions.strip-unit($emSize)), em);
$relative37px : functions.replace-unit(math.div(37, functions.strip-unit($emSize)), em);
$relative38px : functions.replace-unit(math.div(38, functions.strip-unit($emSize)), em);
$relative39px : functions.replace-unit(math.div(39, functions.strip-unit($emSize)), em);
$relative40px : functions.replace-unit(math.div(40, functions.strip-unit($emSize)), em);
$relative41px : functions.replace-unit(math.div(41, functions.strip-unit($emSize)), em);
$relative42px : functions.replace-unit(math.div(42, functions.strip-unit($emSize)), em);
$relative43px : functions.replace-unit(math.div(43, functions.strip-unit($emSize)), em);
$relative44px : functions.replace-unit(math.div(44, functions.strip-unit($emSize)), em);
$relative45px : functions.replace-unit(math.div(45, functions.strip-unit($emSize)), em);
$relative46px : functions.replace-unit(math.div(46, functions.strip-unit($emSize)), em);
$relative47px : functions.replace-unit(math.div(47, functions.strip-unit($emSize)), em);
$relative48px : functions.replace-unit(math.div(48, functions.strip-unit($emSize)), em);
$relative49px : functions.replace-unit(math.div(49, functions.strip-unit($emSize)), em);
$relative50px : functions.replace-unit(math.div(50, functions.strip-unit($emSize)), em);
$relative51px : functions.replace-unit(math.div(51, functions.strip-unit($emSize)), em);
$relative52px : functions.replace-unit(math.div(52, functions.strip-unit($emSize)), em);
$relative53px : functions.replace-unit(math.div(53, functions.strip-unit($emSize)), em);
$relative54px : functions.replace-unit(math.div(54, functions.strip-unit($emSize)), em);
$relative55px : functions.replace-unit(math.div(55, functions.strip-unit($emSize)), em);
$relative56px : functions.replace-unit(math.div(56, functions.strip-unit($emSize)), em);
$relative57px : functions.replace-unit(math.div(57, functions.strip-unit($emSize)), em);
$relative58px : functions.replace-unit(math.div(58, functions.strip-unit($emSize)), em);
$relative59px : functions.replace-unit(math.div(59, functions.strip-unit($emSize)), em);
$relative60px : functions.replace-unit(math.div(60, functions.strip-unit($emSize)), em);
$relative61px : functions.replace-unit(math.div(61, functions.strip-unit($emSize)), em);
$relative62px : functions.replace-unit(math.div(62, functions.strip-unit($emSize)), em);
$relative63px : functions.replace-unit(math.div(63, functions.strip-unit($emSize)), em);
$relative64px : functions.replace-unit(math.div(64, functions.strip-unit($emSize)), em);

/* Columns */
$oneWide : (math.div(1, $columnCount) * 100%);
$twoWide : (math.div(2, $columnCount) * 100%);
$threeWide : (math.div(3, $columnCount) * 100%);
$fourWide : (math.div(4, $columnCount) * 100%);
$fiveWide : (math.div(5, $columnCount) * 100%);
$sixWide : (math.div(6, $columnCount) * 100%);
$sevenWide : (math.div(7, $columnCount) * 100%);
$eightWide : (math.div(8, $columnCount) * 100%);
$nineWide : (math.div(9, $columnCount) * 100%);
$tenWide : (math.div(10, $columnCount) * 100%);
$elevenWide : (math.div(11, $columnCount) * 100%);
$twelveWide : (math.div(12, $columnCount) * 100%);
$thirteenWide : (math.div(13, $columnCount) * 100%);
$fourteenWide : (math.div(14, $columnCount) * 100%);
$fifteenWide : (math.div(15, $columnCount) * 100%);
$sixteenWide : (math.div(16, $columnCount) * 100%);

$oneColumn : math.div(1, 1) * 100%;
$twoColumn : math.div(1, 2) * 100%;
$threeColumn : math.div(1, 3) * 100%;
$fourColumn : math.div(1, 4) * 100%;
$fiveColumn : math.div(1, 5) * 100%;
$sixColumn : math.div(1, 6) * 100%;
$sevenColumn : math.div(1, 7) * 100%;
$eightColumn : math.div(1, 8) * 100%;
$nineColumn : math.div(1, 9) * 100%;
$tenColumn : math.div(1, 10) * 100%;
$elevenColumn : math.div(1, 11) * 100%;
$twelveColumn : math.div(1, 12) * 100%;
$thirteenColumn : math.div(1, 13) * 100%;
$fourteenColumn : math.div(1, 14) * 100%;
$fifteenColumn : math.div(1, 15) * 100%;
$sixteenColumn : math.div(1, 16) * 100%;

/*-------------------
        Sizes
--------------------*/

/*
  Sizes are all expressed in terms of 16px/em (default em)
  This ensures these "ratios" remain constant despite changes in EM
  $TODO make this based off base unit
*/

$miniSize : math.div(11, $baseUnit);
$tinySize : math.div(12, $baseUnit);
$smallSize : math.div(13, $baseUnit);
$mediumSize : math.div(14, $baseUnit);
$largeSize : math.div(16, $baseUnit);
$bigSize : math.div(18, $baseUnit);
$hugeSize : math.div(20, $baseUnit);
$massiveSize : math.div(24, $baseUnit);

$A1: 564px;
$A1Small: 345px;
$A1SmallHeight: 194px;
$A1Height: 317px;
$A2: 268px;
$A2Small: $A1Small;
$A2SmallHeight: 194px;
$A2Height: 151px;
$A3: 194px;
$A3Small: 148px;
$A3SmallHeight: 84px;
$A3Height: 110px;
$A4: 268px;
$A4Small: $A1Small;
$A4SmallHeight: 194px;
$A4Height: 151px;
$XL: 720px;
$XLHeight: 405px;

/*-------------------
       Em Sizes
--------------------*/

/*
  This rounds $size values to the closest pixel then expresses that value in (r)em.
  This ensures all size values round to exact pixels
*/
$mini : functions.replace-unit(math.div(round(functions.strip-unit($miniSize) * functions.strip-unit($emSize)), functions.strip-unit($emSize)), rem);
$tiny : functions.replace-unit(math.div(round(functions.strip-unit($tinySize) * functions.strip-unit($emSize)), functions.strip-unit($emSize)), rem);
$small : functions.replace-unit(math.div(round(functions.strip-unit($smallSize) * functions.strip-unit($emSize)), functions.strip-unit($emSize)), rem);
$medium : functions.replace-unit(math.div(round(functions.strip-unit($mediumSize) * functions.strip-unit($emSize)), functions.strip-unit($emSize)), rem);
$large : functions.replace-unit(math.div(round(functions.strip-unit($largeSize) * functions.strip-unit($emSize)), functions.strip-unit($emSize)), rem);
$big : functions.replace-unit(math.div(round(functions.strip-unit($bigSize) * functions.strip-unit($emSize)), functions.strip-unit($emSize)), rem);
$huge : functions.replace-unit(math.div(round(functions.strip-unit($hugeSize) * functions.strip-unit($emSize)), functions.strip-unit($emSize)), rem);
$massive : functions.replace-unit(math.div(round(functions.strip-unit($massiveSize) * functions.strip-unit($emSize)), functions.strip-unit($emSize)), rem);

// /* Relative units will get smaller as they are progressively nested */
// /* em */
$relativeMini : functions.replace-unit(math.div(round($miniSize * $emSize), $emSize), em);
$relativeTiny : functions.replace-unit(math.div(round($tinySize * $emSize), $emSize), em);
$relativeSmall : functions.replace-unit(math.div(round($smallSize * $emSize), $emSize), em);
$relativeMedium : functions.replace-unit(math.div(round($mediumSize * $emSize), $emSize), em);
$relativeLarge : functions.replace-unit(math.div(round($largeSize * $emSize), $emSize), em);
$relativeBig : functions.replace-unit(math.div(round($bigSize * $emSize), $emSize), em);
$relativeHuge : functions.replace-unit(math.div(round($hugeSize * $emSize), $emSize), em);
$relativeMassive : functions.replace-unit(math.div(round($massiveSize * $emSize), $emSize), em);

// /* Absolute units are the same size regardless of nesting */
// /* rem */
$absoluteMini : functions.replace-unit(math.div(round($miniSize * $emSize), $emSize), rem);
$absoluteTiny : functions.replace-unit(math.div(round($tinySize * $emSize), $emSize), rem);
$absoluteSmall : functions.replace-unit(math.div(round($smallSize * $emSize), $emSize), rem);
$absoluteMedium : functions.replace-unit(math.div(round($mediumSize * $emSize), $emSize), rem);
$absoluteLarge : functions.replace-unit(math.div(round($largeSize * $emSize), $emSize), rem);
$absoluteBig : functions.replace-unit(math.div(round($bigSize * $emSize), $emSize), rem);
$absoluteHuge : functions.replace-unit(math.div(round($hugeSize * $emSize), $emSize), rem);
$absoluteMassive : functions.replace-unit(math.div(round($massiveSize * $emSize), $emSize), rem);


/*-------------------
    Border Radius
--------------------*/

/* See Power-user section below
   for explanation of $px variables
*/

$relativeBorderRadius: $relative4px;
$absoluteBorderRadius: $u4px;

$defaultBorderRadius: $absoluteBorderRadius;

/*-------------------
    Brand Colors
--------------------*/



/*--------------
  Page Heading
---------------*/

$headerFontWeight : $bold;
$headerLineHeight : functions.replace-unit(math.div(18, 14), em);

$h1 : 37px; //unit((28 / $baseUnit), rem);
$h2 : 21px; //unit((24 / $baseUnit), rem);
$h3 : 18px; //unit((18 / $baseUnit), rem);
$h4 : 14px; //unit((15 / $baseUnit), rem);
$h5 : 12px; //unit((14 / $baseUnit), rem);

/*--------------
   Form Input
---------------*/

/* This adjusts the default form input across all elements */
$inputVerticalPadding : $relative11px;
$inputHorizontalPadding : $relative14px;
$inputPadding : $inputVerticalPadding $inputHorizontalPadding;

/* Line Height Default For Inputs in Browser (Descenders are 17px at 14px base em) */
$inputLineHeight: functions.replace-unit(math.div(17, 16), em);


/*-------------------
        Page
--------------------*/
$pageOverflowX : hidden;
$lineHeight : 1.4285em;

/*-------------------
      Paragraph
--------------------*/

$paragraphMargin: 0 0 1.25em;
$postParagraphMargin: 1.25em; // $TODO probably get rid of this
$paragraphLineHeight: 160%; //$lineHeight;

/*-------------------
       Links
--------------------*/

$linkUnderline : underline;
$linkHoverUnderline : underline;

/*-------------------
    Scroll Bars
--------------------*/

$useCustomScrollbars: true;
$customScrollbarWidth: 10px;
$customScrollbarHeight: 10px;
$trackBorderRadius: 0px;
$thumbBorderRadius: 5px;
$thumbTransition: color 0.2s ease;


/*-------------------
       Loader
--------------------*/

$loaderSize : $relativeBig;
$loaderSpeed : 0.6s;
$loaderLineWidth : 0.2em;


/*-------------------
     Transitions
--------------------*/

$defaultDuration : 0.1s;
$defaultEasing : ease;

/*-------------------
     Breakpoints
--------------------*/

$mobileBreakpoint : 320px;
$iPhoneBreakpoint : 390px;
$smallTabletBreakpoint : 666px;
$tabletBreakpoint : 768px;
$computerBreakpoint : 992px;
$largeMonitorBreakpoint : 1200px;
$widescreenMonitorBreakpoint : 1920px;

/*-------------------
       Accents
--------------------*/

/* Differentiating Neutrals */
$subtleGradient: linear-gradient(transparent, colors.$transparentBlack);

/* Differentiating Layers */
$subtleShadow: 0px 1px 2px 0 colors.$borderColor;
$floatingShadow: 0px 2px 4px 0px rgba(34, 36, 38, 0.12),
0px 2px 10px 0px rgba(34, 36, 38, 0.15);

/*******************************
           Power-User
*******************************/


/*-------------------
        Paths
--------------------*/

/* For source only. Modified in build for dist */
// Old, need to be moved into webfont and changed to iconsPath
$iconPath : '/src/images/icons';
// $iconsPath is the new icon location
$iconsPath : '/src/icons';
$flagPath : '/src/images/flags';
$imagePath : '/src/images/flags';
$fontPath : '/src/fonts';


/*-------------------
       Icons
--------------------*/

/* Maximum Glyph Width of Icon */
$iconWidth : 1.18em;



/*-------------------
      Borders
--------------------*/

$circularRadius : 500rem;

/*-------------------
    Derived Values
--------------------*/

/* Loaders Position Offset */
$loaderOffset : -(math.div($loaderSize, 2));
$loaderMargin : $loaderOffset 0em 0em $loaderOffset;

/* Rendered Scrollbar Width */
$scrollbarWidth: 17px;

/* Maximum Single Character Glyph Width, aka Capital "W" */
$glyphWidth: 1.1em;

/* Used to match floats with text */
$lineHeightOffset : math.div(($lineHeight - 1em), 2);
$headerLineHeightOffset : math.div(($headerLineHeight - 1em), 2);

/* Header Spacing */

$headerTopMargin : 2rem - functions.strip-unit($headerLineHeightOffset);
$headerBottomMargin : 1rem;
$headerMargin : $headerTopMargin 0em $headerBottomMargin;

/* Minimum Mobile Width */
$pageMinWidth : 320px;


/* Responsive */
$mediumMobileScreen : $iPhoneBreakpoint;
$largestMobileScreen : ($tabletBreakpoint - 1px);
$largestTabletScreen : ($computerBreakpoint - 1px);
$largestSmallMonitor : ($largeMonitorBreakpoint - 1px);
$largestLargeMonitor : ($widescreenMonitorBreakpoint - 1px);


/*******************************
             States
*******************************/

/*-------------------
      Disabled
--------------------*/

$disabledOpacity: 0.45;
$disabledTextColor: rgba(40, 40, 40, 0.3);
$invertedDisabledTextColor: rgba(225, 225, 225, 0.3);

/*-------------------
        Hover
--------------------*/

/*---  Shadows  ---*/
$floatingShadowHover: 0px 2px 4px 0px rgba(34, 36, 38, 0.15),
0px 2px 10px 0px rgba(34, 36, 38, 0.25);
