{"version":3,"file":"view/index.js","mappings":"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","sources":["webpack://@pewresearch/prc-platform-facets-context-provider/external window [\"wp\",\"interactivity\"]","webpack://@pewresearch/prc-platform-facets-context-provider/external window [\"wp\",\"url\"]","webpack://@pewresearch/prc-platform-facets-context-provider/external window [\"wp\",\"element\"]","webpack://@pewresearch/prc-platform-facets-context-provider/./src/view/store.js"],"sourcesContent":["var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"interactivity\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"url\"];","var __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","/**\n * WordPress Dependencies\n */\nimport { store, navigate, prefetch } from '@wordpress/interactivity';\nimport { addQueryArgs } from '@wordpress/url';\n\nexport default function registerStore() {\n\t// Get the Facet WP API??\n\tstore( {\n\t\tstate: {\n\t\t\tfacetsContextProvider: {\n\t\t\t\tmouseEnterPreFetchTimer: 500,\n\t\t\t\tnavigateTimer: 100,\n\t\t\t}\n\t\t},\n\t\tactions: {\n\t\t\tfacetsContextProvider: {\n\t\t\t\tonCheckboxMouseEnter: ({context, state, selectors, ref}) => {\n\t\t\t\t\tlet timeoutId = null;\n\n\t\t\t\t\ttimeoutId = setTimeout(() => {\n\t\t\t\t\t\t// convert an array to a comma separated string\n\t\t\t\t\t\tconst newUrl = selectors.facetsContextProvider.getUpdatedUrl({context, state});\n\t\t\t\t\t\tconsole.log('onCheckboxMouseEnter', newUrl, ref);\n\t\t\t\t\t\tprefetch(newUrl);\n\t\t\t\t\t}, state.facetsContextProvider.mouseEnterPreFetchTimer);\n\n\t\t\t\t\tref.addEventListener('mouseleave', () => {\n\t\t\t\t\t\tclearTimeout(timeoutId);\n\t\t\t\t\t}, { once: true });\n\t\t\t\t},\n\t\t\t\tonRadioMouseEnter: ({context, state, selectors, ref}) => {\n\t\t\t\t\tlet timeoutId = null;\n\n\t\t\t\t\ttimeoutId = setTimeout(() => {\n\t\t\t\t\t\t// convert an array to a comma separated string\n\t\t\t\t\t\tconst newUrl = selectors.facetsContextProvider.getUpdatedUrl({context, state});\n\t\t\t\t\t\tconsole.log('onRadioMouseEnter', newUrl, ref);\n\t\t\t\t\t\tprefetch(newUrl);\n\t\t\t\t\t}, state.facetsContextProvider.mouseEnterPreFetchTimer);\n\n\t\t\t\t\tref.addEventListener('mouseleave', () => {\n\t\t\t\t\t\tclearTimeout(timeoutId);\n\t\t\t\t\t}, { once: true });\n\t\t\t\t},\n\t\t\t\tonCheckboxChange: ({context, state, ref, selectors}) => {\n\t\t\t\t\tconst {id, value} = selectors.facetsContextProvider.getInputAttrs({ref});\n\t\t\t\t\tconst facetSlug = selectors.facetsContextProvider.getFacetSlug({context});\n\n\t\t\t\t\tif ( !state.facetsContextProvider.selected[facetSlug] ) {\n\t\t\t\t\t\tstate.facetsContextProvider.selected[facetSlug] = [];\n\t\t\t\t\t}\n\t\t\t\t\tif ( state.facetsContextProvider.selected[facetSlug].includes(value) ) {\n\t\t\t\t\t\tstate.facetsContextProvider.selected[facetSlug] = state.facetsContextProvider.selected[facetSlug].filter( item => item !== value );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.facetsContextProvider.selected[facetSlug] = [...state.facetsContextProvider.selected[facetSlug], value];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Mark the checkbox as checked on the context of the input checkbox block.\n\t\t\t\t\tcontext[id].isChecked = !context[id].isChecked;\n\t\t\t\t},\n\t\t\t\tonRadioChange: ({context, state, ref, selectors}) => {\n\t\t\t\t\tconst {id, value} = selectors.facetsContextProvider.getInputAttrs({ref});\n\t\t\t\t\tconst facetSlug = selectors.facetsContextProvider.getFacetSlug({context});\n\n\t\t\t\t\tif ( !state.facetsContextProvider.selected[facetSlug] ) {\n\t\t\t\t\t\tstate.facetsContextProvider.selected[facetSlug] = [];\n\t\t\t\t\t}\n\t\t\t\t\t// Because this is a radio we can only have one value selected at a time. So we can just set the value to the new value.\n\t\t\t\t\t// check if the value is already selected, if it is, then we need to remove it.\n\t\t\t\t\tif ( state.facetsContextProvider.selected[facetSlug].includes(value) ) {\n\t\t\t\t\t\tstate.facetsContextProvider.selected[facetSlug] = state.facetsContextProvider.selected[facetSlug].filter( item => item !== value );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.facetsContextProvider.selected[facetSlug] = [value];\n\t\t\t\t\t}\n\n\t\t\t\t\t// Mark the radio as checked on the context of the input radio block.\n\t\t\t\t\tcontext[id].isChecked = !context[id].isChecked;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tselectors: {\n\t\t\tfacetsContextProvider: {\n\t\t\t\tgetInputAttrs: ({ref}) => {\n\t\t\t\t\tlet id = ref.id;\n\t\t\t\t\tif ( ref.tagName === 'LABEL' ) {\n\t\t\t\t\t\tid = ref.parentElement.getAttribute('aria-labelledby');\n\t\t\t\t\t}\n\t\t\t\t\tlet value = ref.value;\n\t\t\t\t\tif ( ref.tagName === 'LABEL' ) {\n\t\t\t\t\t\tvalue = ref.parentElement.querySelector('input').value;\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\tid,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tgetSelected: ({state}) => {\n\t\t\t\t\treturn state.facetsContextProvider.selected;\n\t\t\t\t},\n\t\t\t\tgetFacetSlug: ({context}) => {\n\t\t\t\t\treturn `_${context.facetTemplate?.facetSlug}`;\n\t\t\t\t},\n\t\t\t\tgetUpdatedUrl: ({context, state}) => {\n\t\t\t\t\tconst tmp = {};\n\t\t\t\t\tObject.keys(state.facetsContextProvider.selected).forEach( key => {\n\t\t\t\t\t\tif ( Array.isArray(state.facetsContextProvider.selected[key]) ) {\n\t\t\t\t\t\t\ttmp[key] = state.facetsContextProvider.selected[key].join(',');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttmp[key] = state.facetsContextProvider.selected[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t// Double check tmp, if it has a key with empty value, remove it.\n\t\t\t\t\tObject.keys(tmp).forEach( key => {\n\t\t\t\t\t\tconsole.log(tmp[key]);\n\t\t\t\t\t\t// Check if tmp[key] is an empty string or an empty array.\n\t\t\t\t\t\tif ( tmp[key] === '' ) {\n\t\t\t\t\t\t\tdelete tmp[key];\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t// const stableUrl should be window.location.href without any query args.\n\t\t\t\t\tconst stableUrl = window.location.href.split('?')[0];\n\t\t\t\t\t// if stableUrl has /page/x/ in it, we need to remove that.\n\t\t\t\t\tconst stableUrlClean = stableUrl.replace(/\\/page\\/\\d+\\//, '/');\n\t\t\t\t\tconst newUrl = addQueryArgs( stableUrlClean, tmp );\n\t\t\t\t\tconsole.log(\"getUpdatedUrl\", stableUrlClean, tmp, newUrl);\n\t\t\t\t\treturn newUrl;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\teffects: {\n\t\t\tfacetsContextProvider: {\n\t\t\t\tonInit: async ({state, context, selectors}) => {\n\t\t\t\t\tconsole.log('facetsContextProvider Initializing...', 'state:', state, 'context:', context);\n\t\t\t\t},\n\t\t\t\tonSelection: async ({state, context, selectors}) => {\n\t\t\t\t\tconst selected = selectors.facetsContextProvider.getSelected({state});\n\t\t\t\t\t// Only if the selection has some values.\n\t\t\t\t\tif ( Object.keys(selected).length > 0 ) {\n\t\t\t\t\t\tconst newUrl = selectors.facetsContextProvider.getUpdatedUrl({context, state});\n\n\t\t\t\t\t\tconst timeout = setTimeout(()=> {\n\t\t\t\t\t\t\tstate.facetsContextProvider.isProcessing = true;\n\t\t\t\t\t\t\tconsole.log(\"Waiting here, we could do an animation...\");\n\t\t\t\t\t\t\tconsole.log(\"rendering diff results...\",  context, state, selectors, newUrl);\n\t\t\t\t\t\t}, state.facetsContextProvider.navigateTimer);\n\n\t\t\t\t\t\tawait navigate(newUrl);\n\n\t\t\t\t\t\tclearTimeout(timeout);\n\n\t\t\t\t\t\tstate.facetsContextProvider.isProcessing = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t});\n}\n"],"names":["window","store","state","facetsContextProvider","mouseEnterPreFetchTimer","navigateTimer","actions","onCheckboxMouseEnter","context","selectors","ref","timeoutId","setTimeout","newUrl","getUpdatedUrl","console","log","prefetch","addEventListener","clearTimeout","once","onRadioMouseEnter","onCheckboxChange","id","value","getInputAttrs","facetSlug","getFacetSlug","selected","includes","filter","item","isChecked","onRadioChange","tagName","parentElement","getAttribute","querySelector","getSelected","facetTemplate","tmp","Object","keys","forEach","key","Array","isArray","join","stableUrlClean","location","href","split","replace","addQueryArgs","effects","onInit","async","onSelection","length","timeout","isProcessing","navigate"],"sourceRoot":""}