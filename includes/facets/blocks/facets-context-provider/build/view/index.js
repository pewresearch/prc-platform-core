!function(){"use strict";var e=window.wp.interactivity,t=(window.wp.element,window.wp.url);(0,e.store)({state:{facetsContextProvider:{mouseEnterPreFetchTimer:500,navigateTimer:100}},actions:{facetsContextProvider:{onCheckboxMouseEnter:({context:t,state:o,selectors:r,ref:s})=>{let c=null;c=setTimeout((()=>{const c=r.facetsContextProvider.getUpdatedUrl({context:t,state:o});console.log("onCheckboxMouseEnter",c,s),(0,e.prefetch)(c)}),o.facetsContextProvider.mouseEnterPreFetchTimer),s.addEventListener("mouseleave",(()=>{clearTimeout(c)}),{once:!0})},onRadioMouseEnter:({context:t,state:o,selectors:r,ref:s})=>{let c=null;c=setTimeout((()=>{const c=r.facetsContextProvider.getUpdatedUrl({context:t,state:o});console.log("onRadioMouseEnter",c,s),(0,e.prefetch)(c)}),o.facetsContextProvider.mouseEnterPreFetchTimer),s.addEventListener("mouseleave",(()=>{clearTimeout(c)}),{once:!0})},onCheckboxChange:({context:e,state:t,ref:o,selectors:r})=>{const{id:s,value:c}=r.facetsContextProvider.getInputAttrs({ref:o}),n=r.facetsContextProvider.getFacetSlug({context:e});t.facetsContextProvider.selected[n]||(t.facetsContextProvider.selected[n]=[]),t.facetsContextProvider.selected[n].includes(c)?t.facetsContextProvider.selected[n]=t.facetsContextProvider.selected[n].filter((e=>e!==c)):t.facetsContextProvider.selected[n]=[...t.facetsContextProvider.selected[n],c],e[s].isChecked=!e[s].isChecked},onRadioChange:({context:e,state:t,ref:o,selectors:r})=>{const{id:s,value:c}=r.facetsContextProvider.getInputAttrs({ref:o}),n=r.facetsContextProvider.getFacetSlug({context:e});t.facetsContextProvider.selected[n]||(t.facetsContextProvider.selected[n]=[]),t.facetsContextProvider.selected[n].includes(c)?t.facetsContextProvider.selected[n]=t.facetsContextProvider.selected[n].filter((e=>e!==c)):t.facetsContextProvider.selected[n]=[c],e[s].isChecked=!e[s].isChecked}}},selectors:{facetsContextProvider:{getInputAttrs:({ref:e})=>{let t=e.id;"LABEL"===e.tagName&&(t=e.parentElement.getAttribute("aria-labelledby"));let o=e.value;return"LABEL"===e.tagName&&(o=e.parentElement.querySelector("input").value),{id:t,value:o}},getSelected:({state:e})=>e.facetsContextProvider.selected,getFacetSlug:({context:e})=>`_${e.facetTemplate?.facetSlug}`,getUpdatedUrl:({context:e,state:o})=>{const r={};Object.keys(o.facetsContextProvider.selected).forEach((e=>{Array.isArray(o.facetsContextProvider.selected[e])?r[e]=o.facetsContextProvider.selected[e].join(","):r[e]=o.facetsContextProvider.selected[e]})),Object.keys(r).forEach((e=>{console.log(r[e]),""===r[e]&&delete r[e]}));const s=window.location.href.split("?")[0].replace(/\/page\/\d+\//,"/"),c=(0,t.addQueryArgs)(s,r);return console.log("getUpdatedUrl",s,r,c),c}}},effects:{facetsContextProvider:{onInit:async({state:e,context:t,selectors:o})=>{console.log("facetsContextProvider Initializing...","state:",e,"context:",t)},onSelection:async({state:t,context:o,selectors:r})=>{const s=r.facetsContextProvider.getSelected({state:t});if(Object.keys(s).length>0){const s=r.facetsContextProvider.getUpdatedUrl({context:o,state:t}),c=setTimeout((()=>{t.facetsContextProvider.isProcessing=!0,console.log("Waiting here, we could do an animation..."),console.log("rendering diff results...",o,t,r,s)}),t.facetsContextProvider.navigateTimer);await(0,e.navigate)(s),clearTimeout(c),t.facetsContextProvider.isProcessing=!1}}}}})}();
//# sourceMappingURL=index.js.map