{"version":3,"file":"view.js","mappings":"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","sources":["webpack://@pewresearch/prc-platform-facets-context-provider/external import \"@wordpress/interactivity-router\"","webpack://@pewresearch/prc-platform-facets-context-provider/webpack/bootstrap","webpack://@pewresearch/prc-platform-facets-context-provider/webpack/runtime/define property getters","webpack://@pewresearch/prc-platform-facets-context-provider/webpack/runtime/hasOwnProperty shorthand","webpack://@pewresearch/prc-platform-facets-context-provider/external module \"@wordpress/interactivity\"","webpack://@pewresearch/prc-platform-facets-context-provider/./src/view.js"],"sourcesContent":["module.exports = import(\"@wordpress/interactivity-router\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"getElement\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getElement), [\"getServerState\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getServerState), [\"store\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.store) });","/**\n * WordPress Dependencies\n */\nimport { store, getElement, getServerState } from '@wordpress/interactivity';\n\nconst { addQueryArgs } = window.wp.url;\n\nconst { state, actions } = store('prc-platform/facets-context-provider', {\n\tstate: {\n\t\tmouseEnterPreFetchTimer: 500,\n\t\tnavigateTimer: 1000,\n\t\tepSortByDate: false,\n\t\tget getSelected() {\n\t\t\treturn state.selected;\n\t\t},\n\t\tget getServerSelected() {\n\t\t\treturn getServerState().selected;\n\t\t},\n\t\tget getUpdatedUrl() {\n\t\t\tif (undefined === state.selected) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn actions.constructNewUrl(state.selected);\n\t\t},\n\t},\n\tactions: {\n\t\t/**\n\t\t * Construct the new url to route to by adding the selected facets to the query args.\n\t\t * @param {boolean|object} selected\n\t\t * @return\n\t\t */\n\t\tconstructNewUrl(selected = false) {\n\t\t\tconst tmp = {};\n\t\t\tif (false === selected) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Construct a comma separated string for each selected facet.\n\t\t\tObject.keys(selected).forEach((key) => {\n\t\t\t\t// If the key already has ep_ prefixed then add it directly\n\t\t\t\tif (key.startsWith(state.urlKey)) {\n\t\t\t\t\ttmp[key] = selected[key];\n\t\t\t\t} else if (Array.isArray(selected[key])) {\n\t\t\t\t\ttmp[`${state.urlKey}${key}`] = selected[key].join(',');\n\t\t\t\t} else {\n\t\t\t\t\ttmp[`${state.urlKey}${key}`] = selected[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\t// Double check tmp, if it has a key with empty value, remove it.\n\t\t\tObject.keys(tmp).forEach((key) => {\n\t\t\t\t// Check if tmp[key] is an empty string or an empty array.\n\t\t\t\t// CHeck if tmp[key] is equal to an object...\n\t\t\t\tif (tmp[key] === '' || typeof tmp[key] === 'object') {\n\t\t\t\t\tdelete tmp[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\t// Remove any existing query args from the url.\n\t\t\tconst stableUrl = window.location.href.split('?')[0];\n\t\t\t// Remove any references to /page/1/ or /page/2/ etc,\n\t\t\t// we need to send the user back to the first page.\n\t\t\tconst stableUrlClean = stableUrl.replace(/\\/page\\/\\d+\\//, '/');\n\t\t\treturn addQueryArgs(stableUrlClean, tmp);\n\t\t},\n\t\t/**\n\t\t * Update the results by using the router to navigate to the new url.\n\t\t * Scroll's the user to the top of the page, gracefully.\n\t\t */\n\t\t*updateResults() {\n\t\t\tconst currentUrl = window.location.href;\n\t\t\tconst newUrl = state.getUpdatedUrl;\n\n\t\t\tif (newUrl === currentUrl) {\n\t\t\t\tconsole.log(\n\t\t\t\t\t'Facets_Context_Provider -> updateResults::',\n\t\t\t\t\t'no change in url'\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconsole.log(\n\t\t\t\t'Facets_Context_Provider -> updateResults::',\n\t\t\t\tstate,\n\t\t\t\tcurrentUrl,\n\t\t\t\tnewUrl\n\t\t\t);\n\n\t\t\tstate.isProcessing = true;\n\n\t\t\t// Process the new url. This will hit the server and return the new state.\n\t\t\tconst router = yield import('@wordpress/interactivity-router');\n\t\t\tyield router.actions.navigate(newUrl);\n\n\t\t\tconsole.log(\n\t\t\t\t'YIELD: Facets_Context_Provider <- updateResults::',\n\t\t\t\tgetServerState(),\n\t\t\t\tcurrentUrl,\n\t\t\t\tnewUrl\n\t\t\t);\n\n\t\t\t// Scroll to the top of the page.\n\t\t\tconst { ref } = getElement();\n\t\t\tif (ref) {\n\t\t\t\tref.scrollIntoView({\n\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t\tblock: 'start',\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twindow.scrollTo({\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tstate.isProcessing = false;\n\t\t},\n\t\t/**\n\t\t * Check if the newUrl is already in the prefetched array, if not add\n\t\t * it and then prefetch the newUrl.\n\t\t * @param {string} newUrl\n\t\t * @return\n\t\t */\n\t\t*prefetch(newUrl) {\n\t\t\tconst router = yield import('@wordpress/interactivity-router');\n\t\t\tif (state.prefetched.includes(newUrl)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tstate.prefetched.push(newUrl);\n\t\t\tyield router.actions.prefetch(newUrl);\n\t\t},\n\t\t/**\n\t\t * Clear a facet or a facet value from the selected state.\n\t\t * @param {string}     facetSlug\n\t\t * @param {string|int} facetValue\n\t\t * @return\n\t\t */\n\t\tonClear: (facetSlug, facetValue = null) => {\n\t\t\t// Because onClear actions occur after routing\n\t\t\t// has occured we need to get the selected from the server state.\n\t\t\tconst currentlySelected = state.selected;\n\t\t\tconsole.log('parent onClear', {\n\t\t\t\tfacetSlug,\n\t\t\t\tfacetValue,\n\t\t\t\tcurrentlySelected,\n\t\t\t});\n\n\t\t\t// If there is no facetSlug then clear all selected facets and run updateResults.\n\t\t\tif (!facetSlug) {\n\t\t\t\tstate.selected = {};\n\t\t\t\tactions.updateResults();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If there is a facet value remove it from the given\n\t\t\t// facetSlug but keep the other selected facets.\n\t\t\tif (facetValue) {\n\t\t\t\tcurrentlySelected[facetSlug] = currentlySelected[\n\t\t\t\t\tfacetSlug\n\t\t\t\t].filter((item) => item !== facetValue);\n\t\t\t\tstate.selected = { ...currentlySelected };\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// // Clear all inputs that have the value of the facetSlug.\n\t\t\t// Object.keys(state).find((key) => {\n\t\t\t// \tif (\n\t\t\t// \t\ttypeof state[key] === 'object' &&\n\t\t\t// \t\ttmp[facetSlug].includes(state[key]?.value)\n\t\t\t// \t) {\n\t\t\t// \t\tstate[key].checked = false;\n\t\t\t// \t}\n\t\t\t// });\n\t\t\tconsole.log('pre check:', { currentlySelected, facetSlug });\n\n\t\t\tcurrentlySelected[facetSlug] = [];\n\t\t\tstate.selected = { ...currentlySelected };\n\t\t\treturn state.selected;\n\t\t},\n\t},\n\tcallbacks: {\n\t\t/**\n\t\t * When a facet is selected, we need to update the results.\n\t\t */\n\t\tonSelection() {\n\t\t\tconst selected = state.getSelected;\n\t\t\tconst keysLength = Object.keys(selected).length;\n\t\t\t// No selections? Disable updates.\n\t\t\tif (keysLength <= 0) {\n\t\t\t\tconsole.log(\n\t\t\t\t\t'Facets_Context_Provider -> onSelection:: FALSE NO SELECTIONS'\n\t\t\t\t);\n\t\t\t\tstate.isDisabled = true;\n\t\t\t} else {\n\t\t\t\t// Once we have some selections, lets run a refresh.\n\t\t\t\tconsole.log('Facets_Context_Provider -> onSelection::', state);\n\t\t\t\tactions.updateResults();\n\t\t\t\tstate.isDisabled = false;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * When the epSortByDate flag is toggled on add ep_sort__by_date\n\t\t * to selected and run updateResults. This will hit the server\n\t\t * and return the new post list sorted by date.\n\t\t */\n\t\tonEpSortByUpdate() {\n\t\t\t// if epSortByDate is true then add to selected 'ep_sort__by_date' and run updateResults\n\t\t\tif (state.epSortByDate) {\n\t\t\t\tstate.selected.ep_sort__by_date = true;\n\t\t\t} else {\n\t\t\t\tdelete state.selected.ep_sort__by_date;\n\t\t\t}\n\t\t},\n\t},\n});\n"],"names":["module","exports","import","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__","x","addQueryArgs","window","wp","url","state","actions","store","mouseEnterPreFetchTimer","navigateTimer","epSortByDate","getSelected","selected","getServerSelected","getServerState","getUpdatedUrl","constructNewUrl","tmp","keys","forEach","startsWith","urlKey","Array","isArray","join","stableUrlClean","location","href","split","replace","updateResults","currentUrl","newUrl","console","log","isProcessing","router","navigate","ref","getElement","scrollIntoView","behavior","block","scrollTo","top","prefetch","prefetched","includes","push","onClear","facetSlug","facetValue","currentlySelected","filter","item","callbacks","onSelection","length","isDisabled","onEpSortByUpdate","ep_sort__by_date"],"sourceRoot":""}