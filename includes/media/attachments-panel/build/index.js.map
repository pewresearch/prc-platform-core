{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@pewresearch/prc-platform-attachments-panel/webpack/runtime/chunk loaded","webpack://@pewresearch/prc-platform-attachments-panel/external window \"React\"","webpack://@pewresearch/prc-platform-attachments-panel/external window [\"wp\",\"plugins\"]","webpack://@pewresearch/prc-platform-attachments-panel/external window [\"wp\",\"element\"]","webpack://@pewresearch/prc-platform-attachments-panel/external window [\"wp\",\"components\"]","webpack://@pewresearch/prc-platform-attachments-panel/external window [\"wp\",\"editPost\"]","webpack://@pewresearch/prc-platform-attachments-panel/external window \"prcHooks\"","webpack://@pewresearch/prc-platform-attachments-panel/external window [\"wp\",\"apiFetch\"]","webpack://@pewresearch/prc-platform-attachments-panel/external window [\"wp\",\"editor\"]","webpack://@pewresearch/prc-platform-attachments-panel/external window [\"wp\",\"blockEditor\"]","webpack://@pewresearch/prc-platform-attachments-panel/external window [\"wp\",\"blocks\"]","webpack://@pewresearch/prc-platform-attachments-panel/external window [\"wp\",\"data\"]","webpack://@pewresearch/prc-platform-attachments-panel/external window [\"wp\",\"coreData\"]","webpack://@pewresearch/prc-platform-attachments-panel/external window [\"wp\",\"mediaUtils\"]","webpack://@pewresearch/prc-platform-attachments-panel/./src/context.js","webpack://@pewresearch/prc-platform-attachments-panel/external window [\"wp\",\"i18n\"]","webpack://@pewresearch/prc-platform-attachments-panel/./src/drag-and-drop-zone.jsx","webpack://@pewresearch/prc-platform-attachments-panel/external window \"classnames\"","webpack://@pewresearch/prc-platform-attachments-panel/./src/image.jsx","webpack://@pewresearch/prc-platform-attachments-panel/./src/file.jsx","webpack://@pewresearch/prc-platform-attachments-panel/./src/attachments-list.jsx","webpack://@pewresearch/prc-platform-attachments-panel/./src/attachments-panel.jsx","webpack://@pewresearch/prc-platform-attachments-panel/./src/index.js","webpack://@pewresearch/prc-platform-attachments-panel/webpack/bootstrap","webpack://@pewresearch/prc-platform-attachments-panel/webpack/runtime/compat get default export","webpack://@pewresearch/prc-platform-attachments-panel/webpack/runtime/define property getters","webpack://@pewresearch/prc-platform-attachments-panel/webpack/runtime/hasOwnProperty shorthand","webpack://@pewresearch/prc-platform-attachments-panel/webpack/runtime/jsonp chunk loading","webpack://@pewresearch/prc-platform-attachments-panel/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"plugins\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"editPost\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcHooks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"apiFetch\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"editor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"mediaUtils\"];","/* eslint-disable max-lines-per-function */\n/* eslint-disable camelcase */\n/**\n * External Dependencies\n */\nimport { useDebounce } from '@prc/hooks';\n\n/**\n * WordPress dependencies\n */\nimport {\n\tuseState,\n\tuseContext,\n\tcreateContext,\n\tuseEffect,\n\tuseMemo,\n} from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\nimport { store as editorStore } from '@wordpress/editor';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { createBlock } from '@wordpress/blocks';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { uploadMedia } from '@wordpress/media-utils';\n\nconst attachmentsContext = createContext();\n\n// eslint-disable-next-line no-undef\nconst { media } = window.wp;\n\nfunction useProvideAttachments() {\n\tconst {\n\t\tpostId,\n\t\tpostType,\n\t\timageBlocks = [],\n\t\tcoverBlocks = [],\n\t\tchartBlocks = [],\n\t\tvideoBlocks = [],\n\t\tgetBlockInsertionPoint,\n\t\tselectedBlockClientId,\n\t\tselectedBlockIsImageBlock,\n\t\tselectedBlockAttrs,\n\t} = useSelect(\n\t\t(select) => ({\n\t\t\tpostType: select(editorStore).getCurrentPostType(),\n\t\t\tpostId: select(editorStore).getCurrentPostId(),\n\t\t\timageBlocks: select(blockEditorStore)\n\t\t\t\t.getBlocks()\n\t\t\t\t.filter((block) => 'core/image' === block.name),\n\t\t\tcoverBlocks: select(blockEditorStore)\n\t\t\t\t.getBlocks()\n\t\t\t\t.filter(\n\t\t\t\t\t(block) =>\n\t\t\t\t\t\t'core/cover' === block.name &&\n\t\t\t\t\t\t'image' === block.attributes.backgroundType\n\t\t\t\t),\n\t\t\tgetBlockInsertionPoint:\n\t\t\t\tselect(blockEditorStore).getBlockInsertionPoint,\n\t\t\tselectedBlockClientId:\n\t\t\t\tselect(blockEditorStore).getSelectedBlockClientId(),\n\t\t\tselectedBlockIsImageBlock:\n\t\t\t\tselect(blockEditorStore).getSelectedBlock()?.name ===\n\t\t\t\t'core/image',\n\t\t\tselectedBlockAttrs:\n\t\t\t\tselect(blockEditorStore).getSelectedBlock()?.attributes,\n\t\t}),\n\t\t[]\n\t);\n\tconst { insertBlock, replaceBlock } = useDispatch(blockEditorStore);\n\n\tconst [selected, setSelected] = useState(null);\n\tconst [attachments, setAttachments] = useState([]);\n\tconst [searchTerm, setSearchTerm] = useState('');\n\tconst debouncedSearchTerm = useDebounce(searchTerm, 500);\n\tconst [processing, toggleProcessing] = useState(false);\n\tconst [loading, toggleLoading] = useState(true);\n\n\tconst [meta, setMeta] = useEntityProp('postType', postType, 'meta');\n\n\tconst updateAttachments = () => {\n\t\tif ('number' === typeof postId && false === processing) {\n\t\t\ttoggleProcessing(true);\n\t\t\tapiFetch({\n\t\t\t\tpath: `/prc-api/v3/attachments-panel/?postId=${postId}`,\n\t\t\t}).then((data) => {\n\t\t\t\tconsole.log(\n\t\t\t\t\t'Objects found in attachments rest request...',\n\t\t\t\t\tdata\n\t\t\t\t);\n\t\t\t\tsetAttachments([...data]);\n\t\t\t\ttoggleProcessing(false);\n\t\t\t});\n\t\t}\n\t};\n\n\tconst onDropImage = (filesList) => {\n\t\tconsole.log('onDropImage', filesList, postId);\n\t\t// We need to ensure that the parent is set before or after uploading...\n\t\tuploadMedia({\n\t\t\tallowedTypes: ['image'],\n\t\t\tfilesList,\n\t\t\tadditionalData: {\n\t\t\t\tpost: postId,\n\t\t\t},\n\t\t\tonFileChange(a) {\n\t\t\t\tconsole.log('onFileChange', a);\n\t\t\t\tupdateAttachments();\n\t\t\t},\n\t\t\tonError(message) {\n\t\t\t\tconsole.error(message);\n\t\t\t},\n\t\t\twpAllowedMimeTypes: {\n\t\t\t\tpng: 'image/png',\n\t\t\t\t'jpg|jpeg|jpe': 'image/jpeg',\n\t\t\t\twebp: 'image/webp',\n\t\t\t},\n\t\t});\n\t};\n\n\tconst handleImageInsertion = (id, url, size) => {\n\t\tconst insertionIndex = getBlockInsertionPoint().index;\n\t\tconst newImageBlock = createBlock('core/image', {\n\t\t\tid,\n\t\t\turl,\n\t\t\tsizeSlug: size,\n\t\t});\n\t\tinsertBlock(newImageBlock, insertionIndex);\n\t};\n\n\tconst handleImageReplacement = (id, url) => {\n\t\t// Check that what we're replacing is actually an image.\n\t\tif (selectedBlockIsImageBlock) {\n\t\t\t// get the sizeSlug from the existing block if it exists..., otherwise default to 640-wide\n\t\t\tconst sizeSlug = selectedBlockAttrs.sizeSlug || '640-wide';\n\t\t\tconst attrs = selectedBlockAttrs;\n\t\t\tattrs.id = id;\n\t\t\tattrs.url = url;\n\t\t\tattrs.sizeSlug = sizeSlug;\n\t\t\tconst newImageBlock = createBlock('core/image', { ...attrs });\n\t\t\treplaceBlock(selectedBlockClientId, newImageBlock);\n\t\t}\n\t};\n\n\tconst mediaEditor = useMemo(() => {\n\t\treturn media({\n\t\t\ttitle: 'Edit Attachments',\n\t\t\tbutton: {\n\t\t\t\ttext: 'Update',\n\t\t\t},\n\t\t\tlibrary: {\n\t\t\t\tuploadedTo: postId,\n\t\t\t\tselected: [selected],\n\t\t\t},\n\t\t});\n\t}, [postId, selected]);\n\n\t// When the media library closes, refresh the attachments.\n\tmediaEditor.on('close', () => {\n\t\tupdateAttachments();\n\t});\n\n\tconst openMediaLibrary = (attachmentId = null) => {\n\t\t// set the selected to...\n\t\tsetSelected(attachmentId);\n\t\tmediaEditor.open();\n\t\tmediaEditor.on('close', () => {\n\t\t\tsetSelected(null);\n\t\t});\n\t};\n\n\tconst insertedImageIds = useMemo(() => {\n\t\tconsole.log(\n\t\t\t'mergeBlocksAndReturnIdClientPairs for insertedImageIds...',\n\t\t\tcoverBlocks,\n\t\t\timageBlocks\n\t\t);\n\t\tconst imageBlockIds = {};\n\t\tif (0 !== imageBlocks.length) {\n\t\t\timageBlocks.forEach((block) => {\n\t\t\t\timageBlockIds[block.attributes.id] = {\n\t\t\t\t\tclientId: block.clientId,\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t\tconst coverBlockIds = {};\n\t\tif (0 !== coverBlocks.length) {\n\t\t\tcoverBlocks.forEach((block) => {\n\t\t\t\tcoverBlockIds[block.attributes.id] = {\n\t\t\t\t\tclientId: block.clientId,\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\n\t\t// merge the imageBlockIds and coverBlockIds objects into one object\n\t\treturn { ...imageBlockIds, ...coverBlockIds };\n\t}, [coverBlocks, imageBlocks]);\n\n\t/**\n\t * Checks for unused images attached to the post but not present in the editor.\n\t * This is just to let the user know that they have unused images.\n\t */\n\tconst flashPrePublishWarning = useMemo(() => {\n\t\tconsole.log('insertedImageIds has changed');\n\t\tif (0 < attachments.length) {\n\t\t\tconst aIds = attachments.map((d) => d.id);\n\t\t\tconst iIds = Object.keys(insertedImageIds);\n\n\t\t\t// If there are any values from aIds that are not in iIds, then we have an unused image so return true.\n\t\t\tif (0 < aIds.filter((a) => !iIds.includes(a.toString())).length) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\treturn false;\n\t}, [attachments, insertedImageIds]);\n\n\t/**\n\t * When imageids change or on init update attachments.\n\t */\n\tuseEffect(() => {\n\t\tconsole.log(\"attachments' effect...\");\n\t\tupdateAttachments();\n\t}, [postId]);\n\n\t/**\n\t * Handle toggling the loading state.\n\t */\n\tuseEffect(() => {\n\t\tif (0 < attachments.length) {\n\t\t\ttoggleLoading(false);\n\t\t} else {\n\t\t\ttoggleLoading(true);\n\t\t}\n\t}, [attachments]);\n\n\treturn {\n\t\tpostId,\n\t\tpostType,\n\t\tinsertedImageIds,\n\t\tattachments,\n\t\tloading,\n\t\tflashPrePublishWarning,\n\t\tsearchTerm,\n\t\tdebouncedSearchTerm,\n\t\tsetSearchTerm,\n\t\tonDropImage,\n\t\thandleImageInsertion,\n\t\thandleImageReplacement,\n\t\tmediaEditor,\n\t\topenMediaLibrary,\n\t};\n}\n\n// Hook for child components to get the context object ...\n// ... and re-render when it changes.\nconst useAttachments = () => useContext(attachmentsContext);\n\n// Available to any child component that calls useAttachments()\nfunction ProvideAttachments({ children }) {\n\tconst provider = useProvideAttachments();\n\treturn (\n\t\t<attachmentsContext.Provider value={provider}>\n\t\t\t{children}\n\t\t</attachmentsContext.Provider>\n\t);\n}\n\nexport { ProvideAttachments, useAttachments };\nexport default ProvideAttachments;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { DropZone } from '@wordpress/components';\nimport { MediaUploadCheck } from '@wordpress/block-editor';\n\n/**\n * Internal Dependencies\n */\nimport { useAttachments } from './context';\n\nfunction DragAndDropZone() {\n\tconst { onDropImage } = useAttachments();\n\treturn (\n\t\t<MediaUploadCheck\n\t\t\tfallback={__(\n\t\t\t\t`Drag and drop your files here and they will be attached to this post.`\n\t\t\t)}\n\t\t>\n\t\t\t<DropZone\n\t\t\t\tonFilesDrop={(a) => onDropImage(a)}\n\t\t\t\tonHTMLDrop={(b) => console.log('onHTMLDrop...', b)}\n\t\t\t\tonDrop={(c) => console.log('onDrop...', c)}\n\t\t\t/>\n\t\t</MediaUploadCheck>\n\t);\n}\n\nexport default DragAndDropZone;\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"classnames\"];","/**\n * External Dependencies\n */\nimport classNames from 'classnames';\nimport { useKeyPress } from '@prc/hooks';\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { useState, useEffect, useRef } from '@wordpress/element';\nimport { useDispatch } from '@wordpress/data';\nimport {\n\tBaseControl,\n\tTooltip,\n\tSelectControl,\n\tModal,\n} from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport { useAttachments } from './context';\n\nconst IMAGE_SIZES = [\n\t{ label: '200 Wide', value: '200-wide' },\n\t{ label: '200 Wide', value: '200-wide' },\n\t{ label: '260 Wide', value: '260-wide' },\n\t{ label: '310 Wide', value: '310-wide' },\n\t{ label: '420 Wide', value: '420-wide' },\n\t{ label: '640 Wide', value: '640-wide' },\n\t{ label: '740 Wide', value: '740-wide' },\n\t{ label: '1400 Wide', value: '1400-wide' },\n];\n\nfunction Image({ id, url, title, type }) {\n\tconst { insertedImageIds, handleImageInsertion, handleImageReplacement } =\n\t\tuseAttachments();\n\tconst { selectBlock } = useDispatch(blockEditorStore);\n\n\tconst isActive = Object.keys(insertedImageIds).includes(id.toString());\n\tconst [modalActive, toggleModal] = useState(false);\n\tconst leftShiftKeyPressed = useKeyPress('Shift');\n\tconst leftOptKeyPressed = useKeyPress('Alt');\n\n\t// const ref = useRef(null);\n\n\t// const handleRightClick = (ev) => {\n\t// \tev.preventDefault();\n\t// \talert('success!');\n\t// \t// Open image editor...\n\t// \treturn false;\n\t// };\n\n\t// useEffect(() => {\n\t// \tconst img = ref.current;\n\t// \t// subscribe event\n\t// \timg.addEventListener('contextmenu', handleRightClick, false);\n\t// \treturn () => {\n\t// \t\t// unsubscribe event\n\t// \t\timg.removeEventListener('contextmenu', handleRightClick);\n\t// \t};\n\t// }, []);\n\n\treturn (\n\t\t<BaseControl>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tkey={id}\n\t\t\t\tclassName={classNames('prc-attachments-list__image', {\n\t\t\t\t\t'prc-attachments-list__image--in-use': isActive,\n\t\t\t\t})}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tif (isActive) {\n\t\t\t\t\t\tselectBlock(insertedImageIds[id].clientId);\n\t\t\t\t\t} else if (leftShiftKeyPressed) {\n\t\t\t\t\t\thandleImageInsertion(id, url, '640-wide');\n\t\t\t\t\t} else if (leftOptKeyPressed) {\n\t\t\t\t\t\thandleImageReplacement(id, url);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoggleModal(true);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<img src={url} alt=\"A attachment in the editor\" />\n\t\t\t\t<div>{title}</div>\n\t\t\t</button>\n\t\t\t{modalActive && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={__('Insert Image Into Editor', 'prc-block-plugins')}\n\t\t\t\t\tonRequestClose={() => toggleModal(false)}\n\t\t\t\t>\n\t\t\t\t\t<SelectControl\n\t\t\t\t\t\tlabel=\"Select Image Size\"\n\t\t\t\t\t\tvalue={null}\n\t\t\t\t\t\toptions={IMAGE_SIZES}\n\t\t\t\t\t\tonChange={(newSize) =>\n\t\t\t\t\t\t\thandleImageInsertion(id, url, newSize)\n\t\t\t\t\t\t}\n\t\t\t\t\t/>\n\t\t\t\t</Modal>\n\t\t\t)}\n\t\t</BaseControl>\n\t);\n}\n\nexport default Image;\n","/**\n * External Dependencies\n */\nimport classNames from 'classnames';\nimport { useKeyPress } from '@prc/hooks';\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\nimport { useState, useEffect, useRef } from '@wordpress/element';\nimport { useDispatch } from '@wordpress/data';\nimport {\n\tBaseControl,\n\tTooltip,\n\tSelectControl,\n\tModal,\n} from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport { useAttachments } from './context';\n\nfunction File({ id, url, title, type }) {\n\tconst { openMediaLibrary } = useAttachments();\n\treturn (\n\t\t<BaseControl>\n\t\t\t<button\n\t\t\t\ttype=\"button\"\n\t\t\t\tkey={id}\n\t\t\t\tclassName={classNames('prc-attachments-list__file')}\n\t\t\t\tonClick={() => {\n\t\t\t\t\topenMediaLibrary(id);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div>{title}</div>\n\t\t\t</button>\n\t\t</BaseControl>\n\t);\n}\n\nexport default File;\n","/**\n * External Dependencies\n */\nimport { imgSrcToBlob } from 'blob-util';\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport {\n\tButton,\n\tBaseControl,\n\tPanelBody,\n\tSpinner,\n\tTextControl,\n\tCardDivider,\n} from '@wordpress/components';\nimport { Fragment } from '@wordpress/element';\nimport apiFetch from '@wordpress/api-fetch';\nimport { useSelect, select } from '@wordpress/data';\nimport { uploadMedia } from '@wordpress/media-utils';\n\n/**\n * Internal Dependencies\n */\nimport { useAttachments } from './context';\nimport DragAndDropZone from './drag-and-drop-zone';\nimport Image from './image';\nimport File from './file';\n\nconst fetchImagesFromLegacyContent = (postId, postType = 'post') => {\n\t// using getEntityRecord from select('core') lets get the meta for this postId and then get the dt_original_post_id and dt_original_blog_id from that and set them as legacyPostId and legacyBlogId accordingly...\n\tlet legacyPostId = 0;\n\tlet legacyBlogId = 0;\n\n\tconst post = select('core').getEntityRecord('postType', postType, postId);\n\tif (post) {\n\t\tconsole.log('post...', post.meta?.dt_original_post_id);\n\t\tlegacyPostId = post.meta?.dt_original_post_id;\n\t\tlegacyBlogId = post.meta?.dt_original_blog_id;\n\t}\n\t// Make a request to the WordPress REST API\n\tfetch(\n\t\t`https://prc-platform.vipdev.lndo.site/religion/wp-json/wp/v2/posts/${legacyPostId}?_fields=content`\n\t)\n\t\t.then((response) => response.json())\n\t\t.then((data) => {\n\t\t\tconst imagesArray = [];\n\t\t\tconst content = data.content.rendered;\n\t\t\tconst parser = new DOMParser();\n\t\t\tconst htmlDoc = parser.parseFromString(content, 'text/html');\n\t\t\tconst figures = htmlDoc.querySelectorAll('figure');\n\n\t\t\tfigures.forEach((figure) => {\n\t\t\t\tconst img = figure.querySelector('img');\n\t\t\t\tif (img) {\n\t\t\t\t\tconst src = img.getAttribute('src');\n\t\t\t\t\tconst figureClass = figure.getAttribute('class');\n\t\t\t\t\tconst aTag = figure.querySelector('a');\n\n\t\t\t\t\tlet id;\n\t\t\t\t\tconst regexClass = /wp-image-(\\d+)/;\n\t\t\t\t\tconst matchClass = figureClass.match(regexClass);\n\t\t\t\t\tif (matchClass) {\n\t\t\t\t\t\tid = matchClass[1];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst rel = aTag ? aTag.getAttribute('rel') : null;\n\t\t\t\t\t\tconst regexRel = /wp-att-(\\d+)/;\n\t\t\t\t\t\tconst matchRel = rel ? rel.match(regexRel) : null;\n\t\t\t\t\t\tif (matchRel) {\n\t\t\t\t\t\t\tid = matchRel[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (id) {\n\t\t\t\t\t\timagesArray.push({ src, id });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tconsole.log('images inside content...', imagesArray);\n\t\t\tif (0 < imagesArray.length) {\n\t\t\t\tloadListOfImageUrlsIntoMediaLibrary(imagesArray, postId)\n\t\t\t\t\t.then((success) => console.log('success', success))\n\t\t\t\t\t.catch((error) => console.error('error', error));\n\t\t\t}\n\t\t})\n\t\t.catch((error) => console.error(error));\n};\n\nconst loadListOfImageUrlsIntoMediaLibrary = (\n\timagesArray,\n\tpostId,\n\twhenDone = () => {}\n) => {\n\tconsole.log(\n\t\t'imagesArray...',\n\t\timagesArray.map((image) => image.src)\n\t);\n\treturn new Promise((resolve, reject) => {\n\t\tapiFetch({\n\t\t\tpath: '/prc-api/v3/migration-tools/migrate-attachments',\n\t\t\tmethod: 'POST',\n\t\t\tdata: {\n\t\t\t\turls: imagesArray.map((image) => image.src),\n\t\t\t\tpostId,\n\t\t\t},\n\t\t})\n\t\t\t.then((data) => {\n\t\t\t\tresolve(data);\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\treject(error);\n\t\t\t});\n\t});\n};\n\nfunction Images() {\n\tconst { attachments, loading, debouncedSearchTerm } = useAttachments();\n\n\tconst images = attachments.filter((attachment) =>\n\t\tattachment.type.startsWith('image/')\n\t);\n\t// Sort attachments by title\n\tconst sortedAttachments = images.sort((a, b) => {\n\t\tif (a.title.toLowerCase() < b.title.toLowerCase()) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a.title.toLowerCase() > b.title.toLowerCase()) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n\n\tconst filteredAttachments = sortedAttachments.filter(\n\t\t(attachment) =>\n\t\t\t'' === debouncedSearchTerm ||\n\t\t\tattachment.title\n\t\t\t\t.toLowerCase()\n\t\t\t\t.includes(debouncedSearchTerm.toLowerCase())\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t{loading ? (\n\t\t\t\t<Spinner />\n\t\t\t) : (\n\t\t\t\tfilteredAttachments.map((image) => <Image {...image} />)\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nfunction Files() {\n\tconst { attachments, loading, debouncedSearchTerm } = useAttachments();\n\n\tconst files = attachments.filter((attachment) =>\n\t\tattachment.type.startsWith('application/')\n\t);\n\t// Sort attachments by title\n\tconst sortedAttachments = files.sort((a, b) => {\n\t\tif (a.title.toLowerCase() < b.title.toLowerCase()) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (a.title.toLowerCase() > b.title.toLowerCase()) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t});\n\n\tconst filteredAttachments = sortedAttachments.filter(\n\t\t(attachment) =>\n\t\t\t'' === debouncedSearchTerm ||\n\t\t\tattachment.title\n\t\t\t\t.toLowerCase()\n\t\t\t\t.includes(debouncedSearchTerm.toLowerCase())\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t{loading ? (\n\t\t\t\t<Spinner />\n\t\t\t) : (\n\t\t\t\tfilteredAttachments.map((file) => <File {...file} />)\n\t\t\t)}\n\t\t</div>\n\t);\n}\n\nfunction AttachmentsList() {\n\tconst { attachments, searchTerm, setSearchTerm, mediaEditor } =\n\t\tuseAttachments();\n\tconst postId = useSelect((select) =>\n\t\tselect('core/editor').getCurrentPostId()\n\t);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<PanelBody\n\t\t\t\ttitle={__('Attachments')}\n\t\t\t\tinitialOpen\n\t\t\t\tclassName=\"prc-attachments-list\"\n\t\t\t>\n\t\t\t\t<BaseControl\n\t\t\t\t\tid=\"prc-media-zone\"\n\t\t\t\t\tlabel={__(\n\t\t\t\t\t\t'Drag and drop images to attach them to the post. Click on an image to select the image size to insert into the editor, or \"shift + click\" an image to insert at 640-wide.',\n\t\t\t\t\t\t'prc-block-plugins'\n\t\t\t\t\t)}\n\t\t\t\t>\n\t\t\t\t\t{0 < attachments.length && (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\tonClick={() => mediaEditor.open()}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tEdit Attachments\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<CardDivider />\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t)}\n\t\t\t\t\t<TextControl\n\t\t\t\t\t\tlabel={__('Filter Attachments')}\n\t\t\t\t\t\tvalue={searchTerm}\n\t\t\t\t\t\tonChange={(value) => setSearchTerm(value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<DragAndDropZone />\n\t\t\t\t</BaseControl>\n\t\t\t</PanelBody>\n\t\t\t<PanelBody\n\t\t\t\ttitle={__('Images')}\n\t\t\t\tinitialOpen={attachments.length > 0}\n\t\t\t\tclassName=\"prc-attachments-list__images\"\n\t\t\t>\n\t\t\t\t<Images />\n\t\t\t</PanelBody>\n\t\t\t<PanelBody\n\t\t\t\ttitle={__('Files')}\n\t\t\t\tclassName=\"prc-attachments-list__files\"\n\t\t\t\tinitialOpen={false}\n\t\t\t>\n\t\t\t\t<Files />\n\t\t\t</PanelBody>\n\t\t\t<PanelBody\n\t\t\t\ttitle={__('Danger Zone')}\n\t\t\t\tclassName=\"prc-attachments-list__danger-zone\"\n\t\t\t\tinitialOpen={false}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tisDestructive\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tfetchImagesFromLegacyContent(postId);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tCopy Attachments From Legacy\n\t\t\t\t</Button>\n\t\t\t</PanelBody>\n\t\t</Fragment>\n\t);\n}\n\nexport default AttachmentsList;\n","/* eslint-disable max-len */\n// A panel that uses filters to allow adding additional panels.\n// https://github.com/WordPress/gutenberg/tree/d5915916abc45e6682f4bdb70888aa41e98aa395/packages/components/src/higher-order/with-filters\n\n// A panel that displays all the attachments for this post, and also provides a dropzone for bulk uploading new attachments.\n// React query for data management.\n\n// @TODO\n// - Searchable list, order by date or filename\n// - Edit button for each image that will let you edit alt and title\n// - Secondary stage before isnertion, click on image, it will show a modal asking which size, you select it and voila.\n\n/**\n * WordPress Dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { withFilters } from '@wordpress/components';\nimport { PluginSidebar, PluginPrePublishPanel } from '@wordpress/edit-post';\n\n/**\n * Internal Dependencies\n */\nimport './style.scss';\nimport { ProvideAttachments } from './context';\nimport AttachmentsList from './attachments-list';\n\nconst HOOK_NAME = 'prc-platform/attachments-panel';\n// With this hook other plugins can add their own panels to the attachments panel. For example, Chart Builder could potentially show it's chart exports. The entire idea of this plugin is to provide a central universe of all media assets for a post/page.\n\nconst AttachmentsPanel = withFilters(HOOK_NAME)(() => (\n\t// const { flashPrePublishWarning } = useAttachments();\n\t<Fragment>\n\t\t<PluginSidebar\n\t\t\tname=\"prc-attachments-panel\"\n\t\t\ttitle=\"Attachments\"\n\t\t\ticon=\"admin-media\"\n\t\t>\n\t\t\t<ProvideAttachments>\n\t\t\t\t<AttachmentsList />\n\t\t\t</ProvideAttachments>\n\t\t\t{\n\t\t\t\t// Filter Should Hook Here\n\t\t\t}\n\t\t</PluginSidebar>\n\t\t{/* {true === flashPrePublishWarning && (\n\t\t\t\t<PluginPrePublishPanel\n\t\t\t\t\tname=\"prc-media-assets-panel-warning\"\n\t\t\t\t\ttitle=\"Media Assets\"\n\t\t\t\t\ticon=\"admin-media\"\n\t\t\t\t\tclassName=\"prc-media-assets-panel\"\n\t\t\t\t\tinitialOpen\n\t\t\t\t>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{__(\n\t\t\t\t\t\t\t'You have un-used images. Please keep the media library tidy by removing any images you no longer need.',\n\t\t\t\t\t\t\t'prc-block-plugins',\n\t\t\t\t\t\t)}\n\t\t\t\t\t</p>\n\t\t\t\t</PluginPrePublishPanel>\n\t\t\t)} */}\n\t</Fragment>\n));\n\nexport default AttachmentsPanel;\n","/**\n * WordPress Dependencies\n */\nimport { registerPlugin } from '@wordpress/plugins';\n\n/**\n * Internal Dependencies\n */\nimport './style.scss';\nimport AttachmentsPanel from './attachments-panel';\n\n/**\n * A panel that displays all the attachments for this post and also provides a dropzone for bulk uploading new attachments.\n * For filtering info, see: https://github.com/WordPress/gutenberg/tree/d5915916abc45e6682f4bdb70888aa41e98aa395/packages/components/src/higher-order/with-filters\n */\nregisterPlugin('prc-platform-attachment-panel', {\n\trender: () => <AttachmentsPanel />,\n\ticon: 'admin-media',\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t57: 0,\n\t350: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunk_pewresearch_prc_platform_attachments_panel\"] = globalThis[\"webpackChunk_pewresearch_prc_platform_attachments_panel\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [350], () => (__webpack_require__(801)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","window","attachmentsContext","createContext","media","wp","useAttachments","useContext","ProvideAttachments","children","provider","postId","postType","imageBlocks","coverBlocks","chartBlocks","videoBlocks","getBlockInsertionPoint","selectedBlockClientId","selectedBlockIsImageBlock","selectedBlockAttrs","useSelect","select","editorStore","getCurrentPostType","getCurrentPostId","blockEditorStore","getBlocks","filter","block","name","attributes","backgroundType","getSelectedBlockClientId","getSelectedBlock","insertBlock","replaceBlock","useDispatch","selected","setSelected","useState","attachments","setAttachments","searchTerm","setSearchTerm","debouncedSearchTerm","useDebounce","processing","toggleProcessing","loading","toggleLoading","meta","setMeta","useEntityProp","updateAttachments","apiFetch","path","then","data","console","log","mediaEditor","useMemo","title","button","text","library","uploadedTo","on","insertedImageIds","imageBlockIds","length","forEach","id","clientId","coverBlockIds","flashPrePublishWarning","aIds","map","d","iIds","Object","keys","a","includes","toString","useEffect","onDropImage","filesList","uploadMedia","allowedTypes","additionalData","post","onFileChange","onError","message","error","wpAllowedMimeTypes","png","webp","handleImageInsertion","url","size","insertionIndex","index","newImageBlock","createBlock","sizeSlug","handleImageReplacement","attrs","openMediaLibrary","attachmentId","open","useProvideAttachments","createElement","Provider","value","MediaUploadCheck","fallback","__","DropZone","onFilesDrop","onHTMLDrop","b","onDrop","c","IMAGE_SIZES","label","type","selectBlock","isActive","modalActive","toggleModal","leftShiftKeyPressed","useKeyPress","leftOptKeyPressed","BaseControl","key","className","classNames","onClick","src","alt","Modal","onRequestClose","SelectControl","options","onChange","newSize","Images","filteredAttachments","attachment","startsWith","sort","toLowerCase","Spinner","image","Image","Files","file","File","Fragment","PanelBody","initialOpen","Button","variant","CardDivider","TextControl","DragAndDropZone","isDestructive","fetchImagesFromLegacyContent","legacyPostId","legacyBlogId","getEntityRecord","dt_original_post_id","fetch","response","json","imagesArray","content","rendered","DOMParser","parseFromString","querySelectorAll","figure","img","querySelector","getAttribute","figureClass","aTag","regexClass","matchClass","match","rel","regexRel","matchRel","push","loadListOfImageUrlsIntoMediaLibrary","whenDone","Promise","resolve","reject","method","urls","catch","success","withFilters","PluginSidebar","icon","AttachmentsList","registerPlugin","render","AttachmentsPanel","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","every","splice","r","n","getter","__esModule","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","globalThis","bind","__webpack_exports__"],"sourceRoot":""}