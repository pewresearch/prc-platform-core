/*!
 * # Semantic UI - Card
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */

 @use "master.variables"as variables;
 @use 'sass:math';
 @use 'colors';
 @use "mixins";

 /*******************************
			  Variables
 *******************************/

 /*-------------------
		  View
 --------------------*/

 /* Shadow */
 $shadowDistance: 1px;
 $shadowBoxShadow: 0px $shadowDistance 3px 0px colors.$solidBorderColor;

 /* Card */
 $fontFamily: variables.$sansSerifFont;
 $display: flex;
 $background: colors.$white;
 $margin: 1em 0em;
 $minHeight: 0px;
 $padding: 0em;
 $width: 290px;
 $borderWidth: 1px;
 $borderShadow: 0px 0px 0px $borderWidth colors.$solidBorderColor;
 $boxShadow: $shadowBoxShadow,
 $borderShadow;
 $border: none;
 $zIndex: "";
 $transition: box-shadow variables.$defaultDuration variables.$defaultEasing,
 transform variables.$defaultDuration variables.$defaultEasing;

 /* Card Group */
 $horizontalSpacing: 1em;
 $rowSpacing: 1.75em;

 $groupMargin: -(math.div($rowSpacing, 2) - math.div($horizontalSpacing, 2));
 $groupDisplay: flex;

 $groupCardFloat: none;
 $groupCardDisplay: flex;
 $groupCardMargin: math.div($rowSpacing, 2) math.div($horizontalSpacing, 2);

 /* Consecutive Cards */
 $consecutiveGroupDistance: math.div($rowSpacing, 2);

 /*-------------------
		Content
 --------------------*/

 /* Image */
 $imagePadding: 1rem;
 $imageBorder: none;
 $imageBoxShadow: none;
 $imageBorder: none;

 /* Content */
 $contentDivider: $borderWidth solid colors.$internalBorderColor;
 $contentMargin: 0em;
 $contentBackground: none;
 $contentPadding: 1em 1em;
 $contentFontSize: 1em;
 $contentBoxShadow: none;
 $contentBorder: none;

 /* Header */
 $headerMargin: "";
 $headerFontWeight: 400;
 $headerLineHeightOffset: -(math.div((variables.$lineHeight - 1em), 2));
 $headerColor: #fff;

 /* Metadata */
 $metaFontSize: variables.$tinySize;
 $metaSpacing: 0.3em;
 $metaColor: colors.$lightTextColor;

 /* Icons */
 $actionOpacity: 0.75;
 $actionHoverOpacity: 1;
 $actionTransition: color variables.$defaultDuration variables.$defaultEasing;

 $starColor: #ffb70a;
 $starActiveColor: #ffe623;

 $likeColor: #ff2733;
 $likeActiveColor: #ff2733;

 /* Links */
 $contentLinkColor: "";
 $contentLinkHoverColor: "";
 $contentLinkTransition: color variables.$defaultDuration variables.$defaultEasing;

 $headerLinkColor: $headerColor;
 $headerLinkHoverColor: $headerColor;

 $metaLinkColor: colors.$lightTextColor;
 $metaLinkHoverColor: colors.$textColor;

 /* Description */
 $descriptionDistance: 0.5em;
 $descriptionColor: rgba(0, 0, 0, 0.68);

 /* Content Image */
 $contentImageWidth: "";
 $contentImageVerticalAlign: middle;

 /* Paragraph */
 $paragraphDistance: 0.5em;

 /* Dimmer */
 $dimmerZIndex: 10;
 $dimmerColor: "";

 /* Additional Content */
 $extraDivider: 1px solid rgba(0, 0, 0, 0.05);
 $extraBackground: none;
 $extraPosition: static;
 $extraWidth: auto;
 $extraTop: 0em;
 $extraLeft: 0em;
 $extraMargin: 0em 0em;
 $extraPadding: 0.75em 1em;
 $extraBoxShadow: none;
 $extraColor: colors.$lightTextColor;
 $extraTransition: color variables.$defaultDuration variables.$defaultEasing;

 /* Extra Links */
 $extraLinkColor: colors.$unselectedTextColor;
 $extraLinkHoverColor: colors.$linkHoverColor;

 /* Buttons */
 $buttonMargin: 0px -$borderWidth;
 $buttonWidth:calc(100% + (#{$borderWidth} * 2));

 /*-------------------
	   Variations
 --------------------*/

 /* Link */
 $linkHoverBackground: colors.$white;
 $linkHoverBorder: $border;
 $linkHoverZIndex: 5;
 $linkHoverRaiseDistance: 3px;
 $linkHoverTransform: translateY(-$linkHoverRaiseDistance);

 $shadowHoverBoxShadow: 0px $shadowDistance $linkHoverRaiseDistance 0px colors.$solidSelectedBorderColor;
 $linkHoverBoxShadow: $shadowHoverBoxShadow,
 $borderShadow;

 /* Raised */
 $raisedShadow: $borderShadow,
 variables.$floatingShadow;
 $raisedShadowHover: $borderShadow,
 variables.$floatingShadowHover;

 /* Card Count */
 $wideCardSpacing: 1em;
 $cardSpacing: 0.75em;
 $smallCardSpacing: 0.5em;

 $oneCardSpacing: 0em;
 $twoCardSpacing: $wideCardSpacing;
 $threeCardSpacing: $wideCardSpacing;
 $fourCardSpacing: $cardSpacing;
 $fiveCardSpacing: $cardSpacing;
 $sixCardSpacing: $cardSpacing;
 $sevenCardSpacing: $smallCardSpacing;
 $eightCardSpacing: $smallCardSpacing;
 $nineCardSpacing: $smallCardSpacing;
 $tenCardSpacing: $smallCardSpacing;

 $oneCard: variables.$oneColumn;
 $oneCardOffset: 0em;
 $twoCard: calc(#{variables.$twoColumn} - (#{$twoCardSpacing} * 2));
 $twoCardOffset: -$twoCardSpacing;
 $threeCard: calc(#{variables.$threeColumn} - (#{$threeCardSpacing} * 2));
 $threeCardOffset: -$threeCardSpacing;
 $fourCard: calc(#{variables.$fourColumn} - (#{$fourCardSpacing} * 2));
 $fourCardOffset: -$fourCardSpacing;
 $fiveCard: calc(#{variables.$fiveColumn} - (#{$fiveCardSpacing} * 2));
 $fiveCardOffset: -$fiveCardSpacing;
 $sixCard: calc(#{variables.$sixColumn} - (#{$sixCardSpacing} * 2));
 $sixCardOffset: -$sixCardSpacing;
 $sevenCard: calc(#{variables.$sevenColumn} - (#{$sevenCardSpacing} * 2));
 $sevenCardOffset: -$sevenCardSpacing;
 $eightCard: calc(#{variables.$eightColumn} - (#{$sevenCardSpacing} * 2));
 $eightCardOffset: -$sevenCardSpacing;
 $nineCard: calc(#{variables.$nineColumn} - (#{$nineCardSpacing} * 2));
 $nineCardOffset: -$nineCardSpacing;
 $tenCard: calc(#{variables.$tenColumn} - (#{$tenCardSpacing} * 2));
 $tenCardOffset: -$tenCardSpacing;

 /* Stackable */
 $stackableRowSpacing: 1em;
 $stackableCardSpacing: 1em;
 $stackableMargin: calc(#{variables.$oneColumn} - (#{$stackableCardSpacing} * 2));

 /* Sizes */
 $medium: 1em;

 /* Colored */
 $coloredShadowDistance: 2px;


 /*--------------
			 Card
 ---------------*/

 @mixin card() {
	 max-width: 100%;
	 position: relative;
	 display: $display;
	 flex-direction: column;

	 width: $width;
	 min-height: $minHeight;
	 background: $background;
	 padding: $padding;

	 border: $border;
	 box-shadow: $boxShadow;
	 transition: $transition;
	 z-index: $zIndex;

	 &.basic,
	 &.is-style-borderless {
		 border: 0px;
		 box-shadow: none;
	 }

	 a {
		 cursor: pointer;
	 }

	 &:first-child {
		 margin-top: 0em;
	 }

	 &:last-child {
		 margin-bottom: 0em;
	 }

	 /*-------------------
	 Fluid
	 --------------------*/
	 &.fluid {
		 width: 100%;
		 max-width: 9999px;
	 }

	 /*--------------
	 Header
	 ---------------*/
	 &>.header {
		 display: block;
		 @include mixins.uppercaseTitle($headerFontWeight, $headerColor);
		 line-height: variables.$headerLineHeight;

		 padding: 0.6em 1em;
		 margin: $headerMargin;
		 margin-bottom: 0;
		 margin-top: $headerLineHeightOffset;

		 background-color: #333132;

		 &>i.external.icon {
			 font-size: 1rem;
			 float: right;
		 }
	 }

	 /*--------------
	 Image
	 ---------------*/

	 .image {
		 position: relative;
		 display: block;

		 img {
			 display: block;
			 max-width: 100%;
			 height: auto;
		 }
	 }

	 /*----------------
	 Video Player
	 -----------------*/

	 .video-player {
		 &>.close {
			 position: absolute;
			 margin-top: 0.5rem;
			 margin-left: 1rem;
		 }

		 &+.content {
			 margin-top: 1.5rem;
			 border-top: 0px;
		 }
	 }

	 /*--------------
	 Content
	 ---------------*/

	 &>.content {
		 flex-grow: 1;
		 border: $contentBorder;
		 border-top: $contentDivider;
		 background: $contentBackground;
		 margin: $contentMargin;
		 padding: $contentPadding;
		 box-shadow: $contentBoxShadow;
		 font-size: $contentFontSize;
		 font-family: $fontFamily;

		 &:after {
			 display: block;
			 content: " ";
			 height: 0px;
			 clear: both;
			 overflow: hidden;
			 visibility: hidden;
		 }

		 &>.meta+.description {
			 margin-top: $descriptionDistance;
		 }

		 p {
			 margin: 0em 0em $paragraphDistance;

			 &:last-child {
				 margin-bottom: 0em;
			 }
		 }
	 }

	 /*----------------
		 Items
	 -----------------*/
	 &>.items>.item:first-of-type {
		 margin-top: 0;
	 }

	 // Pseudo items inside Gutenberg block...
	 &>.content>.story-item.item {
		 margin: 1.5em 0;

		 &:first-child {
			 margin-top: 0;
		 }

		 &:last-of-type {
			 margin-bottom: 0;
		 }
	 }

	 /*--------------
	 Description
	 ---------------*/

	 &>.content>.description {
		 clear: both;
		 color: $descriptionColor;
	 }

	 /* Direct Content, No Items */
	 &>.content,
	 &>.content .editor-rich-text {
		 &>p {
			 font-size: 1.142rem;
			 font-family: $fontFamily; // For scopes sake we're adding this here so gutenberg will obey it.
			 line-height: 1.43rem;

			 &.relaxed {
				 letter-spacing: 0.06rem;
			 }
		 }

		 &>p:first-of-type {
			 margin-top: 1rem;
			 margin-bottom: 0.5rem;
		 }
	 }

	 /*--------------
	 Meta
	 ---------------*/

	 .meta {
		 font-size: $metaFontSize;
		 color: $metaColor;

		 * {
			 margin-right: $metaSpacing;
		 }

		 & :last-child {
			 margin-right: 0em;
		 }

		 &[class*="right floated"] {
			 margin-right: 0em;
			 margin-left: $metaSpacing;
		 }
	 }

	 /*--------------
	 Links
	 ---------------*/

	 a.read-more {
		 font-size: 1.142rem;
		 line-height: 1.43rem;
	 }

	 /* Generic */
	 a:not(.ui) {
		 color: $contentLinkColor;
		 transition: $contentLinkTransition;

		 &:hover {
			 color: $contentLinkHoverColor;
		 }
	 }

	 /* Header */
	 a.header,
	 .header>a {
		 color: $headerLinkColor;
		 text-decoration: none;

		 &:hover {
			 color: $headerLinkHoverColor;
			 text-decoration: none;
		 }
	 }

	 /* Meta */
	 .meta>a:not(.ui) {
		 color: $metaLinkColor;

		 &:hover {
			 color: $metaLinkHoverColor;
		 }
	 }

	 /*--------------
	 Buttons
	 ---------------*/

	 .button,
	 .buttons {
		 margin: $buttonMargin;
		 width: $buttonWidth;
	 }

	 /*--------------
	 Dimmer
	 ---------------*/

	 .dimmer {
		 background-color: $dimmerColor;
		 z-index: $dimmerZIndex;
	 }

	 /*--------------
	 Variations
	 ---------------*/

	 &.raised {
		 box-shadow: $raisedShadow;
	 }

	 /* Oatmeal */
	 &.inverted.oatmeal,
	 &.is-style-oatmeal {
		 background: colors.$oatmeal !important;
		 border: 0px !important;
		 box-shadow: none !important;
	 }

	 /* Beige */
	 &.inverted.beige,
	 &.is-style-beige {
		 background: colors.$beige !important;
		 border: 0px !important;
		 box-shadow: none !important;
	 }

	 /*----------------
	 Floated Content
	 -----------------*/

	 & [class*="left floated"] {
		 float: left;
	 }

	 & [class*="right floated"] {
		 float: right;
	 }

	 /*--------------
	 Aligned
	 ---------------*/
	 &.alignleft {
		 margin-right: 1rem !important;
	 }

	 &.alignright {
		 margin-left: 1rem !important;
	 }

	 /** Align Content **/
	 & [class*="left aligned"] {
		 text-align: left;
	 }

	 & [class*="center aligned"] {
		 text-align: center;
	 }

	 & [class*="right aligned"] {
		 text-align: right;
	 }

	 /*----------------
	 Extra Content
	 -----------------*/

	 &>.extra {
		 max-width: 100%;
		 min-height: 0em !important;
		 flex-grow: 0;
		 border-top: $extraDivider !important;
		 position: $extraPosition;
		 background: $extraBackground;
		 width: $extraWidth;
		 margin: $extraMargin;
		 padding: $extraPadding;
		 top: $extraTop;
		 left: $extraLeft;
		 color: $extraColor;
		 box-shadow: $extraBoxShadow;
		 transition: $extraTransition;

		 a:not(.ui) {
			 color: $extraLinkColor;

			 &:hover {
				 color: $extraLinkHoverColor;
			 }
		 }
	 }
 }

 .ui.card,
 .ui.cards>.card {
	 @include card();
 }

 .ui.card {
	 margin: $margin;
 }

 /*--------------
 Multiple Cards
 ---------------*/

 .ui.cards {
	 display: $groupDisplay;
	 margin: $groupMargin;
	 flex-wrap: wrap;
 }

 .ui.cards>.card {
	 display: $groupCardDisplay;
	 margin: $groupCardMargin;
	 float: $groupCardFloat;
	 font-size: $medium;
 }

 /* Clearing */
 .ui.cards:after,
 .ui.card:after {
	 display: block;
	 content: " ";
	 height: 0px;
	 clear: both;
	 overflow: hidden;
	 visibility: hidden;
 }

 /* Consecutive Card Groups Preserve Row Spacing */
 .ui.cards~.ui.cards {
	 margin-top: $consecutiveGroupDistance;
 }


 /*******************************
 Card Grids
 *******************************/


 /*--------------
 Card Count
 ---------------*/

 .ui.one.cards {
	 margin-left: $oneCardOffset;
	 margin-right: $oneCardOffset;
 }

 .ui.one.cards>.card {
	 width: $oneCard;
 }

 .ui.two.cards {
	 margin-left: $twoCardOffset;
	 margin-right: $twoCardOffset;
 }

 .ui.two.cards>.card {
	 width: $twoCard;
	 margin-left: $twoCardSpacing;
	 margin-right: $twoCardSpacing;
 }

 .ui.three.cards {
	 margin-left: $threeCardOffset;
	 margin-right: $threeCardOffset;
 }

 .ui.three.cards>.card {
	 width: $threeCard;
	 margin-left: $threeCardSpacing;
	 margin-right: $threeCardSpacing;
 }

 .ui.four.cards {
	 margin-left: $fourCardOffset;
	 margin-right: $fourCardOffset;
 }

 .ui.four.cards>.card {
	 width: $fourCard;
	 margin-left: $fourCardSpacing;
	 margin-right: $fourCardSpacing;
 }

 .ui.five.cards {
	 margin-left: $fiveCardOffset;
	 margin-right: $fiveCardOffset;
 }

 .ui.five.cards>.card {
	 width: $fiveCard;
	 margin-left: $fiveCardSpacing;
	 margin-right: $fiveCardSpacing;
 }

 .ui.six.cards {
	 margin-left: $sixCardOffset;
	 margin-right: $sixCardOffset;
 }

 .ui.six.cards>.card {
	 width: $sixCard;
	 margin-left: $sixCardSpacing;
	 margin-right: $sixCardSpacing;
 }

 .ui.seven.cards {
	 margin-left: $sevenCardOffset;
	 margin-right: $sevenCardOffset;
 }

 .ui.seven.cards>.card {
	 width: $sevenCard;
	 margin-left: $sevenCardSpacing;
	 margin-right: $sevenCardSpacing;
 }

 .ui.eight.cards {
	 margin-left: $eightCardOffset;
	 margin-right: $eightCardOffset;
 }

 .ui.eight.cards>.card {
	 width: $eightCard;
	 margin-left: $eightCardSpacing;
	 margin-right: $eightCardSpacing;
	 font-size: 11px;
 }

 .ui.nine.cards {
	 margin-left: $nineCardOffset;
	 margin-right: $nineCardOffset;
 }

 .ui.nine.cards>.card {
	 width: $nineCard;
	 margin-left: $nineCardSpacing;
	 margin-right: $nineCardSpacing;
	 font-size: 10px;
 }

 .ui.ten.cards {
	 margin-left: $tenCardOffset;
	 margin-right: $tenCardOffset;
 }

 .ui.ten.cards>.card {
	 width: $tenCard;
	 margin-left: $tenCardSpacing;
	 margin-right: $tenCardSpacing;
 }

 /*-------------------
 Doubling
 --------------------*/

 /* Mobile Only */
 @media only screen and (max-width: variables.$largestMobileScreen) {
	 .ui.two.doubling.cards {
		 margin-left: $oneCardOffset;
		 margin-right: $oneCardOffset;
	 }

	 .ui.two.doubling.cards>.card {
		 width: $oneCard;
		 margin-left: $oneCardSpacing;
		 margin-right: $oneCardSpacing;
	 }

	 .ui.three.doubling.cards {
		 margin-left: $twoCardOffset;
		 margin-right: $twoCardOffset;
	 }

	 .ui.three.doubling.cards>.card {
		 width: $twoCard;
		 margin-left: $twoCardSpacing;
		 margin-right: $twoCardSpacing;
	 }

	 .ui.four.doubling.cards {
		 margin-left: $twoCardOffset;
		 margin-right: $twoCardOffset;
	 }

	 .ui.four.doubling.cards>.card {
		 width: $twoCard;
		 margin-left: $twoCardSpacing;
		 margin-right: $twoCardSpacing;
	 }

	 .ui.five.doubling.cards {
		 margin-left: $twoCardOffset;
		 margin-right: $twoCardOffset;
	 }

	 .ui.five.doubling.cards>.card {
		 width: $twoCard;
		 margin-left: $twoCardSpacing;
		 margin-right: $twoCardSpacing;
	 }

	 .ui.six.doubling.cards {
		 margin-left: $twoCardOffset;
		 margin-right: $twoCardOffset;
	 }

	 .ui.six.doubling.cards>.card {
		 width: $twoCard;
		 margin-left: $twoCardSpacing;
		 margin-right: $twoCardSpacing;
	 }

	 .ui.seven.doubling.cards {
		 margin-left: $threeCardOffset;
		 margin-right: $threeCardOffset;
	 }

	 .ui.seven.doubling.cards>.card {
		 width: $threeCard;
		 margin-left: $threeCardSpacing;
		 margin-right: $threeCardSpacing;
	 }

	 .ui.eight.doubling.cards {
		 margin-left: $threeCardOffset;
		 margin-right: $threeCardOffset;
	 }

	 .ui.eight.doubling.cards>.card {
		 width: $threeCard;
		 margin-left: $threeCardSpacing;
		 margin-right: $threeCardSpacing;
	 }

	 .ui.nine.doubling.cards {
		 margin-left: $threeCardOffset;
		 margin-right: $threeCardOffset;
	 }

	 .ui.nine.doubling.cards>.card {
		 width: $threeCard;
		 margin-left: $threeCardSpacing;
		 margin-right: $threeCardSpacing;
	 }

	 .ui.ten.doubling.cards {
		 margin-left: $threeCardOffset;
		 margin-right: $threeCardOffset;
	 }

	 .ui.ten.doubling.cards>.card {
		 width: $threeCard;
		 margin-left: $threeCardSpacing;
		 margin-right: $threeCardSpacing;
	 }
 }

 /* Tablet Only */
 @media only screen and (min-width: variables.$tabletBreakpoint) and (max-width: variables.$largestTabletScreen) {
	 .ui.two.doubling.cards {
		 margin-left: $oneCardOffset;
		 margin-right: $oneCardOffset;
	 }

	 .ui.two.doubling.cards>.card {
		 width: $oneCard;
		 margin-left: $oneCardSpacing;
		 margin-right: $oneCardSpacing;
	 }

	 .ui.three.doubling.cards {
		 margin-left: $twoCardOffset;
		 margin-right: $twoCardOffset;
	 }

	 .ui.three.doubling.cards>.card {
		 width: $twoCard;
		 margin-left: $twoCardSpacing;
		 margin-right: $twoCardSpacing;
	 }

	 .ui.four.doubling.cards {
		 margin-left: $twoCardOffset;
		 margin-right: $twoCardOffset;
	 }

	 .ui.four.doubling.cards>.card {
		 width: $twoCard;
		 margin-left: $twoCardSpacing;
		 margin-right: $twoCardSpacing;
	 }

	 .ui.five.doubling.cards {
		 margin-left: $threeCardOffset;
		 margin-right: $threeCardOffset;
	 }

	 .ui.five.doubling.cards>.card {
		 width: $threeCard;
		 margin-left: $threeCardSpacing;
		 margin-right: $threeCardSpacing;
	 }

	 .ui.six.doubling.cards {
		 margin-left: $threeCardOffset;
		 margin-right: $threeCardOffset;
	 }

	 .ui.six.doubling.cards>.card {
		 width: $threeCard;
		 margin-left: $threeCardSpacing;
		 margin-right: $threeCardSpacing;
	 }

	 .ui.eight.doubling.cards {
		 margin-left: $threeCardOffset;
		 margin-right: $threeCardOffset;
	 }

	 .ui.eight.doubling.cards>.card {
		 width: $threeCard;
		 margin-left: $threeCardSpacing;
		 margin-right: $threeCardSpacing;
	 }

	 .ui.eight.doubling.cards {
		 margin-left: $fourCardOffset;
		 margin-right: $fourCardOffset;
	 }

	 .ui.eight.doubling.cards>.card {
		 width: $fourCard;
		 margin-left: $fourCardSpacing;
		 margin-right: $fourCardSpacing;
	 }

	 .ui.nine.doubling.cards {
		 margin-left: $fourCardOffset;
		 margin-right: $fourCardOffset;
	 }

	 .ui.nine.doubling.cards>.card {
		 width: $fourCard;
		 margin-left: $fourCardSpacing;
		 margin-right: $fourCardSpacing;
	 }

	 .ui.ten.doubling.cards {
		 margin-left: $fiveCardOffset;
		 margin-right: $fiveCardOffset;
	 }

	 .ui.ten.doubling.cards>.card {
		 width: $fiveCard;
		 margin-left: $fiveCardSpacing;
		 margin-right: $fiveCardSpacing;
	 }
 }

 /*-------------------
 Stackable
 --------------------*/

 @media only screen and (max-width: variables.$largestMobileScreen) {
	 .ui.stackable.cards {
		 display: block !important;
	 }

	 .ui.stackable.cards .card:first-child {
		 margin-top: 0em !important;
	 }

	 .ui.stackable.cards>.card {
		 display: block !important;
		 height: auto !important;
		 margin: $stackableRowSpacing $stackableCardSpacing;
		 padding: 0 !important;
		 width: $stackableMargin !important;
	 }
 }

 /*******************************
 Variations
 *******************************/

 /*-------------------
 Raised
 --------------------*/

 .ui.raised.cards>.card {
	 box-shadow: $raisedShadow;
 }

 /*-------------------
 Centered
 --------------------*/

 .ui.centered.cards {
	 justify-content: center;
 }

 .ui.centered.card {
	 margin-left: auto;
	 margin-right: auto;
 }
