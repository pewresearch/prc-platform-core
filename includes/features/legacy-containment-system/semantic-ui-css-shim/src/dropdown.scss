/*!
 * # Semantic UI - Dropdown
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */

@use "sass:math";

@use "master.variables" as variables;
@use "functions" as functions;
@use "colors";
@use "mixins";

/*******************************
            Dropdown
*******************************/

/* Dropdown Carets */
@font-face {
    font-family: "Dropdown";
    src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAVgAA8AAAAACFAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABWAAAABwAAAAchGgaq0dERUYAAAF0AAAAHAAAAB4AJwAPT1MvMgAAAZAAAABDAAAAVnW4TJdjbWFwAAAB1AAAAEsAAAFS8CcaqmN2dCAAAAIgAAAABAAAAAQAEQFEZ2FzcAAAAiQAAAAIAAAACP//AANnbHlmAAACLAAAAQoAAAGkrRHP9WhlYWQAAAM4AAAAMAAAADYPK8YyaGhlYQAAA2gAAAAdAAAAJANCAb1obXR4AAADiAAAACIAAAAiCBkAOGxvY2EAAAOsAAAAFAAAABQBnAIybWF4cAAAA8AAAAAfAAAAIAEVAF5uYW1lAAAD4AAAATAAAAKMFGlj5HBvc3QAAAUQAAAARgAAAHJoedjqd2ViZgAABVgAAAAGAAAABrO7W5UAAAABAAAAANXulPUAAAAA1r4hgAAAAADXu2Q1eNpjYGRgYOABYjEgZmJgBEIOIGYB8xgAA/YAN3jaY2BktGOcwMDKwMI4jTGNgYHBHUp/ZZBkaGFgYGJgZWbACgLSXFMYHFT/fLjFeOD/AQY9xjMMbkBhRpAcAN48DQYAeNpjYGBgZoBgGQZGBhDwAfIYwXwWBgMgzQGETAwMqn8+8H649f8/lHX9//9b7Pzf+fWgusCAkY0BzmUE6gHpQwGMDMMeAACbxg7SAAARAUQAAAAB//8AAnjadZBPSsNAGMXfS+yMqYgOhpSuSlKadmUhiVEhEMQzFF22m17BbbvzCh5BXCUn6EG8gjeQ4DepwYo4i+/ffL95j4EDA+CFC7jQuKyIeVHrI3wkleq9F7XrSInKteOeHdda8bOoaeepSc00NWPz/LRec9G8GabyGtEdF7h19z033GAMTK7zbM42xNEZpzYof0RtQ5CUHAQJ73OtVyutc+3b7Ou//b8XNlsPx3jgjUifABdhEohKJJL5iM5p39uqc7X1+sRQSqmGrUVhlsJ4lpmEUVwyT8SUYtg0P9DyNzPADDs+tjrGV6KRCRfsui3eHcL4/p8ZXvfMlcnEU+CLv7hDykOP+AKTPTxbAAB42mNgZGBgAGKuf5KP4vltvjLIMzGAwLV9ig0g+vruFFMQzdjACOJzMIClARh0CTJ42mNgZGBgPPD/AJD8wgAEjA0MjAyogAMAbOQEAQAAAAC7ABEAAAAAAKoAAAH0AAABgAAAAUAACAFAAAgAwAAXAAAAAAAAACoAKgAqADIAbACGAKAAugDSeNpjYGRgYOBkUGFgYgABEMkFhAwM/xn0QAIADdUBdAB42qWQvUoDQRSFv3GjaISUQaymSmGxJoGAsRC0iPYLsU50Y6IxrvlRtPCJJKUPIBb+PIHv4EN4djKuKAqCDHfmu+feOdwZoMCUAJNbAlYUMzaUlM14jjxbngOq7HnOia89z1Pk1vMCa9x7ztPkzfMyJbPj+ZGi6Xp+omxuPD+zaD7meaFg7mb8GrBqHmhwxoAxlm0uiRkpP9X5m26pKRoMxTGR1D49Dv/Yb/91o6l8qL6eu5n2hZQzn68utR9m3FU2cB4t9cdSLG2utI+44Eh/P9bqKO+oJ/WxmXssj77YkrjasZQD6SFddythk3Wtzrf+UF2p076Udla1VNzsERP3kkjVRKel7mp1udXYcHtZSlV7RfmJe1GiFWveluaeKD5/MuJcSk8Tpm/vvwPIbmJleNpjYGKAAFYG7ICTgYGRiZGZkYWRlZGNkZ2Rg5GTLT2nsiDDEEIZsZfmZRqZujmDaDcDAxcI7WIOpS2gtCWUdgQAZkcSmQAAAAFblbO6AAA=) format("woff");
    font-weight: normal;
    font-style: normal;
}


/*-------------------
       Element
--------------------*/

$transition: box-shadow variables.$defaultDuration variables.$defaultEasing,
width variables.$defaultDuration variables.$defaultEasing;
$borderRadius: variables.$defaultBorderRadius;

$raisedShadow: 0px 2px 3px 0px colors.$borderColor;

/*-------------------
       Content
--------------------*/

/* Icon */
$dropdownIconSize: variables.$relative14px;
$dropdownIconMargin: 0rem 0rem 0rem 1rem;

/* Current Text */
$textTransition: none;

/* Menu */
$menuBackground: #ffffff;
$menuMargin: 0em;
$menuPadding: 0em 0em;
$menuTop: 100%;
$menuTextAlign: left;

$menuBorderWidth: 1px;
$menuBorderColor: colors.$borderColor;
$menuBorder: $menuBorderWidth solid $menuBorderColor;
$menuBoxShadow: $raisedShadow;
$menuBorderRadius: $borderRadius;
$menuTransition: opacity variables.$defaultDuration variables.$defaultEasing;
$menuMinWidth: calc(100% + (#{$menuBorderWidth} * 2));
$menuZIndex: 11;

/* Text */
$textLineHeight: 1em;
$textLineHeightOffset: ($textLineHeight - 1em);
$textCursorSpacing: 1px;

/* Menu Item */
$itemFontSize: variables.$medium;
$itemTextAlign: left;
$itemBorder: none;
$itemHeight: auto;
$itemDivider: none;
$itemColor: colors.$textColor;
$itemVerticalPadding: variables.$mini;
$itemHorizontalPadding: variables.$large;
$itemPadding: $itemVerticalPadding $itemHorizontalPadding;
$itemFontWeight: variables.$normal;
$itemLineHeight: 1em;
$itemLineHeightOffset: ($itemLineHeight - 1em);
$itemTextTransform: none;
$itemBoxShadow: none;

/* Sub Menu */
$subMenuTop: 0%;
$subMenuLeft: 100%;
$subMenuRight: auto;
$subMenuDistanceAway: -0.5em;
$subMenuMargin: 0em 0em 0em $subMenuDistanceAway;
$subMenuBorderRadius: $borderRadius;
$subMenuZIndex: 21;

/* Menu Header */
$menuHeaderColor: colors.$darkTextColor;
$menuHeaderFontSize: variables.$relative11px;
$menuHeaderFontWeight: variables.$bold;
$menuHeaderTextTransform: uppercase;
$menuHeaderMargin: 1rem 0rem 0.75rem;
$menuHeaderPadding: 0em $itemHorizontalPadding;

/* Menu Divider */
$menuDividerMargin: 0.5em 0em;
$menuDividerColor: colors.$internalBorderColor;
$menuDividerSize: 1px;
$menuDividerBorder: $menuDividerSize solid $menuDividerColor;

/* Menu Input */
$menuInputMargin: variables.$large variables.$mini;
$menuInputMinWidth: 10rem;
$menuInputVerticalPadding: 0.5em;
$menuInputHorizontalPadding: variables.$inputHorizontalPadding;
$menuInputPadding: $menuInputVerticalPadding $menuInputHorizontalPadding;

/* Menu Image */
$menuImageMaxHeight: 2em;
$menuImageVerticalMargin: -($menuImageMaxHeight - 1em) * 0.5;

/* Item Sub-Element */
$itemElementFloat: none;
$itemElementDistance: variables.$mini;

/* Sub-Menu Dropdown Icon */
$itemDropdownIconDistance: 1em;
$itemDropdownIconFloat: right;
$itemDropdownIconMargin: $itemLineHeightOffset 0em 0em $itemDropdownIconDistance;

/* Description */
$itemDescriptionFloat: right;
$itemDescriptionMargin: 0em 0em 0em 1em;
$itemDescriptionColor: colors.$lightTextColor;

$selectionItemHorizontalPadding: $itemHorizontalPadding;
$selectionItemVerticalPadding: $itemVerticalPadding;
$selectionItemPadding: $selectionItemVerticalPadding $selectionItemHorizontalPadding;

/* Message */
$messagePadding: $selectionItemPadding;
$messageFontWeight: variables.$normal;
$messageColor: colors.$unselectedTextColor;

/* Floated Content */
$floatedDistance: 1em;

/*-------------------
        Types
--------------------*/

/*------------
     Block
--------------*/
$blockPadding: 1em 0;
$blockBorderTop: 1px solid colors.$grayLight;
$blockBorderBottom: $blockBorderTop;
$blockMargin: 0 0 1rem 0;

/*------------
   Selection
--------------*/

$selectionMinWidth: 14em;
$selectionVerticalPadding: variables.$inputVerticalPadding;
$selectionHorizontalPadding: variables.$inputHorizontalPadding;
$selectionBorderEmWidth: variables.$relative1px;
$selectionMinHeight: variables.$inputLineHeight+($selectionVerticalPadding * 2) - $selectionBorderEmWidth;
$selectionBackground: colors.$inputBackground;
$selectionDisplay: inline-block;
$selectionIconDistance: variables.$inputHorizontalPadding+variables.$glyphWidth;
$selectionPadding: $selectionVerticalPadding $selectionIconDistance $selectionVerticalPadding $selectionHorizontalPadding;
$selectionZIndex: 10;

$selectionItemDivider: 1px solid colors.$solidInternalBorderColor;
$selectionMessagePadding: $selectionItemPadding;

/* <select> */
$selectBorder: 1px solid colors.$borderColor;
$selectPadding: 0.5em;
$selectVisibility: visible;
$selectHeight: 38px;

$selectionTextColor: colors.$textColor;

$selectionTextUnderlayIconOpacity: variables.$disabledOpacity;
$selectionTextUnderlayColor: colors.$inputPlaceholderFocusColor;

$selectionBoxShadow: none;
$selectionBorderColor: colors.$borderColor;
$selectionBorder: 1px solid $selectionBorderColor;
$selectionBorderRadius: $borderRadius;

$selectionIconOpacity: 0.8;
$selectionIconZIndex: 3;
$selectionIconHitbox: $selectionVerticalPadding;
$selectionIconMargin: -$selectionIconHitbox;
$selectionIconPadding: functions.replace-unit(math.div($selectionIconHitbox, $dropdownIconSize), em);
$selectionIconTransition: opacity variables.$defaultDuration variables.$defaultEasing;

$selectionMenuBorderRadius: 0em 0em $borderRadius $borderRadius;
$selectionMenuBoxShadow: $raisedShadow;
$selectionMenuItemBoxShadow: none;

$selectionTransition: $transition;
$selectionMenuTransition: $menuTransition;

/* Responsive */
$selectionMobileMaxItems: 3;
$selectionTabletMaxItems: 4;
$selectionComputerMaxItems: 6;
$selectionWidescreenMaxItems: 8;

/* Derived */
$selectedBorderEMWidth: 0.1em;
/* 1px / em size */
$selectionItemHeight: ($selectionItemVerticalPadding * 2)+functions.strip-unit($itemLineHeight)+functions.strip-unit($selectedBorderEMWidth);
$selectionMobileMaxMenuHeight: ($selectionItemHeight * $selectionMobileMaxItems);
$selectionTabletMaxMenuHeight: ($selectionItemHeight * $selectionTabletMaxItems);
$selectionComputerMaxMenuHeight: ($selectionItemHeight * $selectionComputerMaxItems);
$selectionWidescreenMaxMenuHeight: ($selectionItemHeight * $selectionWidescreenMaxItems);

/* Hover */
$selectionHoverBorderColor: colors.$selectedBorderColor;
$selectionHoverBoxShadow: none;

/* Focus */
$selectionFocusBorderColor: black; //$focusedFormMutedBorderColor;
$selectionFocusBoxShadow: none;
$selectionFocusMenuBoxShadow: $raisedShadow;

/* Visible */
$selectionVisibleTextFontWeight: variables.$normal;
$selectionVisibleTextColor: colors.$hoveredTextColor;

$selectionVisibleBorderColor: black; //$focusedFormMutedBorderColor;
$selectionVisibleBoxShadow: $raisedShadow;
$selectionVisibleMenuBoxShadow: $raisedShadow;

/* Visible Hover */
$selectionActiveHoverBorderColor: black; //$focusedFormMutedBorderColor;
$selectionActiveHoverBoxShadow: $selectionVisibleBoxShadow;
$selectionActiveHoverMenuBoxShadow: $selectionVisibleMenuBoxShadow;

$selectionVisibleConnectingBorder: 0em;
$selectionVisibleIconOpacity: "";

/*--------------
     Search
--------------*/

$searchMinWidth: "";

/* Search Selection */
$searchSelectionLineHeight: variables.$inputLineHeight;
$searchSelectionLineHeightOffset: (($searchSelectionLineHeight - 1em) * 0.5);
$searchSelectionVerticalPadding: ($selectionVerticalPadding - $searchSelectionLineHeightOffset);
$searchSelectionHorizontalPadding: $selectionHorizontalPadding;
$searchSelectionInputPadding: $searchSelectionVerticalPadding $selectionIconDistance $searchSelectionVerticalPadding $searchSelectionHorizontalPadding;

$searchMobileMaxMenuHeight: $selectionMobileMaxMenuHeight;
$searchTabletMaxMenuHeight: $selectionTabletMaxMenuHeight;
$searchComputerMaxMenuHeight: $selectionComputerMaxMenuHeight;
$searchWidescreenMaxMenuHeight: $selectionWidescreenMaxMenuHeight;

/* Inline */
$inlineIconMargin: 0em variables.$relative3px 0em variables.$relative3px;
$inlineTextColor: inherit;
$inlineTextFontWeight: variables.$bold;
$inlineMenuDistance: variables.$relative3px;
$inlineMenuBorderRadius: $borderRadius;

/*--------------
    Multiple
--------------*/

/* Split Actual Padding Between Child and Parent (allows for label spacing) */
$multipleSelectionVerticalPadding: ($searchSelectionVerticalPadding * math.div(1, 3));
$multipleSelectionLeftPadding: variables.$relative5px;
$multipleSelectionRightPadding: $selectionIconDistance;
$multipleSelectionPadding: $multipleSelectionVerticalPadding $multipleSelectionRightPadding $multipleSelectionVerticalPadding $multipleSelectionLeftPadding;

/* Child Elements */
$multipleSelectionChildVerticalMargin: ($searchSelectionVerticalPadding * math.div(2, 3));
$multipleSelectionChildLeftMargin: (variables.$inputHorizontalPadding - $multipleSelectionLeftPadding);
$multipleSelectionChildMargin: $multipleSelectionChildVerticalMargin 0em $multipleSelectionChildVerticalMargin $multipleSelectionChildLeftMargin;
$multipleSelectionChildLineHeight: variables.$relative17px;
$multipleSelectionSearchStartWidth: (variables.$glyphWidth * 2);

/* Dropdown Icon */
$multipleSelectionDropdownIconMargin: "";
$multipleSelectionDropdownIconPadding: "";

$multipleSelectionSearchAfterLabelDistance: variables.$relative2px;

/* Selection Label */
$labelSize: variables.$relativeMedium;
$labelHorizontalMargin: variables.$u4px;
$labelVerticalMargin: variables.$u2px;
$labelMargin: $labelVerticalMargin $labelHorizontalMargin $labelVerticalMargin 0em;
$labelBorderWidth: 1px;
$labelBoxShadow: 0px 0px 0px $labelBorderWidth colors.$borderColor inset;

$labelVerticalPadding: variables.$relative5px;
$labelHorizontalPadding: variables.$relativeMini;
$labelPadding: $labelVerticalPadding $labelHorizontalPadding;

/*-------------------
       States
--------------------*/

/* Hovered */
$hoveredItemBackground: colors.$transparentBlack;
$hoveredItemColor: colors.$selectedTextColor;
$hoveredZIndex: $menuZIndex+2;

/* Default Text */
$defaultTextColor: black; //$inputPlaceholderColor;
$defaultTextFocusColor: colors.$inputPlaceholderFocusColor;

/* Loading */
$loadingZIndex: -1;

/* Active Menu Item */
$activeItemZIndex: $menuZIndex+1;
$activeItemBackground: transparent;
$activeItemBoxShadow: none;
$activeItemFontWeight: variables.$bold;
$activeItemColor: colors.$selectedTextColor;

/* Selected */
$selectedBackground: colors.$subtleTransparentBlack;
$selectedColor: colors.$selectedTextColor;

/* Error */
$errorLabelBackground: #eacbcb;
$errorLabelColor: colors.$errorTextColor;

$errorItemTextColor: colors.$errorTextColor;
$errorItemHoverBackground: #fff2f2;
$errorItemActiveBackground: #fdcfcf;

/* Clearable */
$clearableIconOpacity: 0.8;
$clearableIconActiveOpacity: 1;

/*-------------------
      Variations
--------------------*/

/* Scrolling */
$scrollingMenuWidth: 100%;
$scrollingMenuItemBorder: none;
$scrollingMenuRightItemPadding: calc(#{$itemHorizontalPadding} + #{variables.$scrollbarWidth});

$scrollingMobileMaxItems: 4;
$scrollingTabletMaxItems: 6;
$scrollingComputerMaxItems: 8;
$scrollingWidescreenMaxItems: 12;

$scrollingBorderEMWidth: 0em;
/* 0px / em size */
$scrollingItemHeight: ($itemVerticalPadding * 2)+functions.strip-unit($itemLineHeight)+functions.strip-unit($scrollingBorderEMWidth);
$scrollingMobileMaxMenuHeight: ($scrollingItemHeight * $scrollingMobileMaxItems);
$scrollingTabletMaxMenuHeight: ($scrollingItemHeight * $scrollingTabletMaxItems);
$scrollingComputerMaxMenuHeight: ($scrollingItemHeight * $scrollingComputerMaxItems);
$scrollingWidescreenMaxMenuHeight: ($scrollingItemHeight * $selectionWidescreenMaxItems);

/* Upward */
$upwardSelectionVisibleBorderRadius: $selectionVisibleConnectingBorder $selectionVisibleConnectingBorder $borderRadius $borderRadius;
$upwardMenuBoxShadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.08);
$upwardSelectionMenuBoxShadow: 0px -2px 3px 0px rgba(0, 0, 0, 0.08);
$upwardMenuBorderRadius: $borderRadius $borderRadius 0em 0em;
$upwardSelectionHoverBoxShadow: 0px 0px 2px 0px rgba(0, 0, 0, 0.05);
$upwardSelectionVisibleBoxShadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.08);
$upwardSelectionActiveHoverBoxShadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.05);
$upwardSelectionActiveHoverMenuBoxShadow: 0px -2px 3px 0px rgba(0, 0, 0, 0.08);

/* Flyout Direction */
$leftMenuDropdownIconFloat: left;
$leftMenuDropdownIconMargin: $itemLineHeightOffset 0em 0em 0em;

/* Left */
$leftSubMenuBorderRadius: $borderRadius;
$leftSubMenuMargin: 0em $subMenuDistanceAway 0em 0em;

/* Simple */
$simpleTransitionDuration: variables.$defaultDuration;
$simpleTransition: opacity $simpleTransitionDuration variables.$defaultEasing;

/* Floating */
$floatingMenuDistance: 0.5em;
$floatingMenuBoxShadow: variables.$floatingShadow;
$floatingMenuBorderRadius: $borderRadius;

/* Pointing */

$pointingArrowBackground: colors.$white;
$pointingArrowZIndex: 2;
$pointingArrowBoxShadow: -$menuBorderWidth -$menuBorderWidth 0px 0px $menuBorderColor;
$pointingArrowSize: variables.$relative7px;

$pointingArrowOffset: -($pointingArrowSize * 0.5);
$pointingArrowDistanceFromEdge: 1em;

$pointingMenuDistance: variables.$mini;
$pointingMenuBorderRadius: $borderRadius;
$pointingArrowBoxShadow: -$menuBorderWidth -$menuBorderWidth 0px 0px $menuBorderColor;

/* Pointing Upward */
$pointingUpwardMenuBorderRadius: $borderRadius;
$pointingUpwardArrowBoxShadow: $menuBorderWidth $menuBorderWidth 0px 0px $menuBorderColor;


/* Dropdown Carets */
@font-face {
    font-family: "Legacy-Dropdown";
    src: url(data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAVgAA8AAAAACFAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABGRlRNAAABWAAAABwAAAAchGgaq0dERUYAAAF0AAAAHAAAAB4AJwAPT1MvMgAAAZAAAABDAAAAVnW4TJdjbWFwAAAB1AAAAEsAAAFS8CcaqmN2dCAAAAIgAAAABAAAAAQAEQFEZ2FzcAAAAiQAAAAIAAAACP//AANnbHlmAAACLAAAAQoAAAGkrRHP9WhlYWQAAAM4AAAAMAAAADYPK8YyaGhlYQAAA2gAAAAdAAAAJANCAb1obXR4AAADiAAAACIAAAAiCBkAOGxvY2EAAAOsAAAAFAAAABQBnAIybWF4cAAAA8AAAAAfAAAAIAEVAF5uYW1lAAAD4AAAATAAAAKMFGlj5HBvc3QAAAUQAAAARgAAAHJoedjqd2ViZgAABVgAAAAGAAAABrO7W5UAAAABAAAAANXulPUAAAAA1r4hgAAAAADXu2Q1eNpjYGRgYOABYjEgZmJgBEIOIGYB8xgAA/YAN3jaY2BktGOcwMDKwMI4jTGNgYHBHUp/ZZBkaGFgYGJgZWbACgLSXFMYHFT/fLjFeOD/AQY9xjMMbkBhRpAcAN48DQYAeNpjYGBgZoBgGQZGBhDwAfIYwXwWBgMgzQGETAwMqn8+8H649f8/lHX9//9b7Pzf+fWgusCAkY0BzmUE6gHpQwGMDMMeAACbxg7SAAARAUQAAAAB//8AAnjadZBPSsNAGMXfS+yMqYgOhpSuSlKadmUhiVEhEMQzFF22m17BbbvzCh5BXCUn6EG8gjeQ4DepwYo4i+/ffL95j4EDA+CFC7jQuKyIeVHrI3wkleq9F7XrSInKteOeHdda8bOoaeepSc00NWPz/LRec9G8GabyGtEdF7h19z033GAMTK7zbM42xNEZpzYof0RtQ5CUHAQJ73OtVyutc+3b7Ou//b8XNlsPx3jgjUifABdhEohKJJL5iM5p39uqc7X1+sRQSqmGrUVhlsJ4lpmEUVwyT8SUYtg0P9DyNzPADDs+tjrGV6KRCRfsui3eHcL4/p8ZXvfMlcnEU+CLv7hDykOP+AKTPTxbAAB42mNgZGBgAGKuf5KP4vltvjLIMzGAwLV9ig0g+vruFFMQzdjACOJzMIClARh0CTJ42mNgZGBgPPD/AJD8wgAEjA0MjAyogAMAbOQEAQAAAAC7ABEAAAAAAKoAAAH0AAABgAAAAUAACAFAAAgAwAAXAAAAAAAAACoAKgAqADIAbACGAKAAugDSeNpjYGRgYOBkUGFgYgABEMkFhAwM/xn0QAIADdUBdAB42qWQvUoDQRSFv3GjaISUQaymSmGxJoGAsRC0iPYLsU50Y6IxrvlRtPCJJKUPIBb+PIHv4EN4djKuKAqCDHfmu+feOdwZoMCUAJNbAlYUMzaUlM14jjxbngOq7HnOia89z1Pk1vMCa9x7ztPkzfMyJbPj+ZGi6Xp+omxuPD+zaD7meaFg7mb8GrBqHmhwxoAxlm0uiRkpP9X5m26pKRoMxTGR1D49Dv/Yb/91o6l8qL6eu5n2hZQzn68utR9m3FU2cB4t9cdSLG2utI+44Eh/P9bqKO+oJ/WxmXssj77YkrjasZQD6SFddythk3Wtzrf+UF2p076Udla1VNzsERP3kkjVRKel7mp1udXYcHtZSlV7RfmJe1GiFWveluaeKD5/MuJcSk8Tpm/vvwPIbmJleNpjYGKAAFYG7ICTgYGRiZGZkYWRlZGNkZ2Rg5GTLT2nsiDDEEIZsZfmZRqZujmDaDcDAxcI7WIOpS2gtCWUdgQAZkcSmQAAAAFblbO6AAA=) format("woff");
    font-weight: normal;
    font-style: normal;
}

.ui.dropdown {
	--prc--icon--dropdown--family: "Legacy-Dropdown";
	--prc--icon--dropdown--content: "\f0d7";
}

/*******************************
            Dropdown
*******************************/

.ui.dropdown {
    cursor: pointer;
    position: relative;
    display: inline-block;
    outline: none;
    text-align: left;
    transition: $transition;

    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    // Seth Addition:
    font-family: variables.$sansSerifFont;
}

/*******************************
            Content
*******************************/

/*--------------
      Menu
---------------*/

.ui.dropdown .menu {
    cursor: auto;
    position: absolute;
    display: none;
    outline: none;
    top: 100%;
    min-width: max-content;
    transition: $menuTransition;

    margin: $menuMargin;
    padding: $menuPadding;
    background: $menuBackground;

    font-size: variables.$relativeMedium;
    text-shadow: none;
    text-align: $menuTextAlign;

    box-shadow: $menuBoxShadow;
    border: $menuBorder;
    border-radius: $menuBorderRadius;
    transition: $menuTransition;
    z-index: $menuZIndex;
    will-change: transform, opacity;
}

.ui.dropdown .menu>* {
    white-space: nowrap;
}

/*--------------
  Hidden Input
---------------*/

.ui.dropdown>input:not(.search):first-child,
.ui.dropdown>select {
    display: none !important;
}

/*--------------
 Dropdown Icon
---------------*/

.ui.dropdown>.dropdown.icon {
    position: relative;
    font-family: "Dropdown" !important;
    line-height: 1;
    height: 1em;
    width: 1.23em;
    font-size: $dropdownIconSize;
    margin: $dropdownIconMargin;
    backface-visibility: hidden;
    font-weight: normal;
    font-style: normal;
    text-align: center;
}

.ui.dropdown>.dropdown.icon {
    width: auto;
}

.ui.dropdown>.dropdown.icon:before {
    content: "\f0d7";
}

.ui.dropdown .menu>.item .dropdown.icon {
    width: auto;
    float: $itemDropdownIconFloat;
    margin: $itemDropdownIconMargin;
}

.ui.dropdown .menu>.item .dropdown.icon+.text {
    margin-right: $itemDropdownIconDistance;
}

/* Sub Menu */
.ui.dropdown .menu .item .dropdown.icon:before {
    content: "\f0da"
        /*rtl:'\f0d9'*/
    ;
}

.ui.dropdown .item .left.dropdown.icon:before,
.ui.dropdown .left.menu .item .dropdown.icon:before {
    content: "\f0d9"
        /*rtl:"\f0da"*/
    ;
}

/* Vertical Menu Dropdown */
.ui.vertical.menu .dropdown.item>.dropdown.icon:before {
    content: "\f0da"
        /*rtl:"\f0d9"*/
    ;
}

.ui.dropdown>.clear.icon:before {
    content: "\f00d";
}

/* Icons for Reference (Subsetted in 2.4.0)
  .dropdown.down:before { content: "\f0d7"; }
  .dropdown.up:before { content: "\f0d8"; }
  .dropdown.left:before { content: "\f0d9"; }
  .dropdown.right:before { content: "\f0da"; }
  .dropdown.close:before { content: "\f00d"; }
*/

/*--------------
      Text
---------------*/

.ui.dropdown>.text {
    display: inline-block;
    transition: $textTransition;
}

/*--------------
    Menu Item
---------------*/

.ui.dropdown .menu>.item {
    position: relative;
    cursor: pointer;
    display: block;
    border: $itemBorder;
    height: $itemHeight;
    text-align: $itemTextAlign;

    border-top: $itemDivider;
    line-height: $itemLineHeight;
    font-size: $itemFontSize;
    color: $itemColor;

    padding: $itemPadding !important;
    font-size: $itemFontSize;
    text-transform: $itemTextTransform;
    font-weight: $itemFontWeight;
    box-shadow: $itemBoxShadow;
    -webkit-touch-callout: none;
}

.ui.dropdown .menu>.item:first-child {
    border-top-width: 0px;
}

/*--------------
  Floated Content
---------------*/

.ui.dropdown>.text>[class*="right floated"],
.ui.dropdown .menu .item>[class*="right floated"] {
    float: right !important;
    margin-right: 0em !important;
    margin-left: $floatedDistance !important;
}

.ui.dropdown>.text>[class*="left floated"],
.ui.dropdown .menu .item>[class*="left floated"] {
    float: left !important;
    margin-left: 0em !important;
    margin-right: $floatedDistance !important;
}

.ui.dropdown .menu .item>.icon.floated,
.ui.dropdown .menu .item>.flag.floated,
.ui.dropdown .menu .item>.image.floated,
.ui.dropdown .menu .item>img.floated {
    margin-top: $itemLineHeightOffset;
}

/*--------------
  Menu Divider
---------------*/

.ui.dropdown .menu>.header {
    margin: $menuHeaderMargin;
    padding: $menuHeaderPadding;
    color: $menuHeaderColor;
    font-size: $menuHeaderFontSize;
    font-weight: $menuHeaderFontWeight;
    text-transform: $menuHeaderTextTransform;
}

.ui.dropdown .menu>.divider {
    border-top: $menuDividerBorder;
    height: 0em;
    margin: $menuDividerMargin;
}

.ui.dropdown.dropdown .menu>.input {
    width: auto;
    display: flex;
    margin: $menuInputMargin;
    min-width: $menuInputMinWidth;
}

.ui.dropdown .menu>.header+.input {
    margin-top: 0em;
}

.ui.dropdown .menu>.input:not(.transparent) input {
    padding: $menuInputPadding;
}

.ui.dropdown .menu>.input:not(.transparent) .button,
.ui.dropdown .menu>.input:not(.transparent) .icon,
.ui.dropdown .menu>.input:not(.transparent) .label {
    padding-top: $menuInputVerticalPadding;
    padding-bottom: $menuInputVerticalPadding;
}

/*-----------------
  Item Description
-------------------*/

.ui.dropdown>.text>.description,
.ui.dropdown .menu>.item>.description {
    float: $itemDescriptionFloat;
    margin: $itemDescriptionMargin;
    color: $itemDescriptionColor;
}

/*-----------------
       Message
-------------------*/

.ui.dropdown .menu>.message {
    padding: $messagePadding;
    font-weight: $messageFontWeight;
}

.ui.dropdown .menu>.message:not(.ui) {
    color: $messageColor;
}

/*--------------
    Sub Menu
---------------*/

.ui.dropdown .menu .menu {
    top: $subMenuTop !important;
    left: $subMenuLeft;
    right: $subMenuRight;
    margin: $subMenuMargin !important;
    border-radius: $subMenuBorderRadius !important;
    z-index: $subMenuZIndex !important;
}

/* Hide Arrow */
.ui.dropdown .menu .menu:after {
    display: none;
}

/*--------------
   Sub Elements
---------------*/

/* Icons / Flags / Labels / Image */
.ui.dropdown>.text>.icon,
.ui.dropdown>.text>.label,
.ui.dropdown>.text>.flag,
.ui.dropdown>.text>img,
.ui.dropdown>.text>.image {
    margin-top: $textLineHeightOffset;
}

.ui.dropdown .menu>.item>.icon,
.ui.dropdown .menu>.item>.label,
.ui.dropdown .menu>.item>.flag,
.ui.dropdown .menu>.item>.image,
.ui.dropdown .menu>.item>img {
    margin-top: $itemLineHeightOffset;
}

.ui.dropdown>.text>.icon,
.ui.dropdown>.text>.label,
.ui.dropdown>.text>.flag,
.ui.dropdown>.text>img,
.ui.dropdown>.text>.image,
.ui.dropdown .menu>.item>.icon,
.ui.dropdown .menu>.item>.label,
.ui.dropdown .menu>.item>.flag,
.ui.dropdown .menu>.item>.image,
.ui.dropdown .menu>.item>img {
    margin-left: 0em;
    float: $itemElementFloat;
    margin-right: $itemElementDistance;
}

/*--------------
     Image
---------------*/

.ui.dropdown>.text>img,
.ui.dropdown>.text>.image,
.ui.dropdown .menu>.item>.image,
.ui.dropdown .menu>.item>img {
    display: inline-block;
    vertical-align: top;
    width: auto;
    margin-top: $menuImageVerticalMargin;
    margin-bottom: $menuImageVerticalMargin;
    max-height: $menuImageMaxHeight;
}

/*******************************
            Coupling
*******************************/

/*--------------
      Menu
---------------*/

/* Remove Menu Item Divider */
.ui.dropdown .ui.menu>.item:before,
.ui.menu .ui.dropdown .menu>.item:before {
    display: none;
}

/* Prevent Menu Item Border */
.ui.menu .ui.dropdown .menu .active.item {
    border-left: none;
}

/* Automatically float dropdown menu right on last menu item */
.ui.menu .right.menu .dropdown:last-child .menu,
.ui.menu .right.dropdown.item .menu,
.ui.buttons>.ui.dropdown:last-child .menu {
    left: auto;
    right: 0em;
}

/*--------------
      Label
---------------*/

/* Dropdown Menu */
.ui.label.dropdown .menu {
    min-width: 100%;
}

/*--------------
     Button
---------------*/

/* No Margin On Icon Button */
.ui.dropdown.icon.button>.dropdown.icon {
    margin: 0em;
}

.ui.button.dropdown .menu {
    min-width: 100%;
}

/*******************************
              Types
*******************************/

/*--------------
    Block
---------------*/
.ui.sticky.fixed.top .ui.block.dropdown {
    margin-bottom: 0;
    margin-left: -1em;
    margin-right: -1em;
    width: calc(100% + 2em);
    padding-left: 1em;
    padding-right: 1em;
}

.ui.block.dropdown {
    padding: $blockPadding;
    border-top: $blockBorderTop;
    border-bottom: $blockBorderBottom;
    margin: $blockMargin;

    .text {
        @include mixins.uppercaseTitle(700, colors.$slate);
    }

    .menu {
        min-width: inherit;
        width: 100%;
        border-radius: 0;
        border-left: 0px;
        border-right: 0px;

        .item {
            white-space: inherit;
        }
    }

    // '.icon.dropdown {
    //   margin-top: 0.3em;
    // }'
}

/*--------------
    Selection
---------------*/

/* Displays like a select box */
.ui.selection.dropdown {
    cursor: pointer;
    word-wrap: break-word;
    line-height: 1em;
    white-space: normal;
    outline: 0;
    transform: rotateZ(0deg);

    min-width: $selectionMinWidth;
    min-height: $selectionMinHeight;

    background: $selectionBackground;
    display: $selectionDisplay;
    padding: $selectionPadding;
    color: $selectionTextColor;
    box-shadow: $selectionBoxShadow;
    border: $selectionBorder;
    border-radius: $selectionBorderRadius;
    transition: $selectionTransition;
}

.ui.selection.dropdown.visible,
.ui.selection.dropdown.active {
    z-index: $selectionZIndex;
}

select.ui.dropdown {
    height: $selectHeight;
    padding: $selectPadding;
    border: $selectBorder;
    visibility: $selectVisibility;
}

.ui.selection.dropdown>.search.icon,
.ui.selection.dropdown>.delete.icon,
.ui.selection.dropdown>.dropdown.icon {
    cursor: pointer;
    position: absolute;
    width: auto;
    height: auto;
    line-height: $searchSelectionLineHeight;
    top: $selectionVerticalPadding;
    right: $selectionHorizontalPadding;
    z-index: $selectionIconZIndex;
    margin: $selectionIconMargin;
    padding: $selectionIconPadding;
    opacity: $selectionIconOpacity;
    transition: $selectionIconTransition;
}

/* Compact */
.ui.compact.selection.dropdown {
    min-width: 0px;
}

/*  Selection Menu */
.ui.selection.dropdown .menu {
    overflow-x: hidden;
    overflow-y: auto;
    backface-visibility: hidden;
    -webkit-overflow-scrolling: touch;
    border-top-width: 0px !important;
    width: auto;
    outline: none;
    margin: 0px -$menuBorderWidth;
    min-width: $menuMinWidth;
    width: $menuMinWidth;

    border-radius: $selectionMenuBorderRadius;
    box-shadow: $selectionMenuBoxShadow;
    transition: $selectionMenuTransition;
}

.ui.selection.dropdown .menu:after,
.ui.selection.dropdown .menu:before {
    display: none;
}

/*--------------
    Message
---------------*/

.ui.selection.dropdown .menu>.message {
    padding: $selectionMessagePadding;
}

@media only screen and (max-width: variables.$largestMobileScreen) {
    .ui.selection.dropdown .menu {
        max-height: $selectionMobileMaxMenuHeight;
    }
}

@media only screen and (min-width: variables.$tabletBreakpoint) {
    .ui.selection.dropdown .menu {
        max-height: $selectionTabletMaxMenuHeight;
    }
}

@media only screen and (min-width: variables.$computerBreakpoint) {
    .ui.selection.dropdown .menu {
        max-height: $selectionComputerMaxMenuHeight;
    }
}

@media only screen and (min-width: variables.$widescreenMonitorBreakpoint) {
    .ui.selection.dropdown .menu {
        max-height: $selectionWidescreenMaxMenuHeight;
    }
}

/* Menu Item */
.ui.selection.dropdown .menu>.item {
    border-top: $selectionItemDivider;
    padding: $selectionItemPadding !important;
    white-space: normal;
    word-wrap: normal;
}

/* User Item */
.ui.selection.dropdown .menu>.hidden.addition.item {
    display: none;
}

/* Hover */
.ui.selection.dropdown:hover {
    border-color: $selectionHoverBorderColor;
    box-shadow: $selectionHoverBoxShadow;
}

/* Active */
.ui.selection.active.dropdown {
    border-color: $selectionVisibleBorderColor;
    box-shadow: $selectionVisibleBoxShadow;
}

.ui.selection.active.dropdown .menu {
    border-color: $selectionVisibleBorderColor;
    box-shadow: $selectionVisibleMenuBoxShadow;
}

/* Focus */
.ui.selection.dropdown:focus {
    border-color: $selectionFocusBorderColor;
    box-shadow: $selectionFocusBoxShadow;
}

.ui.selection.dropdown:focus .menu {
    border-color: $selectionFocusBorderColor;
    box-shadow: $selectionFocusMenuBoxShadow;
}

/* Visible */
.ui.selection.visible.dropdown>.text:not(.default) {
    font-weight: $selectionVisibleTextFontWeight;
    color: $selectionVisibleTextColor;
}

/* Visible Hover */
.ui.selection.active.dropdown:hover {
    border-color: $selectionActiveHoverBorderColor;
    box-shadow: $selectionActiveHoverBoxShadow;
}

.ui.selection.active.dropdown:hover .menu {
    border-color: $selectionActiveHoverBorderColor;
    box-shadow: $selectionActiveHoverMenuBoxShadow;
}

/* Dropdown Icon */
.ui.active.selection.dropdown>.dropdown.icon,
.ui.visible.selection.dropdown>.dropdown.icon {
    opacity: $selectionVisibleIconOpacity;
    z-index: 3;
}

/* Connecting Border */
.ui.active.selection.dropdown {
    border-bottom-left-radius: $selectionVisibleConnectingBorder !important;
    border-bottom-right-radius: $selectionVisibleConnectingBorder !important;
}

/* Empty Connecting Border */
.ui.active.empty.selection.dropdown {
    border-radius: $selectionBorderRadius !important;
    box-shadow: $selectionBoxShadow !important;
}

.ui.active.empty.selection.dropdown .menu {
    border: none !important;
    box-shadow: none !important;
}

/*--------------
   Searchable
---------------*/

/* Search Selection */
.ui.search.dropdown {
    min-width: $searchMinWidth;
}

/* Search Dropdown */
.ui.search.dropdown>input.search {
    background: none transparent !important;
    border: none !important;
    box-shadow: none !important;
    cursor: text;
    top: 0em;
    left: $textCursorSpacing;
    width: 100%;
    outline: none;
    -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
    padding: inherit;
}

/* Text Layering */
.ui.search.dropdown>input.search {
    position: absolute;
    z-index: 2;
}

.ui.search.dropdown>.text {
    cursor: text;
    position: relative;
    left: $textCursorSpacing;
    z-index: 3;
}

.ui.search.dropdown>.icon {}

/* Search Selection */
.ui.search.selection.dropdown>input.search {
    line-height: $searchSelectionLineHeight;
    padding: $searchSelectionInputPadding;
}

/* Used to size multi select input to character width */
.ui.search.selection.dropdown>span.sizer {
    line-height: $searchSelectionLineHeight;
    padding: $searchSelectionInputPadding;
    display: none;
    white-space: pre;
}

/* Active/Visible Search */
.ui.search.dropdown.active>input.search,
.ui.search.dropdown.visible>input.search {
    cursor: auto;
}

.ui.search.dropdown.active>.text,
.ui.search.dropdown.visible>.text {
    pointer-events: none;
}

/* Filtered Text */
.ui.active.search.dropdown input.search:focus+.text .icon,
.ui.active.search.dropdown input.search:focus+.text .flag {
    opacity: $selectionTextUnderlayIconOpacity;
}

.ui.active.search.dropdown input.search:focus+.text {
    color: $selectionTextUnderlayColor !important;
}

/* Search Menu */
.ui.search.dropdown .menu {
    overflow-x: hidden;
    overflow-y: auto;
    backface-visibility: hidden;
    -webkit-overflow-scrolling: touch;
}

@media only screen and (max-width: variables.$largestMobileScreen) {
    .ui.search.dropdown .menu {
        max-height: $searchMobileMaxMenuHeight;
    }
}

@media only screen and (min-width: variables.$tabletBreakpoint) {
    .ui.search.dropdown .menu {
        max-height: $searchTabletMaxMenuHeight;
    }
}

@media only screen and (min-width: variables.$computerBreakpoint) {
    .ui.search.dropdown .menu {
        max-height: $searchComputerMaxMenuHeight;
    }
}

@media only screen and (min-width: variables.$widescreenMonitorBreakpoint) {
    .ui.search.dropdown .menu {
        max-height: $searchWidescreenMaxMenuHeight;
    }
}

/*--------------
    Multiple
---------------*/

/* Multiple Selection */
.ui.multiple.dropdown {
    padding: $multipleSelectionPadding;
}

.ui.multiple.dropdown .menu {
    cursor: auto;
}

/* Multiple Search Selection */
.ui.multiple.search.dropdown,
.ui.multiple.search.dropdown>input.search {
    cursor: text;
}

/* Selection Label */
.ui.multiple.dropdown>.label {
    user-select: none;
    display: inline-block;
    vertical-align: top;
    white-space: normal;
    font-size: $labelSize;
    padding: $labelPadding;
    margin: $labelMargin;
    box-shadow: $labelBoxShadow;
}

/* Dropdown Icon */
.ui.multiple.dropdown .dropdown.icon {
    margin: $multipleSelectionDropdownIconMargin;
    padding: $multipleSelectionDropdownIconPadding;
}

/* Text */
.ui.multiple.dropdown>.text {
    position: static;
    padding: 0;
    max-width: 100%;
    margin: $multipleSelectionChildMargin;
    line-height: $multipleSelectionChildLineHeight;
}

.ui.multiple.dropdown>.label~input.search {
    margin-left: $multipleSelectionSearchAfterLabelDistance !important;
}

.ui.multiple.dropdown>.label~.text {
    display: none;
}

/*-----------------
  Multiple Search
-----------------*/

/* Prompt Text */
.ui.multiple.search.dropdown>.text {
    display: inline-block;
    position: absolute;
    top: 0;
    left: 0;
    padding: inherit;
    margin: $multipleSelectionChildMargin;
    line-height: $multipleSelectionChildLineHeight;
}

.ui.multiple.search.dropdown>.label~.text {
    display: none;
}

/* Search */
.ui.multiple.search.dropdown>input.search {
    position: static;
    padding: 0;
    max-width: 100%;
    margin: $multipleSelectionChildMargin;
    width: $multipleSelectionSearchStartWidth;
    line-height: $multipleSelectionChildLineHeight;
}

/*--------------
      Range
---------------*/

.ui.range-min.dropdown,
.ui.range-max.dropdown {
    min-width: inherit !important;
}

/*--------------
     Inline
---------------*/

.ui.inline.dropdown {
    cursor: pointer;
    display: inline-block;
    color: $inlineTextColor;
}

.ui.inline.dropdown .dropdown.icon {
    margin: $inlineIconMargin;
    vertical-align: baseline;
}

.ui.inline.dropdown>.text {
    font-weight: $inlineTextFontWeight;
}

.ui.inline.dropdown .menu {
    cursor: auto;
    margin-top: $inlineMenuDistance;
    border-radius: $inlineMenuBorderRadius;
}

/*******************************
            States
*******************************/

/*--------------------
        Active
----------------------*/

/* Menu Item Active */
.ui.dropdown .menu .active.item {
    background: $activeItemBackground;
    font-weight: $activeItemFontWeight;
    color: $activeItemColor;
    box-shadow: $activeItemBoxShadow;
    z-index: $activeItemZIndex;
}

/*--------------------
        Hover
----------------------*/

/* Menu Item Hover */
.ui.dropdown .menu>.item:hover {
    background: $hoveredItemBackground;
    color: $hoveredItemColor;
    z-index: $hoveredZIndex;
}

/*--------------------
       Loading
---------------------*/

.ui.loading.dropdown>i.icon {
    height: variables.$relative14px !important;
}

.ui.loading.selection.dropdown>i.icon {
    padding: variables.$relative21px variables.$relative18px !important;
}

.ui.loading.dropdown>i.icon:before {
    position: absolute;
    content: "";
    top: 50%;
    left: 50%;

    margin: variables.$loaderMargin;
    width: variables.$loaderSize;
    height: variables.$loaderSize;

    border-radius: variables.$circularRadius;
    border: variables.$loaderLineWidth solid colors.$loaderFillColor;
}

.ui.loading.dropdown>i.icon:after {
    position: absolute;
    content: "";
    top: 50%;
    left: 50%;
    box-shadow: 0px 0px 0px 1px transparent;

    margin: variables.$loaderMargin;
    width: variables.$loaderSize;
    height: variables.$loaderSize;

    animation: dropdown-spin variables.$loaderSpeed linear;
    animation-iteration-count: infinite;

    border-radius: variables.$circularRadius;

    border-color: colors.$loaderLineColor transparent transparent;
    border-style: solid;
    border-width: variables.$loaderLineWidth;
}

/* Coupling */
.ui.loading.dropdown.button>i.icon:before,
.ui.loading.dropdown.button>i.icon:after {
    display: none;
}

@keyframes dropdown-spin {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

/*--------------------
     Default Text
----------------------*/

.ui.dropdown:not(.button)>.default.text,
.ui.default.dropdown:not(.button)>.text {
    color: $defaultTextColor;
}

.ui.dropdown:not(.button)>input:focus~.default.text,
.ui.default.dropdown:not(.button)>input:focus~.text {
    color: $defaultTextFocusColor;
}

/*--------------------
        Loading
----------------------*/

.ui.loading.dropdown>.text {
    transition: none;
}

/* Used To Check Position */
.ui.dropdown .loading.menu {
    display: block;
    visibility: hidden;
    z-index: $loadingZIndex;
}

.ui.dropdown>.loading.menu {
    left: 0px !important;
    right: auto !important;
}

.ui.dropdown>.menu .loading.menu {
    left: 100% !important;
    right: auto !important;
}

/*--------------------
    Keyboard Select
----------------------*/

/* Selected Item */
.ui.dropdown.selected,
.ui.dropdown .menu .selected.item {
    background: $selectedBackground;
    color: $selectedColor;
}

/*--------------------
    Search Filtered
----------------------*/

/* Filtered Item */
.ui.dropdown>.filtered.text {
    visibility: hidden;
}

.ui.dropdown .filtered.item {
    display: none !important;
}

/*--------------------
        Error
----------------------*/

.ui.dropdown.error,
.ui.dropdown.error>.text,
.ui.dropdown.error>.default.text {
    color: colors.$errorTextColor;
}

.ui.selection.dropdown.error {
    background: colors.$errorBackgroundColor;
    border-color: colors.$errorBorderColor;
}

.ui.selection.dropdown.error:hover {
    border-color: colors.$errorBorderColor;
}

.ui.dropdown.error>.menu,
.ui.dropdown.error>.menu .menu {
    border-color: colors.$errorBorderColor;
}

.ui.dropdown.error>.menu>.item {
    color: $errorItemTextColor;
}

.ui.multiple.selection.error.dropdown>.label {
    border-color: colors.$errorBorderColor;
}

/* Item Hover */
.ui.dropdown.error>.menu>.item:hover {
    background-color: $errorItemHoverBackground;
}

/* Item Active */
.ui.dropdown.error>.menu .active.item {
    background-color: $errorItemActiveBackground;
}

/*--------------------
        Clear
----------------------*/

.ui.dropdown>.clear.dropdown.icon {
    opacity: $clearableIconOpacity;
    transition: opacity variables.$defaultDuration variables.$defaultEasing;
}

.ui.dropdown>.clear.dropdown.icon:hover {
    opacity: $clearableIconActiveOpacity;
}

/*--------------------
        Disabled
----------------------*/

/* Disabled */
.ui.disabled.dropdown,
.ui.dropdown .menu>.disabled.item {
    cursor: default;
    pointer-events: none;
    opacity: variables.$disabledOpacity;
}

/*******************************
           Variations
*******************************/

/*--------------
    Direction
---------------*/

/* Flyout Direction */
.ui.dropdown .menu {
    left: 0px;
}

/* Default Side (Right) */
.ui.dropdown .right.menu>.menu,
.ui.dropdown .menu .right.menu {
    left: 100% !important;
    right: auto !important;
    border-radius: $subMenuBorderRadius !important;
}

/* Leftward Opening Menu */
.ui.dropdown>.left.menu {
    left: auto !important;
    right: 0px !important;
}

.ui.dropdown>.left.menu .menu,
.ui.dropdown .menu .left.menu {
    left: auto;
    right: 100%;
    margin: $leftSubMenuMargin !important;
    border-radius: $leftSubMenuBorderRadius !important;
}

.ui.dropdown .item .left.dropdown.icon,
.ui.dropdown .left.menu .item .dropdown.icon {
    width: auto;
    float: $leftMenuDropdownIconFloat;
    margin: $leftMenuDropdownIconMargin;
}

.ui.dropdown .item .left.dropdown.icon,
.ui.dropdown .left.menu .item .dropdown.icon {
    width: auto;
    float: $leftMenuDropdownIconFloat;
    margin: $leftMenuDropdownIconMargin;
}

.ui.dropdown .item .left.dropdown.icon+.text,
.ui.dropdown .left.menu .item .dropdown.icon+.text {
    margin-left: $itemDropdownIconDistance;
    margin-right: 0em;
}

/*--------------
     Upward
---------------*/

/* Upward Main Menu */
.ui.upward.dropdown>.menu {
    top: auto;
    bottom: 100%;
    box-shadow: $upwardMenuBoxShadow;
    border-radius: $upwardMenuBorderRadius;
}

/* Upward Sub Menu */
.ui.dropdown .upward.menu {
    top: auto !important;
    bottom: 0 !important;
}

/* Active Upward */
.ui.simple.upward.active.dropdown,
.ui.simple.upward.dropdown:hover {
    border-radius: $borderRadius $borderRadius 0em 0em !important;
}

.ui.upward.dropdown.button:not(.pointing):not(.floating).active {
    border-radius: $borderRadius $borderRadius 0em 0em;
}

/* Selection */
.ui.upward.selection.dropdown .menu {
    border-top-width: $menuBorderWidth !important;
    border-bottom-width: 0px !important;
    box-shadow: $upwardSelectionMenuBoxShadow;
}

.ui.upward.selection.dropdown:hover {
    box-shadow: $upwardSelectionHoverBoxShadow;
}

/* Active Upward */
.ui.active.upward.selection.dropdown {
    border-radius: $upwardSelectionVisibleBorderRadius !important;
}

/* Visible Upward */
.ui.upward.selection.dropdown.visible {
    box-shadow: $upwardSelectionVisibleBoxShadow;
    border-radius: $upwardSelectionVisibleBorderRadius !important;
}

/* Visible Hover Upward */
.ui.upward.active.selection.dropdown:hover {
    box-shadow: $upwardSelectionActiveHoverBoxShadow;
}

.ui.upward.active.selection.dropdown:hover .menu {
    box-shadow: $upwardSelectionActiveHoverMenuBoxShadow;
}

/*--------------
     Simple
---------------*/

/*  Selection Menu */
.ui.scrolling.dropdown .menu,
.ui.dropdown .scrolling.menu {
    overflow-x: hidden;
    overflow-y: auto;
}

.ui.scrolling.dropdown .menu {
    overflow-x: hidden;
    overflow-y: auto;
    backface-visibility: hidden;
    -webkit-overflow-scrolling: touch;
    min-width: 100% !important;
    width: auto !important;
}

.ui.dropdown .scrolling.menu {
    position: static;
    overflow-y: auto;
    border: none;
    box-shadow: none !important;
    border-radius: 0 !important;
    margin: 0 !important;
    min-width: 100% !important;
    width: auto !important;
    border-top: $menuBorder;
}

.ui.scrolling.dropdown .menu .item.item.item,
.ui.dropdown .scrolling.menu>.item.item.item {
    border-top: $scrollingMenuItemBorder;
}

.ui.scrolling.dropdown .menu .item:first-child,
.ui.dropdown .scrolling.menu .item:first-child {
    border-top: none;
}

.ui.dropdown>.animating.menu .scrolling.menu,
.ui.dropdown>.visible.menu .scrolling.menu {
    display: block;
}

/* Scrollbar in IE */
@media all and (-ms-high-contrast: none) {

    .ui.scrolling.dropdown .menu,
    .ui.dropdown .scrolling.menu {
        min-width: calc(100% - #{variables.$scrollbarWidth});
    }
}

@media only screen and (max-width: variables.$largestMobileScreen) {

    .ui.scrolling.dropdown .menu,
    .ui.dropdown .scrolling.menu {
        max-height: $scrollingMobileMaxMenuHeight;
    }
}

@media only screen and (min-width: variables.$tabletBreakpoint) {

    .ui.scrolling.dropdown .menu,
    .ui.dropdown .scrolling.menu {
        max-height: $scrollingTabletMaxMenuHeight;
    }
}

@media only screen and (min-width: variables.$computerBreakpoint) {

    .ui.scrolling.dropdown .menu,
    .ui.dropdown .scrolling.menu {
        max-height: $scrollingComputerMaxMenuHeight;
    }
}

@media only screen and (min-width: variables.$widescreenMonitorBreakpoint) {

    .ui.scrolling.dropdown .menu,
    .ui.dropdown .scrolling.menu {
        max-height: $scrollingWidescreenMaxMenuHeight;
    }
}

/*--------------
     Simple
---------------*/

/* Displays without javascript */

.ui.simple.dropdown .menu:before,
.ui.simple.dropdown .menu:after {
    display: none;
}

.ui.simple.dropdown .menu {
    position: absolute;
    display: block;
    overflow: hidden;
    top: -9999px !important;
    opacity: 0;
    width: 0;
    height: 0;
    transition: $simpleTransition;
}

.ui.simple.active.dropdown,
.ui.simple.dropdown:hover {
    border-bottom-left-radius: 0em !important;
    border-bottom-right-radius: 0em !important;
}

.ui.simple.active.dropdown>.menu,
.ui.simple.dropdown:hover>.menu {
    overflow: visible;
    width: auto;
    height: auto;
    top: 100% !important;
    opacity: 1;
}

.ui.simple.dropdown>.menu>.item:active>.menu,
.ui.simple.dropdown:hover>.menu>.item:hover>.menu {
    overflow: visible;
    width: auto;
    height: auto;
    top: 0% !important;
    left: 100% !important;
    opacity: 1;
}

.ui.simple.disabled.dropdown:hover .menu {
    display: none;
    height: 0px;
    width: 0px;
    overflow: hidden;
}

/* Visible */
.ui.simple.visible.dropdown>.menu {
    display: block;
}

/*--------------
      Fluid
---------------*/

.ui.fluid.dropdown {
    display: block;
    width: 100%;
    min-width: 0em;
}

.ui.fluid.dropdown>.dropdown.icon {
    float: right;
}

/*--------------
    Floating
---------------*/

.ui.floating.dropdown .menu {
    left: 0;
    right: auto;
    box-shadow: $floatingMenuBoxShadow !important;
    border-radius: $floatingMenuBorderRadius !important;
}

.ui.floating.dropdown>.menu {
    margin-top: $floatingMenuDistance !important;
    border-radius: $floatingMenuBorderRadius !important;
}

/*--------------
     Pointing
---------------*/

.ui.pointing.dropdown>.menu {
    top: 100%;
    margin-top: $pointingMenuDistance;
    border-radius: $pointingMenuBorderRadius;
}

.ui.pointing.dropdown>.menu:after {
    display: block;
    position: absolute;
    pointer-events: none;
    content: "";
    visibility: visible;
    transform: rotate(45deg);

    width: $pointingArrowSize;
    height: $pointingArrowSize;
    box-shadow: $pointingArrowBoxShadow;
    background: $pointingArrowBackground;
    z-index: $pointingArrowZIndex;
}

.ui.pointing.dropdown>.menu:after {
    top: $pointingArrowOffset;
    left: 50%;
    margin: 0em 0em 0em $pointingArrowOffset;
}

/* Top Left Pointing */
.ui.top.left.pointing.dropdown>.menu {
    top: 100%;
    bottom: auto;
    left: 0%;
    right: auto;
    margin: $pointingArrowDistanceFromEdge 0em 0em;
}

.ui.top.left.pointing.dropdown>.menu {
    top: 100%;
    bottom: auto;
    left: 0%;
    right: auto;
    margin: $pointingArrowDistanceFromEdge 0em 0em;
}

.ui.top.left.pointing.dropdown>.menu:after {
    top: $pointingArrowOffset;
    left: $pointingArrowDistanceFromEdge;
    right: auto;
    margin: 0em;
    transform: rotate(45deg);
}

/* Top Right Pointing */
.ui.top.right.pointing.dropdown>.menu {
    top: 100%;
    bottom: auto;
    right: 0%;
    left: auto;
    margin: $pointingArrowDistanceFromEdge 0em 0em;
}

.ui.top.pointing.dropdown>.left.menu:after,
.ui.top.right.pointing.dropdown>.menu:after {
    top: $pointingArrowOffset;
    left: auto !important;
    right: $pointingArrowDistanceFromEdge !important;
    margin: 0em;
    transform: rotate(45deg);
}

/* Left Pointing */
.ui.left.pointing.dropdown>.menu {
    top: 0%;
    left: 100%;
    right: auto;
    margin: 0em 0em 0em $pointingArrowDistanceFromEdge;
}

.ui.left.pointing.dropdown>.menu:after {
    top: 1em;
    left: $pointingArrowOffset;
    margin: 0em 0em 0em 0em;
    transform: rotate(-45deg);
}

.ui.left:not(.top):not(.bottom).pointing.dropdown>.left.menu {
    left: auto !important;
    right: 100% !important;
    margin: 0em $pointingArrowDistanceFromEdge 0em 0em;
}

.ui.left:not(.top):not(.bottom).pointing.dropdown>.left.menu:after {
    top: 1em;
    left: auto;
    right: $pointingArrowOffset;
    margin: 0em 0em 0em 0em;
    transform: rotate(135deg);
}

/* Right Pointing */
.ui.right.pointing.dropdown>.menu {
    top: 0%;
    left: auto;
    right: 100%;
    margin: 0em $pointingArrowDistanceFromEdge 0em 0em;
}

.ui.right.pointing.dropdown>.menu:after {
    top: 1em;
    left: auto;
    right: $pointingArrowOffset;
    margin: 0em 0em 0em 0em;
    transform: rotate(135deg);
}

/* Bottom Pointing */
.ui.bottom.pointing.dropdown>.menu {
    top: auto;
    bottom: 100%;
    left: 0%;
    right: auto;
    margin: 0em 0em $pointingArrowDistanceFromEdge;
}

.ui.bottom.pointing.dropdown>.menu:after {
    top: auto;
    bottom: $pointingArrowOffset;
    right: auto;
    margin: 0em;
    transform: rotate(-135deg);
}

/* Reverse Sub-Menu Direction */
.ui.bottom.pointing.dropdown>.menu .menu {
    top: auto !important;
    bottom: 0px !important;
}

/* Bottom Left */
.ui.bottom.left.pointing.dropdown>.menu {
    left: 0%;
    right: auto;
}

.ui.bottom.left.pointing.dropdown>.menu:after {
    left: $pointingArrowDistanceFromEdge;
    right: auto;
}

/* Bottom Right */
.ui.bottom.right.pointing.dropdown>.menu {
    right: 0%;
    left: auto;
}

.ui.bottom.right.pointing.dropdown>.menu:after {
    left: auto;
    right: $pointingArrowDistanceFromEdge;
}

/* Upward pointing */
.ui.pointing.upward.dropdown .menu,
.ui.top.pointing.upward.dropdown .menu {
    top: auto !important;
    bottom: 100% !important;
    margin: 0em 0em $pointingMenuDistance;
    border-radius: $pointingUpwardMenuBorderRadius;
}

.ui.pointing.upward.dropdown .menu:after,
.ui.top.pointing.upward.dropdown .menu:after {
    top: 100% !important;
    bottom: auto !important;
    box-shadow: $pointingUpwardArrowBoxShadow;
    margin: $pointingArrowOffset 0em 0em;
}

/* Right Pointing Upward */
.ui.right.pointing.upward.dropdown:not(.top):not(.bottom) .menu {
    top: auto !important;
    bottom: 0 !important;
    margin: 0em $pointingArrowDistanceFromEdge 0em 0em;
}

.ui.right.pointing.upward.dropdown:not(.top):not(.bottom) .menu:after {
    top: auto !important;
    bottom: 0 !important;
    margin: 0em 0em $pointingArrowDistanceFromEdge 0em;
    box-shadow: $pointingArrowBoxShadow;
}

/* Left Pointing Upward */
.ui.left.pointing.upward.dropdown:not(.top):not(.bottom) .menu {
    top: auto !important;
    bottom: 0 !important;
    margin: 0em 0em 0em $pointingArrowDistanceFromEdge;
}

.ui.left.pointing.upward.dropdown:not(.top):not(.bottom) .menu:after {
    top: auto !important;
    bottom: 0 !important;
    margin: 0em 0em $pointingArrowDistanceFromEdge 0em;
    box-shadow: $pointingArrowBoxShadow;
}
