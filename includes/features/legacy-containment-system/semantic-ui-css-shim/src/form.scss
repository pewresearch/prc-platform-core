/*!
 * # Semantic UI - Form
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */
@use "master.variables"as variables;
@use "colors";
@use "sass:math";

/*******************************
              Form
 *******************************/

/*-------------------
        Elements
 --------------------*/

/* Form */
$gutterWidth: 1em;
$rowDistance: 1em;

/* Text */
$paragraphMargin: $rowDistance 0em;

/* Field */
$fieldMargin: 0em 0em $rowDistance;

/* Fields */
$fieldsMargin: 0em -(math.div($gutterWidth, 2)) $rowDistance;

/* Form Label */
$labelDistance: variables.$u4px;
$labelMargin: 0em 0em $labelDistance 0em;
$labelFontSize: variables.$absoluteSmall;
$labelFontWeight: variables.$bold;
$labelTextTransform: none;
$labelColor: colors.$textColor;

/* Input */
$inputFont: variables.$sansSerifFont; // Originally $pageFont; by Seth
$inputWidth: 100%;
$inputFontSize: 1em;
$inputPadding: (variables.$inputVerticalPadding + ((1em - variables.$inputLineHeight) * 0.5)) variables.$inputHorizontalPadding;
$inputBorder: 1px solid colors.$borderColor;
$inputBorderRadius: variables.$absoluteBorderRadius;
$inputColor: colors.$textColor;
$inputTransition: color variables.$defaultDuration variables.$defaultEasing,
border-color variables.$defaultDuration variables.$defaultEasing;
$inputBoxShadow: 0em 0em 0em 0em transparent inset;

/* Select */
$selectBackground: colors.$white;
$selectBorderRadius: $inputBorderRadius;
$selectBorder: $inputBorder;
$selectPadding: 0.62em variables.$inputHorizontalPadding;
$selectBoxShadow: $inputBoxShadow;
$selectTransition: $inputTransition;
$selectColor: $inputColor;

/* Text Area */
$textAreaPadding: variables.$inputVerticalPadding variables.$inputHorizontalPadding;
$textAreaHeight: 12em;
$textAreaResize: vertical;
$textAreaLineHeight: 1.2857;
$textAreaMinHeight: 8em;
$textAreaMaxHeight: 24em;
$textAreaBackground: colors.$inputBackground;
$textAreaBorder: $inputBorder;
$textAreaFontSize: $inputFontSize;
$textAreaTransition: $inputTransition;

/* Checkbox */
$checkboxVerticalAlign: top;
$checkboxLabelFontSize: 1em;
$checkboxLabelTextTransform: $labelTextTransform;

/* Errored Input */
$formErrorColor: colors.$negativeTextColor;
$formErrorBorder: colors.$negativeBorderColor;
$formErrorBackground: colors.$negativeBackgroundColor;

/* Inline Validation Prompt */
$promptBackground: colors.$white;
$promptBorderColor: $formErrorBorder;
$promptBorder: 1px solid $promptBorderColor;
$promptTextColor: $formErrorColor;
$inlinePromptMargin: -0.25em 0em -0.5em 0.5em;
$inlinePromptBorderWidth: 1px;

/*-------------------
         States
 --------------------*/

/* Focus */
$inputFocusPointerSize: 0px;

/* Input Focus */
$inputFocusBackground: colors.$inputBackground;
$inputFocusBorderColor: colors.$grayDark; // Originally $focusedFormBorderColor;
$inputFocusColor: colors.$selectedTextColor;
$inputFocusBoxShadow: $inputFocusPointerSize 0em 0em 0em colors.$selectedBorderColor inset;
$inputFocusBorderRadius: $inputBorderRadius;

/* Text Area Focus */
$textAreaFocusBackground: $inputFocusBackground;
$textAreaFocusBorderColor: $inputFocusBorderColor;
$textAreaFocusColor: $inputFocusColor;
$textAreaFocusBoxShadow: $inputFocusBoxShadow;
$textAreaFocusBorderRadius: $inputFocusBorderRadius;

/* Disabled */
$disabledLabelOpacity: variables.$disabledOpacity;

/* AutoFill */
$inputAutoFillBackground: #FFFFF0;
$inputAutoFillBorder: #E5DFA1;
$inputAutoFillFocusBackground: $inputAutoFillBackground;
$inputAutoFillFocusBorder: #D5C315;
$inputAutoFillErrorBackground: #FFFAF0;
$inputAutoFillErrorBorder: #E0B4B4;


/* Input Error */
$inputErrorBorderRadius: '';
$inputErrorBoxShadow: none;

/* Dropdown Error */
$dropdownErrorHoverBackground: #FBE7E7;
$dropdownErrorSelectedBackground: $dropdownErrorHoverBackground;
$dropdownErrorActiveBackground: #FDCFCF;
$dropdownErrorLabelBackground: #EACBCB;
$dropdownErrorLabelColor: colors.$errorTextColor;

/* Focused Error */
$inputErrorFocusBackground: colors.$negativeBackgroundColor;
$inputErrorFocusColor: colors.$negativeTextColor;
$inputErrorFocusBorder: colors.$negativeBorderColor;
$inputErrorFocusBoxShadow: none;

/* Placeholder Error */
$inputErrorPlaceholderColor: lighten($formErrorColor, 40);
$inputErrorPlaceholderFocusColor: lighten($formErrorColor, 30);

/* Loading Dimmer */
$loaderDimmerColor: rgba(255, 255, 255, 0.8);
$loaderDimmerZIndex: 100;

/* Loading Spinner */
$loaderSize: 3em;
$loaderLineZIndex: 101;

/*-------------------
         Types
 --------------------*/

/* Required */
$requiredContent: '*';
$requiredColor: colors.$negativeColor;
$requiredVerticalOffset: -0.2em;
$requiredDistance: 0.2em;
$requiredMargin: $requiredVerticalOffset 0em 0em $requiredDistance;

/* Inverted */
$invertedInputBackground: colors.$inputBackground;
$invertedInputBorderColor: colors.$whiteBorderColor;
$invertedInputBoxShadow: $inputBoxShadow;
$invertedInputColor: $inputColor;
$invertedLabelColor: colors.$invertedTextColor;
$invertedInputBoxShadow: none;

/*-------------------
       Variations
 --------------------*/

/* Grouped Fields */
$groupedMargin: $fieldMargin;
$groupedFieldMargin: 0.5em 0em;

$groupedLabelDistance: $labelDistance;
$groupedLabelColor: $labelColor;
$groupedLabelMargin: $labelMargin;
$groupedLabelFontSize: $labelFontSize;
$groupedLabelFontWeight: $labelFontWeight;
$groupedLabelTextTransform: $labelTextTransform;


/* Inline */
$inlineInputSize: variables.$relativeMedium;

$inlineLabelDistance: variables.$relativeTiny;
$inlineLabelColor: $labelColor;
$inlineLabelFontSize: $labelFontSize;
$inlineLabelFontWeight: $labelFontWeight;
$inlineLabelTextTransform: $labelTextTransform;

$groupedInlineLabelMargin: 0.035714em 1em 0em 0em;

/*-------------------
        Groups
 --------------------*/

$inlineFieldsMargin: 0em 1em 0em 0em;


/*******************************
             Elements
 *******************************/

/*--------------------
           Form
 ---------------------*/

.ui.form {
    position: relative;
    max-width: 100%;

    // Gravity Form Specific:
    &.gform {
        display: flex;
        flex-direction: row;

        li.gfield,
        .ginput_container {
            margin-top: 0;
        }

        .ginput_container>input {
            width: 100%;
        }

        .gform-body {}

        .gform_footer {
            margin: 0;
            padding: 0;
        }

        input[type="submit"] {
            background: black;
            color: white;
            font-size: 1rem !important;
            padding-top: 0.4rem;
            padding-bottom: 0.4rem;
            margin-left: 0.5rem;
        }
    }
}

/*--------------------
                 Content
 ---------------------*/

.ui.form>p {
    margin: $paragraphMargin;
}

/*--------------------
                 Field
 ---------------------*/

.ui.form .field {
    clear: both;
    margin: $fieldMargin;
}

.ui.form .field:last-child,
.ui.form .fields:last-child .field {
    margin-bottom: 0em;
}

.ui.form .fields .field {
    clear: both;
    margin: 0em;
}

/*--------------------
                 Labels
 ---------------------*/

.ui.form .field>label {
    display: block;
    margin: $labelMargin;
    color: $labelColor;
    font-family: $inputFont;
    font-size: $labelFontSize;
    font-weight: $labelFontWeight;
    text-transform: $labelTextTransform;
}

/*--------------------
         Standard Inputs
 ---------------------*/

.ui.form textarea,
.ui.form input:not([type]),
.ui.form input[type="date"],
.ui.form input[type="datetime-local"],
.ui.form input[type="email"],
.ui.form input[type="number"],
.ui.form input[type="password"],
.ui.form input[type="search"],
.ui.form input[type="tel"],
.ui.form input[type="time"],
.ui.form input[type="text"],
.ui.form input[type="file"],
.ui.form input[type="url"] {
    width: $inputWidth;
    vertical-align: top;
}

/* Set max height on unusual input */
.ui.form ::-webkit-datetime-edit,
.ui.form ::-webkit-inner-spin-button {
    height: variables.$inputLineHeight;
}

.ui.form input:not([type]),
.ui.form input[type="date"],
.ui.form input[type="datetime-local"],
.ui.form input[type="email"],
.ui.form input[type="number"],
.ui.form input[type="password"],
.ui.form input[type="search"],
.ui.form input[type="tel"],
.ui.form input[type="time"],
.ui.form input[type="text"],
.ui.form input[type="file"],
.ui.form input[type="url"] {
    font-family: $inputFont;
    margin: 0em;
    outline: none;
    -webkit-appearance: none;
    tap-highlight-color: rgba(255, 255, 255, 0);

    line-height: variables.$inputLineHeight;
    padding: $inputPadding;
    font-size: $inputFontSize;

    background: colors.$inputBackground;
    border: $inputBorder;
    color: $inputColor;
    border-radius: $inputBorderRadius;
    box-shadow: $inputBoxShadow;
    transition: $inputTransition;
}

/* Text Area */
.ui.form textarea {
    margin: 0em;
    -webkit-appearance: none;
    tap-highlight-color: rgba(255, 255, 255, 0);

    padding: $textAreaPadding;
    font-size: $textAreaFontSize;
    background: $textAreaBackground;
    border: $textAreaBorder;
    outline: none;
    color: $inputColor;
    border-radius: $inputBorderRadius;
    box-shadow: $inputBoxShadow;
    transition: $textAreaTransition;
    font-size: $textAreaFontSize;
    line-height: $textAreaLineHeight;
    resize: $textAreaResize;
}

.ui.form textarea:not([rows]) {
    height: $textAreaHeight;
    min-height: $textAreaMinHeight;
    max-height: $textAreaMaxHeight;
}

.ui.form textarea,
.ui.form input[type="checkbox"] {
    vertical-align: $checkboxVerticalAlign;
}

/*--------------------------
     Input w/ attached Button
 ---------------------------*/

.ui.form input.attached {
    width: auto;
}

/*--------------------
          Basic Select
 ---------------------*/

.ui.form select {
    display: block;
    height: auto;
    width: 100%;
    background: $selectBackground;
    border: $selectBorder;
    border-radius: $selectBorderRadius;
    box-shadow: $selectBoxShadow;
    padding: $selectPadding;
    color: $selectColor;
    transition: $selectTransition;
}

/*--------------------
              Dropdown
 ---------------------*/

/* Block */
.ui.form .field>.selection.dropdown {
    width: 100%;
}

.ui.form .field>.selection.dropdown>.dropdown.icon {
    float: right;
}

/* Inline */
.ui.form .inline.fields .field>.selection.dropdown,
.ui.form .inline.field>.selection.dropdown {
    width: auto;
}

.ui.form .inline.fields .field>.selection.dropdown>.dropdown.icon,
.ui.form .inline.field>.selection.dropdown>.dropdown.icon {
    float: none;
}

/*--------------------
              UI Input
 ---------------------*/

/* Block */
.ui.form .field .ui.input,
.ui.form .fields .field .ui.input,
.ui.form .wide.field .ui.input {
    width: 100%;
}

/* Inline  */
.ui.form .inline.fields .field:not(.wide) .ui.input,
.ui.form .inline.field:not(.wide) .ui.input {
    width: auto;
    vertical-align: middle;
}

/* Auto Input */
.ui.form .fields .field .ui.input input,
.ui.form .field .ui.input input {
    width: auto;
}

/* Full Width Input */
.ui.form .ten.fields .ui.input input,
.ui.form .nine.fields .ui.input input,
.ui.form .eight.fields .ui.input input,
.ui.form .seven.fields .ui.input input,
.ui.form .six.fields .ui.input input,
.ui.form .five.fields .ui.input input,
.ui.form .four.fields .ui.input input,
.ui.form .three.fields .ui.input input,
.ui.form .two.fields .ui.input input,
.ui.form .wide.field .ui.input input {
    flex: 1 0 auto;
    width: 0px;
}

/*--------------------
      Types of Messages
 ---------------------*/

.ui.form .success.message,
.ui.form .warning.message,
.ui.form .error.message {
    display: none;
}

/* Assumptions */
.ui.form .message:first-child {
    margin-top: 0px;
}

/*--------------------
      Validation Prompt
 ---------------------*/

.ui.form .field .prompt.label {
    white-space: normal;
    background: $promptBackground !important;
    border: $promptBorder !important;
    color: $promptTextColor !important;
}

.ui.form .inline.fields .field .prompt,
.ui.form .inline.field .prompt {
    vertical-align: top;
    margin: $inlinePromptMargin;
}

.ui.form .inline.fields .field .prompt:before,
.ui.form .inline.field .prompt:before {
    border-width: 0px 0px $inlinePromptBorderWidth $inlinePromptBorderWidth;
    bottom: auto;
    right: auto;
    top: 50%;
    left: 0em;
}

/*******************************
                         States
 *******************************/

/*--------------------
             Autofilled
 ---------------------*/

.ui.form .field.field input:-webkit-autofill {
    box-shadow: 0px 0px 0px 100px $inputAutoFillBackground inset !important;
    border-color: $inputAutoFillBorder !important;
}

/* Focus */
.ui.form .field.field input:-webkit-autofill:focus {
    box-shadow: 0px 0px 0px 100px $inputAutoFillFocusBackground inset !important;
    border-color: $inputAutoFillFocusBorder !important;
}

/* Error */
.ui.form .error.error input:-webkit-autofill {
    box-shadow: 0px 0px 0px 100px $inputAutoFillErrorBackground inset !important;
    border-color: $inputAutoFillErrorBorder !important;
}

/*--------------------
             Placeholder
 ---------------------*/

/* browsers require these rules separate */
.ui.form ::-webkit-input-placeholder {
    color: colors.$inputPlaceholderColor;
}

.ui.form :-ms-input-placeholder {
    color: colors.$inputPlaceholderColor !important;
}

.ui.form ::-moz-placeholder {
    color: colors.$inputPlaceholderColor;
}

.ui.form :focus::-webkit-input-placeholder {
    color: colors.$inputPlaceholderFocusColor;
}

.ui.form :focus:-ms-input-placeholder {
    color: colors.$inputPlaceholderFocusColor !important;
}

.ui.form :focus::-moz-placeholder {
    color: colors.$inputPlaceholderFocusColor;
}

/* Error Placeholder */
.ui.form .error ::-webkit-input-placeholder {
    color: $inputErrorPlaceholderColor;
}

.ui.form .error :-ms-input-placeholder {
    color: $inputErrorPlaceholderColor !important;
}

.ui.form .error ::-moz-placeholder {
    color: $inputErrorPlaceholderColor;
}

.ui.form .error :focus::-webkit-input-placeholder {
    color: $inputErrorPlaceholderFocusColor;
}

.ui.form .error :focus:-ms-input-placeholder {
    color: $inputErrorPlaceholderFocusColor !important;
}

.ui.form .error :focus::-moz-placeholder {
    color: $inputErrorPlaceholderFocusColor;
}

/*--------------------
                 Focus
 ---------------------*/

.ui.form input:not([type]):focus,
.ui.form input[type="date"]:focus,
.ui.form input[type="datetime-local"]:focus,
.ui.form input[type="email"]:focus,
.ui.form input[type="number"]:focus,
.ui.form input[type="password"]:focus,
.ui.form input[type="search"]:focus,
.ui.form input[type="tel"]:focus,
.ui.form input[type="time"]:focus,
.ui.form input[type="text"]:focus,
.ui.form input[type="file"]:focus,
.ui.form input[type="url"]:focus {
    color: $inputFocusColor;
    border-color: $inputFocusBorderColor;
    border-radius: $inputFocusBorderRadius;
    background: $inputFocusBackground;
    box-shadow: $inputFocusBoxShadow;
}

.ui.form textarea:focus {
    color: $textAreaFocusColor;
    border-color: $textAreaFocusBorderColor;
    border-radius: $textAreaFocusBorderRadius;
    background: $textAreaFocusBackground;
    box-shadow: $textAreaFocusBoxShadow;
    -webkit-appearance: none;
}

/*--------------------
                 Success
 ---------------------*/

/* On Form */
.ui.form.success .success.message:not(:empty) {
    display: block;
}

.ui.form.success .compact.success.message:not(:empty) {
    display: inline-block;
}

.ui.form.success .icon.success.message:not(:empty) {
    display: flex;
}

/*--------------------
                 Warning
 ---------------------*/

/* On Form */
.ui.form.warning .warning.message:not(:empty) {
    display: block;
}

.ui.form.warning .compact.warning.message:not(:empty) {
    display: inline-block;
}

.ui.form.warning .icon.warning.message:not(:empty) {
    display: flex;
}

/*--------------------
                 Error
 ---------------------*/

/* On Form */
.ui.form.error .error.message:not(:empty) {
    display: block;
}

.ui.form.error .compact.error.message:not(:empty) {
    display: inline-block;
}

.ui.form.error .icon.error.message:not(:empty) {
    display: flex;
}

/* On Field(s) */
.ui.form .fields.error .field label,
.ui.form .field.error label,
.ui.form .fields.error .field .input,
.ui.form .field.error .input {
    color: $formErrorColor;
}

.ui.form .fields.error .field .corner.label,
.ui.form .field.error .corner.label {
    border-color: $formErrorColor;
    color: colors.$white;
}

.ui.form .fields.error .field textarea,
.ui.form .fields.error .field select,
.ui.form .fields.error .field input:not([type]),
.ui.form .fields.error .field input[type="date"],
.ui.form .fields.error .field input[type="datetime-local"],
.ui.form .fields.error .field input[type="email"],
.ui.form .fields.error .field input[type="number"],
.ui.form .fields.error .field input[type="password"],
.ui.form .fields.error .field input[type="search"],
.ui.form .fields.error .field input[type="tel"],
.ui.form .fields.error .field input[type="time"],
.ui.form .fields.error .field input[type="text"],
.ui.form .fields.error .field input[type="file"],
.ui.form .fields.error .field input[type="url"],
.ui.form .field.error textarea,
.ui.form .field.error select,
.ui.form .field.error input:not([type]),
.ui.form .field.error input[type="date"],
.ui.form .field.error input[type="datetime-local"],
.ui.form .field.error input[type="email"],
.ui.form .field.error input[type="number"],
.ui.form .field.error input[type="password"],
.ui.form .field.error input[type="search"],
.ui.form .field.error input[type="tel"],
.ui.form .field.error input[type="time"],
.ui.form .field.error input[type="text"],
.ui.form .field.error input[type="file"],
.ui.form .field.error input[type="url"] {
    background: $formErrorBackground;
    border-color: $formErrorBorder;
    color: $formErrorColor;
    border-radius: $inputErrorBorderRadius;
    box-shadow: $inputErrorBoxShadow;
}

.ui.form .field.error textarea:focus,
.ui.form .field.error select:focus,
.ui.form .field.error input:not([type]):focus,
.ui.form .field.error input[type="date"]:focus,
.ui.form .field.error input[type="datetime-local"]:focus,
.ui.form .field.error input[type="email"]:focus,
.ui.form .field.error input[type="number"]:focus,
.ui.form .field.error input[type="password"]:focus,
.ui.form .field.error input[type="search"]:focus,
.ui.form .field.error input[type="tel"]:focus,
.ui.form .field.error input[type="time"]:focus,
.ui.form .field.error input[type="text"]:focus,
.ui.form .field.error input[type="file"]:focus,
.ui.form .field.error input[type="url"]:focus {
    background: $inputErrorFocusBackground;
    border-color: $inputErrorFocusBorder;
    color: $inputErrorFocusColor;

    -webkit-appearance: none;
    box-shadow: $inputErrorFocusBoxShadow;
}

/* Preserve Native Select Stylings */
.ui.form .field.error select {
    -webkit-appearance: menulist-button;
}

/*------------------
         Dropdown Error
 --------------------*/

.ui.form .fields.error .field .ui.dropdown,
.ui.form .fields.error .field .ui.dropdown .item,
.ui.form .field.error .ui.dropdown,
.ui.form .field.error .ui.dropdown .text,
.ui.form .field.error .ui.dropdown .item {
    background: $formErrorBackground;
    color: $formErrorColor;
}

.ui.form .fields.error .field .ui.dropdown,
.ui.form .field.error .ui.dropdown {
    border-color: $formErrorBorder !important;
}

.ui.form .fields.error .field .ui.dropdown:hover,
.ui.form .field.error .ui.dropdown:hover {
    border-color: $formErrorBorder !important;
}

.ui.form .fields.error .field .ui.dropdown:hover .menu,
.ui.form .field.error .ui.dropdown:hover .menu {
    border-color: $formErrorBorder;
}

.ui.form .fields.error .field .ui.multiple.selection.dropdown>.label,
.ui.form .field.error .ui.multiple.selection.dropdown>.label {
    background-color: $dropdownErrorLabelBackground;
    color: $dropdownErrorLabelColor;
}

/* Hover */
.ui.form .fields.error .field .ui.dropdown .menu .item:hover,
.ui.form .field.error .ui.dropdown .menu .item:hover {
    background-color: $dropdownErrorHoverBackground;
}

/* Selected */
.ui.form .fields.error .field .ui.dropdown .menu .selected.item,
.ui.form .field.error .ui.dropdown .menu .selected.item {
    background-color: $dropdownErrorSelectedBackground;
}

/* Active */
.ui.form .fields.error .field .ui.dropdown .menu .active.item,
.ui.form .field.error .ui.dropdown .menu .active.item {
    background-color: $dropdownErrorActiveBackground !important;
}

/*--------------------
         Checkbox Error
 ---------------------*/

.ui.form .fields.error .field .checkbox:not(.toggle):not(.slider) label,
.ui.form .field.error .checkbox:not(.toggle):not(.slider) label,
.ui.form .fields.error .field .checkbox:not(.toggle):not(.slider) .box,
.ui.form .field.error .checkbox:not(.toggle):not(.slider) .box {
    color: $formErrorColor;
}

.ui.form .fields.error .field .checkbox:not(.toggle):not(.slider) label:before,
.ui.form .field.error .checkbox:not(.toggle):not(.slider) label:before,
.ui.form .fields.error .field .checkbox:not(.toggle):not(.slider) .box:before,
.ui.form .field.error .checkbox:not(.toggle):not(.slider) .box:before {
    background: $formErrorBackground;
    border-color: $formErrorBorder;
}

.ui.form .fields.error .field .checkbox label:after,
.ui.form .field.error .checkbox label:after,
.ui.form .fields.error .field .checkbox .box:after,
.ui.form .field.error .checkbox .box:after {
    color: $formErrorColor;
}

/*--------------------
              Disabled
 ---------------------*/

.ui.form .disabled.fields .field,
.ui.form .disabled.field,
.ui.form .field :disabled {
    pointer-events: none;
    opacity: variables.$disabledOpacity;
}

.ui.form .field.disabled>label,
.ui.form .fields.disabled>label {
    opacity: $disabledLabelOpacity;
}

.ui.form .field.disabled :disabled {
    opacity: 1;
}

/*--------------
         Loading
 ---------------*/

.ui.loading.form {
    position: relative;
    cursor: default;
    pointer-events: none;
}

.ui.loading.form:before {
    position: absolute;
    content: "";
    top: 0%;
    left: 0%;
    background: $loaderDimmerColor;
    width: 100%;
    height: 100%;
    z-index: $loaderDimmerZIndex;
}

.ui.loading.form:after {
    position: absolute;
    content: "";
    top: 50%;
    left: 50%;

    margin: variables.$loaderMargin;
    width: $loaderSize;
    height: $loaderSize;

    animation: form-spin variables.$loaderSpeed linear;
    animation-iteration-count: infinite;

    border-radius: variables.$circularRadius;

    border-color: colors.$loaderLineColor colors.$loaderFillColor colors.$loaderFillColor colors.$loaderFillColor;
    border-style: solid;
    border-width: variables.$loaderLineWidth;

    box-shadow: 0px 0px 0px 1px transparent;
    visibility: visible;
    z-index: $loaderLineZIndex;
}

@keyframes form-spin {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

/*******************************
                  Element Types
 *******************************/

/*--------------------
          Required Field
 ---------------------*/

.ui.form .required.fields:not(.grouped)>.field>label:after,
.ui.form .required.fields.grouped>label:after,
.ui.form .required.field>label:after,
.ui.form .required.fields:not(.grouped)>.field>.checkbox:after,
.ui.form .required.field>.checkbox:after {
    margin: $requiredMargin;
    content: $requiredContent;
    color: $requiredColor;
}

.ui.form .required.fields:not(.grouped)>.field>label:after,
.ui.form .required.fields.grouped>label:after,
.ui.form .required.field>label:after {
    display: inline-block;
    vertical-align: top;
}

.ui.form .required.fields:not(.grouped)>.field>.checkbox:after,
.ui.form .required.field>.checkbox:after {
    position: absolute;
    top: 0%;
    left: 100%;
}

/*******************************
                      Variations
 *******************************/

/*--------------------
         Inverted Colors
 ---------------------*/

.ui.inverted.form label,
.ui.form .inverted.segment label,
.ui.form .inverted.segment .ui.checkbox label,
.ui.form .inverted.segment .ui.checkbox .box,
.ui.inverted.form .ui.checkbox label,
.ui.inverted.form .ui.checkbox .box,
.ui.inverted.form .inline.fields>label,
.ui.inverted.form .inline.fields .field>label,
.ui.inverted.form .inline.fields .field>p,
.ui.inverted.form .inline.field>label,
.ui.inverted.form .inline.field>p {
    color: $invertedLabelColor;
}

/* Inverted Field */
.ui.inverted.form input:not([type]),
.ui.inverted.form input[type="date"],
.ui.inverted.form input[type="datetime-local"],
.ui.inverted.form input[type="email"],
.ui.inverted.form input[type="number"],
.ui.inverted.form input[type="password"],
.ui.inverted.form input[type="search"],
.ui.inverted.form input[type="tel"],
.ui.inverted.form input[type="time"],
.ui.inverted.form input[type="text"],
.ui.inverted.form input[type="file"],
.ui.inverted.form input[type="url"] {
    background: $invertedInputBackground;
    border-color: $invertedInputBorderColor;
    color: $invertedInputColor;
    box-shadow: $invertedInputBoxShadow;
}

/*--------------------
          Field Groups
 ---------------------*/

/* Grouped Vertically */
.ui.form .grouped.fields {
    display: block;
    margin: $groupedMargin;
}

.ui.form .grouped.fields:last-child {
    margin-bottom: 0em;
}

.ui.form .grouped.fields>label {
    margin: $groupedLabelMargin;
    color: $groupedLabelColor;
    font-size: $groupedLabelFontSize;
    font-weight: $groupedLabelFontWeight;
    text-transform: $groupedLabelTextTransform;
}

.ui.form .grouped.fields .field,
.ui.form .grouped.inline.fields .field {
    display: block;
    margin: $groupedFieldMargin;
    padding: 0em;
}

/*--------------------
                 Fields
 ---------------------*/

/* Split fields */
.ui.form .fields {
    display: flex;
    flex-direction: row;
    margin: $fieldsMargin;
}

.ui.form .fields>.field {
    flex: 0 1 auto;
    padding-left: math.div($gutterWidth, 2);
    padding-right: math.div($gutterWidth, 2);
}

.ui.form .fields>.field:first-child {
    border-left: none;
    box-shadow: none;
}

/* Other Combinations */
.ui.form .two.fields>.fields,
.ui.form .two.fields>.field {
    width: variables.$twoColumn;
}

.ui.form .three.fields>.fields,
.ui.form .three.fields>.field {
    width: variables.$threeColumn;
}

.ui.form .four.fields>.fields,
.ui.form .four.fields>.field {
    width: variables.$fourColumn;
}

.ui.form .five.fields>.fields,
.ui.form .five.fields>.field {
    width: variables.$fiveColumn;
}

.ui.form .six.fields>.fields,
.ui.form .six.fields>.field {
    width: variables.$sixColumn;
}

.ui.form .seven.fields>.fields,
.ui.form .seven.fields>.field {
    width: variables.$sevenColumn;
}

.ui.form .eight.fields>.fields,
.ui.form .eight.fields>.field {
    width: variables.$eightColumn;
}

.ui.form .nine.fields>.fields,
.ui.form .nine.fields>.field {
    width: variables.$nineColumn;
}

.ui.form .ten.fields>.fields,
.ui.form .ten.fields>.field {
    width: variables.$tenColumn;
}

/* Swap to full width on mobile */
@media only screen and (max-width: variables.$largestMobileScreen) {
    .ui.form .fields {
        flex-wrap: wrap;
    }

    .ui[class*="equal width"].form:not(.unstackable) .fields>.field,
    .ui.form:not(.unstackable) [class*="equal width"].fields:not(.unstackable)>.field,
    .ui.form:not(.unstackable) .two.fields:not(.unstackable)>.fields,
    .ui.form:not(.unstackable) .two.fields:not(.unstackable)>.field,
    .ui.form:not(.unstackable) .three.fields:not(.unstackable)>.fields,
    .ui.form:not(.unstackable) .three.fields:not(.unstackable)>.field,
    .ui.form:not(.unstackable) .four.fields:not(.unstackable)>.fields,
    .ui.form:not(.unstackable) .four.fields:not(.unstackable)>.field,
    .ui.form:not(.unstackable) .five.fields:not(.unstackable)>.fields,
    .ui.form:not(.unstackable) .five.fields:not(.unstackable)>.field,
    .ui.form:not(.unstackable) .six.fields:not(.unstackable)>.fields,
    .ui.form:not(.unstackable) .six.fields:not(.unstackable)>.field,
    .ui.form:not(.unstackable) .seven.fields:not(.unstackable)>.fields,
    .ui.form:not(.unstackable) .seven.fields:not(.unstackable)>.field,
    .ui.form:not(.unstackable) .eight.fields:not(.unstackable)>.fields,
    .ui.form:not(.unstackable) .eight.fields:not(.unstackable)>.field,
    .ui.form:not(.unstackable) .nine.fields:not(.unstackable)>.fields,
    .ui.form:not(.unstackable) .nine.fields:not(.unstackable)>.field,
    .ui.form:not(.unstackable) .ten.fields:not(.unstackable)>.fields,
    .ui.form:not(.unstackable) .ten.fields:not(.unstackable)>.field {
        width: variables.$oneColumn !important;
        margin: 0em 0em $rowDistance;
    }
}

/* Sizing Combinations */
.ui.form .fields .wide.field {
    width: variables.$oneWide;
    padding-left: math.div($gutterWidth, 2);
    padding-right: math.div($gutterWidth, 2);
}

.ui.form .one.wide.field {
    width: variables.$oneWide !important;
}

.ui.form .two.wide.field {
    width: variables.$twoWide !important;
}

.ui.form .three.wide.field {
    width: variables.$threeWide !important;
}

.ui.form .four.wide.field {
    width: variables.$fourWide !important;
}

.ui.form .five.wide.field {
    width: variables.$fiveWide !important;
}

.ui.form .six.wide.field {
    width: variables.$sixWide !important;
}

.ui.form .seven.wide.field {
    width: variables.$sevenWide !important;
}

.ui.form .eight.wide.field {
    width: variables.$eightWide !important;
}

.ui.form .nine.wide.field {
    width: variables.$nineWide !important;
}

.ui.form .ten.wide.field {
    width: variables.$tenWide !important;
}

.ui.form .eleven.wide.field {
    width: variables.$elevenWide !important;
}

.ui.form .twelve.wide.field {
    width: variables.$twelveWide !important;
}

.ui.form .thirteen.wide.field {
    width: variables.$thirteenWide !important;
}

.ui.form .fourteen.wide.field {
    width: variables.$fourteenWide !important;
}

.ui.form .fifteen.wide.field {
    width: variables.$fifteenWide !important;
}

.ui.form .sixteen.wide.field {
    width: variables.$sixteenWide !important;
}

/* Swap to full width on mobile */
@media only screen and (max-width: variables.$largestMobileScreen) {

    .ui.form:not(.unstackable) .two.fields:not(.unstackable)>.fields,
    .ui.form:not(.unstackable) .two.fields:not(.unstackable)>.field,
    .ui.form:not(.unstackable) .three.fields:not(.unstackable)>.fields,
    .ui.form:not(.unstackable) .three.fields:not(.unstackable)>.field,
    .ui.form:not(.unstackable) .four.fields:not(.unstackable)>.fields,
    .ui.form:not(.unstackable) .four.fields:not(.unstackable)>.field,
    .ui.form:not(.unstackable) .five.fields:not(.unstackable)>.fields,
    .ui.form:not(.unstackable) .five.fields:not(.unstackable)>.field,
    .ui.form:not(.unstackable) .fields:not(.unstackable)>.two.wide.field,
    .ui.form:not(.unstackable) .fields:not(.unstackable)>.three.wide.field,
    .ui.form:not(.unstackable) .fields:not(.unstackable)>.four.wide.field,
    .ui.form:not(.unstackable) .fields:not(.unstackable)>.five.wide.field,
    .ui.form:not(.unstackable) .fields:not(.unstackable)>.six.wide.field,
    .ui.form:not(.unstackable) .fields:not(.unstackable)>.seven.wide.field,
    .ui.form:not(.unstackable) .fields:not(.unstackable)>.eight.wide.field,
    .ui.form:not(.unstackable) .fields:not(.unstackable)>.nine.wide.field,
    .ui.form:not(.unstackable) .fields:not(.unstackable)>.ten.wide.field,
    .ui.form:not(.unstackable) .fields:not(.unstackable)>.eleven.wide.field,
    .ui.form:not(.unstackable) .fields:not(.unstackable)>.twelve.wide.field,
    .ui.form:not(.unstackable) .fields:not(.unstackable)>.thirteen.wide.field,
    .ui.form:not(.unstackable) .fields:not(.unstackable)>.fourteen.wide.field,
    .ui.form:not(.unstackable) .fields:not(.unstackable)>.fifteen.wide.field,
    .ui.form:not(.unstackable) .fields:not(.unstackable)>.sixteen.wide.field {
        width: variables.$oneColumn !important;
    }

    .ui.form .fields {
        margin-bottom: 0em;
    }
}

/*--------------------
          Equal Width
 ---------------------*/

.ui[class*="equal width"].form .fields>.field,
.ui.form [class*="equal width"].fields>.field {
    width: 100%;
    flex: 1 1 auto;
}

/*--------------------
         Inline Fields
 ---------------------*/

.ui.form .inline.fields {
    margin: $fieldMargin;
    align-items: center;
}

.ui.form .inline.fields .field {
    margin: 0em;
    padding: $inlineFieldsMargin;
}

/* Inline Label */
.ui.form .inline.fields>label,
.ui.form .inline.fields .field>label,
.ui.form .inline.fields .field>p,
.ui.form .inline.field>label,
.ui.form .inline.field>p {
    display: inline-block;
    width: auto;
    margin-top: 0em;
    margin-bottom: 0em;
    vertical-align: baseline;
    font-size: $inlineLabelFontSize;
    font-weight: $inlineLabelFontWeight;
    color: $inlineLabelColor;
    text-transform: $inlineLabelTextTransform;
}

/* Grouped Inline Label */
.ui.form .inline.fields>label {
    margin: $groupedInlineLabelMargin;
}

/* Inline Input */
.ui.form .inline.fields .field>input,
.ui.form .inline.fields .field>select,
.ui.form .inline.field>input,
.ui.form .inline.field>select {
    display: inline-block;
    width: auto;

    margin-top: 0em;
    margin-bottom: 0em;

    vertical-align: middle;
    font-size: $inlineInputSize;
}

/* Label */
.ui.form .inline.fields .field> :first-child,
.ui.form .inline.field> :first-child {
    margin: 0em $inlineLabelDistance 0em 0em;
}

.ui.form .inline.fields .field> :only-child,
.ui.form .inline.field> :only-child {
    margin: 0em;
}

/* Wide */
.ui.form .inline.fields .wide.field {
    display: flex;
    align-items: center;
}

.ui.form .inline.fields .wide.field>input,
.ui.form .inline.fields .wide.field>select {
    width: 100%;
}

/*--------------------
                 Sizes
 ---------------------*/

.ui.mini.form {
    font-size: variables.$mini;
}

.ui.tiny.form {
    font-size: variables.$tiny;
}

.ui.small.form {
    font-size: variables.$small;
}

.ui.form {
    font-size: variables.$medium;
}

.ui.large.form {
    font-size: variables.$large;
}

.ui.big.form {
    font-size: variables.$big;
}

.ui.huge.form {
    font-size: variables.$huge;
}

.ui.massive.form {
    font-size: variables.$massive;
}
