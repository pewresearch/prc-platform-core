/*!
 * # Semantic UI - Segment
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */

@use "master.variables"as variables;
@use "colors";

/*******************************
             Segment
 *******************************/

/*-------------------
        Element
 --------------------*/

$background: colors.$white;
$borderWidth: 1px;
$border: $borderWidth solid colors.$borderColor;

$boxShadow: variables.$subtleShadow;
$verticalPadding: 1em;
$horizontalPadding: 1em;
$padding: $verticalPadding $horizontalPadding;

$verticalMargin: 1rem;
$horizontalMargin: 0em;
$margin: $verticalMargin $horizontalMargin;
$borderRadius: 0; //$defaultBorderRadius;

$minWidth: 250px;

/*-------------------
        Group
 --------------------*/

$groupedMargin: $margin;
$groupedBorder: $border;
$groupedBoxShadow: $boxShadow;
$groupedBorderRadius: $borderRadius;

$nestedGroupMargin: $verticalMargin $verticalMargin;

$groupedSegmentBorder: none;
$groupedSegmentDivider: $border;
$groupedSegmentMargin: 0em;
$groupedSegmentWidth: auto;
$groupedSegmentBoxShadow: none;

/*-------------------
        Coupling
 --------------------*/

/* Page Grid Segment */
$pageGridMargin: (2 * $verticalPadding);

/*******************************
             Types
 *******************************/

/* Placeholder */
$placeholderBackground: colors.$offWhite;
$placeholderPadding: $padding;
$placeholderBorderColor: colors.$borderColor;
$placeholderBoxShadow: 0px 2px 25px 0 rgba(34, 36, 38, 0.05) inset;
$placeholderMinHeight: 18rem;
$placeholderContentMaxWidth: 15rem;
$placeholderContentInlineButtonMargin: 0px variables.$u5px 0px 0px;

/* Piled */
$piledZIndex: auto;
$piledMargin: 3em;
$piledBoxShadow: "";
$piledDegrees: 1.2deg;
$piledBorder: $border;

/* Circular */
$circularPadding: 2em;

/* Stacked */
$stackedHeight: 6px;
$stackedPageBackground: colors.$subtleTransparentBlack;
$stackedPadding: $verticalPadding+(0.4em);
$tallStackedPadding: $verticalPadding+(0.8em);

/* Inset Arrow */
$insetBackground: #e7e8e9;
$insetBoxShadow: 0 6px 10px -8px inset;

/*******************************
             States
 *******************************/

/* Loading Dimmer */
$loaderDimmerColor: rgba(255, 255, 255, 0.8);
$loaderDimmerZIndex: 100;

/* Loading Spinner */
$loaderSize: 3em;
$loaderLineZIndex: 101;

/*******************************
             Variations
 *******************************/

/* Raised */
$raisedBoxShadow: variables.$floatingShadow;

/* Padded */
$paddedSegmentPadding: 1.5em;
$veryPaddedSegmentPadding: 3em;

/* Attached */
$attachedTopOffset: 0px;
$attachedBottomOffset: 0px;
$attachedHorizontalOffset: -$borderWidth;
$attachedWidth: calc(100% - (#{$attachedHorizontalOffset} * 2));
$attachedBoxShadow: none;
$attachedBorder: $borderWidth solid colors.$solidBorderColor;
$attachedBottomBoxShadow: $boxShadow,
$attachedBoxShadow;

/* Inverted */
$invertedBackground: colors.$black;

/* Floated */
$floatedDistance: 1em;

/* Basic */
$basicBackground: none transparent;
$basicBorder: none;
$basicBoxShadow: none;
$basicBorderRadius: 0px;

/* Colors */
$coloredBorderSize: 2px;

/* Ordinality */
$secondaryBackground: colors.$darkWhite;
$secondaryColor: colors.$mutedTextColor;

$tertiaryBackground: colors.$midWhite;
$tertiaryColor: colors.$mutedTextColor;

$secondaryInvertedLightness: 0.2;
$secondaryInvertedBackground: lighten(colors.$black,
    ($secondaryInvertedLightness * 100)) linear-gradient(rgba(255, 255, 255, $secondaryInvertedLightness) 0%,
    rgba(255, 255, 255, $secondaryInvertedLightness) 100%);
$secondaryInvertedColor: colors.$invertedMutedTextColor;

$tertiaryInvertedLightness: 0.35;
$tertiaryInvertedBackground: lighten(colors.$black, ($tertiaryInvertedLightness * 100)) linear-gradient(rgba(255, 255, 255, $tertiaryInvertedLightness) 0%,
    rgba(255, 255, 255, $tertiaryInvertedLightness) 100%);
$tertiaryInvertedColor: colors.$invertedMutedTextColor;


/*******************************
             Segment
 *******************************/

.ui.segment {
    position: relative;
    background: $background;
    box-shadow: $boxShadow;
    margin: $margin;
    padding: $padding;
    border-radius: $borderRadius;
    border: $border;
    font-family: variables.$sansSerifFont;
    min-width: $minWidth;
}

.ui.segment:first-child {
    margin-top: 0em;
}

.ui.segment:last-child {
    margin-bottom: 0em;
}

// Seth Addition
.ui.segment:not(.alignright),
.ui.segment:not(.alignleft),
.ui.segment:not(.aligncenter),
.ui.segment:not(.alignwide) {
    clear: both;
}

.ui.segment .embedded_chart {
    border-top: 0;
    border-bottom: 0;
    margin-bottom: 0;
    padding: 0;
}

/* Vertical */
.ui.vertical.segment {
    margin: 0em;
    padding-left: 0em;
    padding-right: 0em;

    background: none transparent;
    border-radius: 0px;
    box-shadow: none;
    border: none;
    border-bottom: $borderWidth solid colors.$borderColor;
}

.ui.vertical.segment:last-child {
    border-bottom: none;
}

/*-------------------
     Loose Coupling
 --------------------*/

/* Header */
.ui.inverted.segment:not(.beige)>.ui.header {
    color: colors.$white;
}

/* Label */
.ui[class*="bottom attached"].segment>[class*="top attached"].label {
    border-top-left-radius: 0em;
    border-top-right-radius: 0em;
}

.ui[class*="top attached"].segment>[class*="bottom attached"].label {
    border-bottom-left-radius: 0em;
    border-bottom-right-radius: 0em;
}

.ui.attached.segment:not(.top):not(.bottom)>[class*="top attached"].label {
    border-top-left-radius: 0em;
    border-top-right-radius: 0em;
}

.ui.attached.segment:not(.top):not(.bottom)>[class*="bottom attached"].label {
    border-bottom-left-radius: 0em;
    border-bottom-right-radius: 0em;
}

/* Grid */
.ui.page.grid.segment,
.ui.grid>.row>.ui.segment.column,
.ui.grid>.ui.segment.column {
    padding-top: $pageGridMargin;
    padding-bottom: $pageGridMargin;
}

.ui.grid.segment {
    margin: $margin;
    border-radius: $borderRadius;
}

/* Table */
.ui.basic.table.segment {
    background: $background;
    border: $border;
    box-shadow: $boxShadow;
}

.ui[class*="very basic"].table.segment {
    padding: $padding;
}

/*******************************
              Types
 *******************************/

/*-------------------
      Placeholder
 --------------------*/

.ui.placeholder.segment {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: stretch;
    max-width: initial;
    animation: none;
    overflow: visible;
    padding: $placeholderPadding;
    min-height: $placeholderMinHeight;
    background: $placeholderBackground;
    border-color: $placeholderBorderColor;
    box-shadow: $placeholderBoxShadow;
}

.ui.placeholder.segment .button,
.ui.placeholder.segment textarea {
    display: block;
}

.ui.placeholder.segment .field,
.ui.placeholder.segment textarea,
.ui.placeholder.segment>.ui.input,
.ui.placeholder.segment .button {
    max-width: $placeholderContentMaxWidth;
    margin-left: auto;
    margin-right: auto;
}

.ui.placeholder.segment .column .button,
.ui.placeholder.segment .column .field,
.ui.placeholder.segment .column textarea,
.ui.placeholder.segment .column>.ui.input {
    max-width: $placeholderContentMaxWidth;
    margin-left: auto;
    margin-right: auto;
}

.ui.placeholder.segment>.inline {
    align-self: center;
}

.ui.placeholder.segment>.inline>.button {
    display: inline-block;
    width: auto;
    margin: $placeholderContentInlineButtonMargin;
}

.ui.placeholder.segment>.inline>.button:last-child {
    margin-right: 0px;
}

/*-------------------
         Piled
 --------------------*/

.ui.piled.segments,
.ui.piled.segment {
    margin: $piledMargin 0em;
    box-shadow: $piledBoxShadow;
    z-index: $piledZIndex;
}

.ui.piled.segment:first-child {
    margin-top: 0em;
}

.ui.piled.segment:last-child {
    margin-bottom: 0em;
}

.ui.piled.segments:after,
.ui.piled.segments:before,
.ui.piled.segment:after,
.ui.piled.segment:before {
    background-color: colors.$white;
    visibility: visible;
    content: "";
    display: block;
    height: 100%;
    left: 0px;
    position: absolute;
    width: 100%;
    border: $piledBorder;
    box-shadow: $piledBoxShadow;
}

.ui.piled.segments:before,
.ui.piled.segment:before {
    transform: rotate(-$piledDegrees);
    top: 0;
    z-index: -2;
}

.ui.piled.segments:after,
.ui.piled.segment:after {
    transform: rotate($piledDegrees);
    top: 0;
    z-index: -1;
}

/* Piled Attached */
.ui[class*="top attached"].piled.segment {
    margin-top: $piledMargin;
    margin-bottom: 0em;
}

.ui.piled.segment[class*="top attached"]:first-child {
    margin-top: 0em;
}

.ui.piled.segment[class*="bottom attached"] {
    margin-top: 0em;
    margin-bottom: $piledMargin;
}

.ui.piled.segment[class*="bottom attached"]:last-child {
    margin-bottom: 0em;
}

/*-------------------
        Stacked
 --------------------*/

.ui.stacked.segment {
    padding-bottom: $stackedPadding;
}

.ui.stacked.segments:before,
.ui.stacked.segments:after,
.ui.stacked.segment:before,
.ui.stacked.segment:after {
    content: "";
    position: absolute;
    bottom: -($stackedHeight * 0.5);
    left: 0%;

    border-top: 1px solid colors.$borderColor;
    background: $stackedPageBackground;

    width: 100%;
    height: $stackedHeight;
    visibility: visible;
}

.ui.stacked.segments:before,
.ui.stacked.segment:before {
    display: none;
}

/* Add additional page */
.ui.tall.stacked.segments:before,
.ui.tall.stacked.segment:before {
    display: block;
    bottom: 0px;
}

/* Inverted */
.ui.stacked.inverted.segments:before,
.ui.stacked.inverted.segments:after,
.ui.stacked.inverted.segment:before,
.ui.stacked.inverted.segment:after {
    background-color: colors.$subtleTransparentBlack;
    border-top: 1px solid colors.$selectedBorderColor;
}

/*-------------------
        Padded
 --------------------*/

.ui.padded.segment {
    padding: $paddedSegmentPadding;
}

.ui[class*="very padded"].segment {
    padding: $veryPaddedSegmentPadding;
}

/* Padded vertical */
.ui.padded.segment.vertical.segment,
.ui[class*="very padded"].vertical.segment {
    padding-left: 0px;
    padding-right: 0px;
}

/*-------------------
        Compact
 --------------------*/

.ui.compact.segment {
    display: table;
}

/* Compact Group */
.ui.compact.segments {
    display: inline-flex;
}

.ui.compact.segments .segment,
.ui.segments .compact.segment {
    display: block;
    flex: 0 1 auto;
}

/*-------------------
        Circular
 --------------------*/

.ui.circular.segment {
    display: table-cell;
    padding: $circularPadding;
    text-align: center;
    vertical-align: middle;
    border-radius: 500em;
}

/*-------------------
        Raised
 --------------------*/

.ui.raised.segments,
.ui.raised.segment {
    box-shadow: $raisedBoxShadow;
}

/*-------------------
       Inset Arrow
 --------------------*/
.ui.inset-arrow.segment {
    background: $insetBackground;
    box-shadow: $insetBoxShadow;
    padding: 2rem;
    text-align: center;

    &:before {
        display: block;
        content: "";
        width: 26px;
        height: 26px;
        background: #fff;
        position: absolute;
        left: 50%;
        transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        -webkit-transform: rotate(45deg);
        margin-left: -13px;
        margin-top: -3rem;
        box-shadow: 2px 2px 0px 0px #bbb;
    }
}

/*******************************
             Groups
 *******************************/

/* Group */
.ui.segments {
    flex-direction: column;
    position: relative;
    margin: $groupedMargin;
    border: $groupedBorder;
    box-shadow: $groupedBoxShadow;
    border-radius: $groupedBorderRadius;
}

.ui.segments:first-child {
    margin-top: 0em;
}

.ui.segments:last-child {
    margin-bottom: 0em;
}

/* Nested Segment */
.ui.segments>.segment {
    top: 0px;
    bottom: 0px;
    border-radius: 0px;
    margin: $groupedSegmentMargin;
    width: $groupedSegmentWidth;
    box-shadow: $groupedSegmentBoxShadow;
    border: $groupedSegmentBorder;
    border-top: $groupedSegmentDivider;
}

.ui.segments:not(.horizontal)>.segment:first-child {
    top: $attachedTopOffset;
    bottom: 0px;
    border-top: none;
    margin-top: 0em;
    bottom: 0px;
    margin-bottom: 0em;
    top: $attachedTopOffset;
    border-radius: $borderRadius $borderRadius 0em 0em;
}

/* Bottom */
.ui.segments:not(.horizontal)>.segment:last-child {
    top: $attachedBottomOffset;
    bottom: 0px;
    margin-top: 0em;
    margin-bottom: 0em;
    box-shadow: $attachedBottomBoxShadow;
    border-radius: 0em 0em $borderRadius $borderRadius;
}

/* Only */
.ui.segments:not(.horizontal)>.segment:only-child {
    border-radius: $borderRadius;
}

/* Nested Group */
.ui.segments>.ui.segments {
    border-top: $groupedSegmentDivider;
    margin: $nestedGroupMargin;
}

.ui.segments>.segments:first-child {
    border-top: none;
}

.ui.segments>.segment+.segments:not(.horizontal) {
    margin-top: 0em;
}

/* Horizontal Group */
.ui.horizontal.segments {
    display: flex;
    flex-direction: row;
    background-color: transparent;
    border-radius: 0px;
    padding: 0em;
    background-color: $background;
    box-shadow: $boxShadow;
    margin: $margin;
    border-radius: $borderRadius;
    border: $border;
}

/* Nested Horizontal Group */
.ui.segments>.horizontal.segments {
    margin: 0em;
    background-color: transparent;
    border-radius: 0px;
    border: none;
    box-shadow: none;
    border-top: $groupedSegmentDivider;
}

/* Horizontal Segment */
.ui.horizontal.segments>.segment {
    flex: 1 1 auto;
    -ms-flex: 1 1 0px;
    /* Solves #2550 MS Flex */
    margin: 0em;
    min-width: 0px;
    background-color: transparent;
    border-radius: 0px;
    border: none;
    box-shadow: none;
    border-left: $borderWidth solid colors.$borderColor;
}

/* Border Fixes */
.ui.segments>.horizontal.segments:first-child {
    border-top: none;
}

.ui.horizontal.segments>.segment:first-child {
    border-left: none;
}

/*******************************
             States
 *******************************/

/*--------------
     Disabled
 ---------------*/

.ui.disabled.segment {
    opacity: variables.$disabledOpacity;
    color: colors.$disabledTextColor;
}

/*--------------
     Loading
 ---------------*/

.ui.loading.segment {
    position: relative;
    cursor: default;
    pointer-events: none;
    text-shadow: none !important;
    color: transparent !important;
    transition: all 0s linear;
}

.ui.loading.segment:before {
    position: absolute;
    content: "";
    top: 0%;
    left: 0%;
    background: $loaderDimmerColor;
    width: 100%;
    height: 100%;
    border-radius: $borderRadius;
    z-index: $loaderDimmerZIndex;
}

.ui.loading.segment:after {
    position: absolute;
    content: "";
    top: 50%;
    left: 50%;

    margin: variables.$loaderMargin;
    width: variables.$loaderSize;
    height: variables.$loaderSize;

    animation: segment-spin variables.$loaderSpeed linear;
    animation-iteration-count: infinite;

    border-radius: variables.$circularRadius;

    border-color: colors.$loaderLineColor colors.$loaderFillColor colors.$loaderFillColor colors.$loaderFillColor;
    border-style: solid;
    border-width: variables.$loaderLineWidth;

    box-shadow: 0px 0px 0px 1px transparent;
    visibility: visible;
    z-index: $loaderLineZIndex;
}

@keyframes segment-spin {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

/*******************************
            Variations
 *******************************/

/*-------------------
        Basic
 --------------------*/

.ui.basic.segment {
    background: $basicBackground;
    box-shadow: $basicBoxShadow;
    border: $basicBorder;
    border-radius: $basicBorderRadius;
}

.ui.very.basic.segment {
    padding: 0;
}

/*-------------------
        Clearing
 --------------------*/

.ui.clearing.segment:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
}

/*-------------------
        Colors
 --------------------*/

/* Red */
.ui.red.segment:not(.inverted) {
    border-top: $coloredBorderSize solid colors.$red !important;
}

.ui.inverted.red.segment {
    background-color: colors.$red !important;
    color: colors.$white !important;
}

/* Orange */
.ui.orange.segment:not(.inverted) {
    border-top: $coloredBorderSize solid colors.$orange !important;
}

.ui.inverted.orange.segment {
    background-color: colors.$orange !important;
    color: colors.$white !important;
}

/* Yellow */
.ui.yellow.segment:not(.inverted) {
    border-top: $coloredBorderSize solid colors.$yellow !important;
}

.ui.inverted.yellow.segment {
    background-color: colors.$yellow !important;
    color: colors.$white !important;
}

/* Olive */
.ui.olive.segment:not(.inverted) {
    border-top: $coloredBorderSize solid colors.$olive !important;
}

.ui.inverted.olive.segment {
    background-color: colors.$olive !important;
    color: colors.$white !important;
}

/* Green */
.ui.green.segment:not(.inverted) {
    border-top: $coloredBorderSize solid colors.$green !important;
}

.ui.inverted.green.segment {
    background-color: colors.$green !important;
    color: colors.$white !important;
}

/* Teal */
.ui.teal.segment:not(.inverted) {
    border-top: $coloredBorderSize solid colors.$teal !important;
}

.ui.inverted.teal.segment {
    background-color: colors.$teal !important;
    color: colors.$white !important;
}

/* Blue */
.ui.blue.segment:not(.inverted) {
    border-top: $coloredBorderSize solid colors.$blue !important;
}

.ui.inverted.blue.segment {
    background-color: colors.$blue !important;
    color: colors.$white !important;
}

/* Violet */
.ui.violet.segment:not(.inverted) {
    border-top: $coloredBorderSize solid colors.$violet !important;
}

.ui.inverted.violet.segment {
    background-color: colors.$violet !important;
    color: colors.$white !important;
}

/* Purple */
.ui.purple.segment:not(.inverted) {
    border-top: $coloredBorderSize solid colors.$purple !important;
}

.ui.inverted.purple.segment {
    background-color: colors.$purple !important;
    color: colors.$white !important;
}

/* Pink */
.ui.pink.segment:not(.inverted) {
    border-top: $coloredBorderSize solid colors.$pink !important;
}

.ui.inverted.pink.segment {
    background-color: colors.$pink !important;
    color: colors.$white !important;
}

/* Brown */
.ui.brown.segment:not(.inverted) {
    border-top: $coloredBorderSize solid colors.$brown !important;
}

.ui.inverted.brown.segment {
    background-color: colors.$brown !important;
    color: colors.$white !important;
}

/* Grey */
.ui.grey.segment:not(.inverted) {
    border-top: $coloredBorderSize solid colors.$grey !important;
}

// .ui.inverted.grey.segment {
//   background-color: $grey !important;
//   color: colors.$white !important;
// }
// Seth Addition:
.ui.inverted.grey.segment {
    background-color: colors.$gray !important;
    border: 1px solid colors.$grayLight;
    color: colors.$black !important;
}

/* Black */
.ui.black.segment:not(.inverted) {
    border-top: $coloredBorderSize solid colors.$black !important;
}

.ui.inverted.black.segment {
    background-color: colors.$black !important;
    color: colors.$white !important;
}

// Seth Addition:
/* Oatmeal */
.ui.oatmeal.segment:not(.inverted) {
    border-top: $coloredBorderSize solid colors.$oatmeal !important;
}

.ui.inverted.oatmeal.segment {
    color: colors.$black;
    background: colors.$oatmeal !important;
    border: 0px !important;
}

// Seth Addition:
/* Beige */
.ui.beige.segment:not(.inverted) {
    border-top: $coloredBorderSize solid colors.$beigeDark !important;
}

.ui.inverted.beige.segment {
    color: colors.$black;
    background: colors.$beige !important;
    border-left: none !important;
    border-right: none !important;
    border-bottom: none !important;

    .header {
        color: inherit !important;
    }

    .content {
        color: #6b6b6b;
    }
}

/*-------------------
        Aligned
 --------------------*/

.ui[class*="left aligned"].segment {
    text-align: left;
}

.ui[class*="right aligned"].segment {
    text-align: right;
}

.ui[class*="center aligned"].segment {
    text-align: center;
}

/*-------------------
        Floated
 --------------------*/

.ui.floated.segment,
.ui[class*="left floated"].segment {
    float: left;
    margin-right: $floatedDistance;
}

.ui[class*="right floated"].segment {
    float: right;
    margin-left: $floatedDistance;
}

div[data-align="left"]>.ui.segment,
div[data-align="right"]>.ui.segment {
    max-width: 270px;
}

/*-------------------
       Inverted
 --------------------*/
.ui.inverted.segment:not(.inverted.beige) {
    border: none;
}

.ui.inverted.segment {
    box-shadow: none;
}

.ui.inverted.segment,
.ui.primary.inverted.segment {
    background: $invertedBackground;
    color: colors.$invertedTextColor;
}

/* Nested */
.ui.inverted.segment .segment {
    color: colors.$textColor;
}

.ui.inverted.segment .inverted.segment {
    color: colors.$invertedTextColor;
}

/* Attached */
.ui.inverted.attached.segment {
    border-color: colors.$solidWhiteBorderColor;
}

/*-------------------
      Emphasis
 --------------------*/

/* Secondary */
.ui.secondary.segment {
    background: $secondaryBackground;
    color: $secondaryColor;
}

.ui.secondary.inverted.segment {
    background: $secondaryInvertedBackground;
    color: $secondaryInvertedColor;
}

/* Tertiary */
.ui.tertiary.segment {
    background: $tertiaryBackground;
    color: $tertiaryColor;
}

.ui.tertiary.inverted.segment {
    background: $tertiaryInvertedBackground;
    color: $tertiaryInvertedColor;
}

/*-------------------
       Attached
 --------------------*/

/* Middle */
.ui.attached.segment {
    top: 0px;
    bottom: 0px;
    border-radius: 0px;
    margin: 0em $attachedHorizontalOffset;
    width: $attachedWidth;
    max-width: $attachedWidth;
    box-shadow: $attachedBoxShadow;
    border: $attachedBorder;
}

.ui.attached:not(.message)+.ui.attached.segment:not(.top) {
    border-top: none;
}

/* Top */
.ui[class*="top attached"].segment {
    bottom: 0px;
    margin-bottom: 0em;
    top: $attachedTopOffset;
    margin-top: $verticalMargin;
    border-radius: $borderRadius $borderRadius 0em 0em;
}

.ui.segment[class*="top attached"]:first-child {
    margin-top: 0em;
}

/* Bottom */
.ui.segment[class*="bottom attached"] {
    bottom: 0px;
    margin-top: 0em;
    top: $attachedBottomOffset;
    margin-bottom: $verticalMargin;
    box-shadow: $attachedBottomBoxShadow;
    border-radius: 0em 0em $borderRadius $borderRadius;
}

.ui.segment[class*="bottom attached"]:last-child {
    margin-bottom: 0em;
}

/*-------------------
         Size
 --------------------*/
.ui.segment.size-200,
.ui.segment.size-310,
.ui.segment.size-420,
.ui.segment.size-640 {
    width: 100%;
}

.ui.segment.size-200 {
    max-width: 200px !important;
}

.ui.segment.size-310 {
    max-width: 310px !important;
}

.ui.segment.size-420 {
    max-width: 420px !important;
}

.ui.segment.size-640 {
    max-width: 640px !important;
}

.ui.mini.segments .segment,
.ui.mini.segment {
    font-size: variables.$mini;
}

.ui.tiny.segments .segment,
.ui.tiny.segment {
    font-size: variables.$tiny;
}

.ui.small.segments .segment,
.ui.small.segment {
    font-size: variables.$small;
}

.ui.segments .segment,
.ui.segment {
    font-size: variables.$medium;
}

.ui.large.segments .segment,
.ui.large.segment {
    font-size: variables.$large;
}

.ui.big.segments .segment,
.ui.big.segment {
    font-size: variables.$big;
}

.ui.huge.segments .segment,
.ui.huge.segment {
    font-size: variables.$huge;
}

.ui.massive.segments .segment,
.ui.massive.segment {
    font-size: variables.$massive;
}