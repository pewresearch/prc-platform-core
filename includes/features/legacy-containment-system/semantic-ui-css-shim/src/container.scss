/*!
 * # Semantic UI - Container
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */

@use "master.variables"as variables;

/*******************************
             Container
 *******************************/

/*-------------------
        Element
 --------------------*/

/* Minimum Gutter is used to determine  the maximum container width for a given device */

$maxWidth: 100%;

$largeMaxWidth: 1168px;

/* Devices */
$mobileMinimumGutter: 0em;
$mobileWidth: auto;
$mobileGutter: 1em;

$tabletMinimumGutter: (variables.$emSize * 1);
$tabletWidth: variables.$tabletBreakpoint - ($tabletMinimumGutter * 2) - variables.$scrollbarWidth;
$tabletGutter: auto;

$computerMinimumGutter: (variables.$emSize * 1.5);
$computerWidth: $largeMaxWidth; //variables.$computerBreakpoint - ($computerMinimumGutter * 2) - variables.$scrollbarWidth;
$computerGutter: auto;

$largeMonitorMinimumGutter: (variables.$emSize * 2);
$largeMonitorWidth: $computerWidth; //$largeMonitorBreakpoint - ($largeMonitorMinimumGutter * 2) - variables.$scrollbarWidth;
$largeMonitorGutter: auto;

/* Coupling (Add Negative Margin to container size) */
$gridGutterWidth: 2rem;
$relaxedGridGutterWidth: 3rem;
$veryRelaxedGridGutterWidth: 5rem;

$mobileGridWidth: $mobileWidth;
$tabletGridWidth: calc(#{$tabletWidth} + #{$gridGutterWidth});
$computerGridWidth: calc(#{$computerWidth} + #{$gridGutterWidth});
$largeMonitorGridWidth: calc(#{largeMonitorWidth} + #{$gridGutterWidth});

$mobileRelaxedGridWidth: $mobileWidth;
$tabletRelaxedGridWidth: calc(#{$tabletWidth} + #{$relaxedGridGutterWidth});
$computerRelaxedGridWidth: calc(#{$computerWidth} + #{$relaxedGridGutterWidth});
$largeMonitorRelaxedGridWidth: calc(#{$largeMonitorWidth} + #{$relaxedGridGutterWidth});

$mobileVeryRelaxedGridWidth: $mobileWidth;
$tabletVeryRelaxedGridWidth: calc(#{$tabletWidth} + #{$veryRelaxedGridGutterWidth});
$computerVeryRelaxedGridWidth: calc(#{$computerWidth} + #{$veryRelaxedGridGutterWidth});
$largeMonitorVeryRelaxedGridWidth: calc(#{$largeMonitorWidth} + #{$veryRelaxedGridGutterWidth});

/*-------------------
        Types
 --------------------*/
$postContentWidth: 640px;

/*******************************
             Container
 *******************************/

/* All Sizes */
.ui.container,
.wp-block-group__inner-container {
    display: block;
    max-width: $maxWidth !important;

    &.large {
        max-width: $largeMaxWidth !important;
    }

    /* Fluid */
    &.fluid {
        width: 100%;
    }

    /* Mobile */
    @media only screen and (max-width: variables.$largestMobileScreen) {
        width: $mobileWidth !important;
        margin-left: $mobileGutter !important;
        margin-right: $mobileGutter !important;
    }

    /* Tablet */
    @media only screen and (min-width: variables.$tabletBreakpoint) and (max-width: variables.$largestTabletScreen) {
        width: $tabletWidth;
        margin-left: $tabletGutter !important;
        margin-right: $tabletGutter !important;
    }

    /* Computer */
    @media only screen and (min-width: variables.$computerBreakpoint) {
        width: $computerWidth;
        margin-left: $computerGutter !important;
        margin-right: $computerGutter !important;
    }
}

.ui.container {
    /* Computer */
    @media only screen and (min-width: variables.$computerBreakpoint) {
        padding-left: 1em;
        padding-right: 1em;
    }
}



/*******************************
              Types
 *******************************/

.ui.text.container {
    width: 100% !important;
    max-width: $postContentWidth !important;
    margin-left: auto !important;
    margin-right: auto !important;
    padding-left: 0;
    padding-right: 0;

    // On computers a not centered text container should not auto center.
    &:not(.centered) {

        // Default to centered except on what is clearly desktop
        @media only screen and (min-width: variables.$computerBreakpoint) {
            margin-left: 0 !important;
            margin-right: 0 !important;
        }
    }
}

/*******************************
            Variations
 *******************************/

.ui[class*="left aligned"].container {
    text-align: left;
}

.ui[class*="center aligned"].container {
    text-align: center;
}

.ui[class*="right aligned"].container {
    text-align: right;
}

.ui.justified.container {
    text-align: justify;
    hyphens: auto;
}
