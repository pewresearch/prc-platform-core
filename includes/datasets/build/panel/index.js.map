{"version":3,"file":"panel/index.js","mappings":"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","sources":["webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"element\"]","webpack://@pewresearch/prc-platform-datasets/./node_modules/@wordpress/icons/build-module/icon/index.js","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"primitives\"]","webpack://@pewresearch/prc-platform-datasets/external window \"ReactJSXRuntime\"","webpack://@pewresearch/prc-platform-datasets/./node_modules/@wordpress/icons/build-module/library/download.js","webpack://@pewresearch/prc-platform-datasets/external window \"prcComponents\"","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"i18n\"]","webpack://@pewresearch/prc-platform-datasets/external window \"React\"","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"plugins\"]","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"editPost\"]","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"editor\"]","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"data\"]","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"coreData\"]","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"components\"]","webpack://@pewresearch/prc-platform-datasets/./src/panel/index.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","/**\n * WordPress dependencies\n */\nimport { cloneElement, forwardRef } from '@wordpress/element';\n\n/** @typedef {{icon: JSX.Element, size?: number} & import('@wordpress/primitives').SVGProps} IconProps */\n\n/**\n * Return an SVG icon.\n *\n * @param {IconProps}                                 props icon is the SVG component to render\n *                                                          size is a number specifiying the icon size in pixels\n *                                                          Other props will be passed to wrapped SVG component\n * @param {import('react').ForwardedRef<HTMLElement>} ref   The forwarded ref to the SVG element.\n *\n * @return {JSX.Element}  Icon component\n */\nfunction Icon({\n  icon,\n  size = 24,\n  ...props\n}, ref) {\n  return cloneElement(icon, {\n    width: size,\n    height: size,\n    ...props,\n    ref\n  });\n}\nexport default forwardRef(Icon);\n//# sourceMappingURL=index.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"ReactJSXRuntime\"];","/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst download = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"M18 11.3l-1-1.1-4 4V3h-1.5v11.3L7 10.2l-1 1.1 6.2 5.8 5.8-5.8zm.5 3.7v3.5h-13V15H4v5h16v-5h-1.5z\"\n  })\n});\nexport default download;\n//# sourceMappingURL=download.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcComponents\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"plugins\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"editPost\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"editor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","/**\n * External Dependencies\n */\nimport { Icon, download as icon } from '@wordpress/icons';\nimport { MediaDropZone } from '@prc/components';\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Fragment, useMemo } from 'react';\nimport { registerPlugin } from '@wordpress/plugins';\nimport { PluginSidebar, PluginPrePublishPanel } from '@wordpress/edit-post';\nimport { store as editorStore } from '@wordpress/editor';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport {\n\tButton,\n\tCardDivider,\n\tPanelBody,\n\tTextareaControl,\n\tToggleControl,\n} from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\n\nconst PLUGIN_NAME = 'prc-platform-datasets-panel';\nconst ALLOWED_TYPES = ['application/zip', 'application/pdf'];\n\nfunction DatasetOptionsPanel() {\n\tconst { postType, postId } = useSelect((select) => {\n\t\tconst currentPostType = select(editorStore).getCurrentPostType();\n\t\tconst currentPostId = select(editorStore).getCurrentPostId();\n\t\treturn {\n\t\t\tpostType: currentPostType,\n\t\t\tpostId: currentPostId,\n\t\t};\n\t}, []);\n\n\tconst [meta, setMeta] = useEntityProp('postType', postType, 'meta', postId);\n\n\tconst { attachmentId, isAtp, datasetSchema } = useMemo(() => {\n\t\tconsole.log('meta', meta);\n\t\treturn {\n\t\t\tattachmentId: meta._download_attachment_id || false,\n\t\t\tisAtp: meta.is_atp || false,\n\t\t\tdatasetSchema: meta.dataset_schema || '',\n\t\t};\n\t}, [meta]);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<PluginSidebar\n\t\t\t\tname={PLUGIN_NAME}\n\t\t\t\ttitle=\"Dataset Options\"\n\t\t\t\ticon={<Icon icon={icon} size={16} />}\n\t\t\t>\n\t\t\t\t<PanelBody title=\"Dataset File\">\n\t\t\t\t\t<MediaDropZone\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\tattachmentId,\n\t\t\t\t\t\t\tdisabled: false,\n\t\t\t\t\t\t\tonUpdate: (attachment) => {\n\t\t\t\t\t\t\t\tsetMeta({\n\t\t\t\t\t\t\t\t\t...meta,\n\t\t\t\t\t\t\t\t\t_download_attachment_id: attachment.id,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\teditButtonLabel: __('Edit Dataset File'),\n\t\t\t\t\t\t\tonClear: false,\n\t\t\t\t\t\t\tallowedTypes: ALLOWED_TYPES,\n\t\t\t\t\t\t\tlabel: __('Upload Dataset File (zip or pdf)'),\n\t\t\t\t\t\t\tsingularLabel: __('dataset'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<CardDivider />\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"ATP Dataset\"\n\t\t\t\t\t\thelp=\"ATP datasets are bound by an opt-in to the ATP Terms of Service.\"\n\t\t\t\t\t\tchecked={isAtp}\n\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\tsetMeta({\n\t\t\t\t\t\t\t\t...meta,\n\t\t\t\t\t\t\t\tis_atp: value,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody title=\"Dataset Schema\">\n\t\t\t\t\t<TextareaControl\n\t\t\t\t\t\tlabel=\"Dataset Schema\"\n\t\t\t\t\t\tvalue={datasetSchema}\n\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\tsetMeta({\n\t\t\t\t\t\t\t\t...meta,\n\t\t\t\t\t\t\t\tdataset_schema: value,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t\t{/* @TODO: WIP, Eventually I'd like to get all entities that reference this dataset, but we'll wait for the Supra-Block-Data-Store <PanelBody title=\"Dataset Posts\">\n\t\t\t\t\t<p>A list of posts that are calling this dataset...</p>\n\t\t\t\t</PanelBody> */}\n\t\t\t</PluginSidebar>\n\t\t\t<PluginPrePublishPanel>\n\t\t\t\t<PanelBody title=\"Review Dataset Options\">\n\t\t\t\t\t<MediaDropZone\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\tattachmentId,\n\t\t\t\t\t\t\tdisabled: false,\n\t\t\t\t\t\t\tonUpdate: (attachment) => {\n\t\t\t\t\t\t\t\tsetMeta({\n\t\t\t\t\t\t\t\t\t...meta,\n\t\t\t\t\t\t\t\t\t_download_attachment_id: attachment.id,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\teditButtonLabel: __('Edit Dataset File'),\n\t\t\t\t\t\t\tonClear: false,\n\t\t\t\t\t\t\tallowedTypes: ALLOWED_TYPES,\n\t\t\t\t\t\t\tlabel: __('Upload Dataset File (zip or pdf)'),\n\t\t\t\t\t\t\tsingularLabel: __('dataset'),\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<CardDivider />\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"ATP Dataset\"\n\t\t\t\t\t\thelp=\"ATP datasets are bound by an opt-in to the ATP Terms of Service.\"\n\t\t\t\t\t\tchecked={isAtp}\n\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\tsetMeta({\n\t\t\t\t\t\t\t\t...meta,\n\t\t\t\t\t\t\t\tis_atp: value,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</PluginPrePublishPanel>\n\t\t</Fragment>\n\t);\n}\n\nregisterPlugin(PLUGIN_NAME, {\n\trender: DatasetOptionsPanel,\n});\n"],"names":["window","forwardRef","icon","size","props","ref","cloneElement","width","height","SVG","xmlns","viewBox","children","Path","d","PLUGIN_NAME","ALLOWED_TYPES","registerPlugin","render","postType","postId","useSelect","select","editorStore","getCurrentPostType","getCurrentPostId","meta","setMeta","useEntityProp","attachmentId","isAtp","datasetSchema","useMemo","console","log","_download_attachment_id","is_atp","dataset_schema","_jsxs","Fragment","PluginSidebar","name","title","_jsx","Icon","PanelBody","MediaDropZone","disabled","onUpdate","attachment","id","editButtonLabel","__","onClear","allowedTypes","label","singularLabel","CardDivider","ToggleControl","help","checked","onChange","value","TextareaControl","PluginPrePublishPanel"],"sourceRoot":""}