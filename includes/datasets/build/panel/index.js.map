{"version":3,"file":"panel/index.js","mappings":"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","sources":["webpack://@pewresearch/prc-platform-datasets/external window \"React\"","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"element\"]","webpack://@pewresearch/prc-platform-datasets/./node_modules/@wordpress/icons/build-module/icon/index.js","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"primitives\"]","webpack://@pewresearch/prc-platform-datasets/./node_modules/@wordpress/icons/build-module/library/download.js","webpack://@pewresearch/prc-platform-datasets/external window \"prcComponents\"","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"i18n\"]","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"plugins\"]","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"editPost\"]","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"editor\"]","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"data\"]","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"coreData\"]","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"components\"]","webpack://@pewresearch/prc-platform-datasets/./src/panel/index.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","/**\n * WordPress dependencies\n */\nimport { cloneElement, forwardRef } from '@wordpress/element';\n\n/** @typedef {{icon: JSX.Element, size?: number} & import('@wordpress/primitives').SVGProps} IconProps */\n\n/**\n * Return an SVG icon.\n *\n * @param {IconProps}                                 props icon is the SVG component to render\n *                                                          size is a number specifiying the icon size in pixels\n *                                                          Other props will be passed to wrapped SVG component\n * @param {import('react').ForwardedRef<HTMLElement>} ref   The forwarded ref to the SVG element.\n *\n * @return {JSX.Element}  Icon component\n */\nfunction Icon({\n  icon,\n  size = 24,\n  ...props\n}, ref) {\n  return cloneElement(icon, {\n    width: size,\n    height: size,\n    ...props,\n    ref\n  });\n}\nexport default forwardRef(Icon);\n//# sourceMappingURL=index.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst download = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M18 11.3l-1-1.1-4 4V3h-1.5v11.3L7 10.2l-1 1.1 6.2 5.8 5.8-5.8zm.5 3.7v3.5h-13V15H4v5h16v-5h-1.5z\"\n}));\nexport default download;\n//# sourceMappingURL=download.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcComponents\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"plugins\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"editPost\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"editor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","/**\n * External Dependencies\n */\nimport { Icon, download as icon } from '@wordpress/icons';\nimport { MediaDropZone } from '@prc/components';\n\n\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Fragment, useMemo } from 'react';\nimport { registerPlugin } from '@wordpress/plugins';\nimport { PluginSidebar, PluginPrePublishPanel } from '@wordpress/edit-post';\nimport { store as editorStore } from '@wordpress/editor';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { Button, CardDivider, PanelBody, TextareaControl, ToggleControl } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\n\nconst PLUGIN_NAME = 'prc-platform-datasets-panel';\nconst ALLOWED_TYPES = [\n\t'application/zip',\n\t'application/pdf',\n];\n\nfunction DatasetOptionsPanel() {\n\tconst { postType, postId } = useSelect(\n\t\t(select) => {\n\t\t\tconst currentPostType = select(editorStore).getCurrentPostType();\n\t\t\tconst currentPostId = select(editorStore).getCurrentPostId();\n\t\t\treturn {\n\t\t\t\tpostType: currentPostType,\n\t\t\t\tpostId: currentPostId,\n\t\t\t}\n\t\t},\n\t\t[]\n\t);\n\n\tconst [ meta, setMeta ] = useEntityProp( 'postType', postType, 'meta', postId );\n\n\tconst {attachmentId, isAtp, datasetSchema} = useMemo( () => {\n\t\tconsole.log(\"meta\", meta);\n\t\treturn {\n\t\t\tattachmentId: meta[ '_download_attachment_id' ] || false,\n\t\t\tisAtp: meta[ 'is_atp' ] || false,\n\t\t\tdatasetSchema: meta[ 'dataset_schema' ] || '',\n\t\t}\n\t}, [ meta ] );\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<PluginSidebar name={PLUGIN_NAME} title=\"Dataset Options\" icon={<Icon icon={icon} size={16} />}>\n\t\t\t\t<PanelBody title=\"Dataset File\">\n\t\t\t\t\t<MediaDropZone {...{\n\t\t\t\t\t\tattachmentId,\n\t\t\t\t\t\tdisabled: false,\n\t\t\t\t\t\tonUpdate: (attachment) => {\n\t\t\t\t\t\t\tsetMeta( {\n\t\t\t\t\t\t\t\t...meta,\n\t\t\t\t\t\t\t\t_download_attachment_id: attachment.id,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t},\n\t\t\t\t\t\teditButtonLabel: __('Edit Dataset File'),\n\t\t\t\t\t\tonClear: false,\n\t\t\t\t\t\tallowedTypes: ALLOWED_TYPES,\n\t\t\t\t\t\tlabel: __('Upload Dataset File (zip or pdf)'),\n\t\t\t\t\t\tsingularLabel: __('dataset'),\n\t\t\t\t\t}}/>\n\t\t\t\t\t<CardDivider />\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"ATP Dataset\"\n\t\t\t\t\t\thelp=\"ATP datasets are bound by an opt-in to the ATP Terms of Service.\"\n\t\t\t\t\t\tchecked={isAtp}\n\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\tsetMeta( {\n\t\t\t\t\t\t\t\t...meta,\n\t\t\t\t\t\t\t\tis_atp: value,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t\t<PanelBody title=\"Dataset Schema\">\n\t\t\t\t\t<TextareaControl\n\t\t\t\t\t\tlabel=\"Dataset Schema\"\n\t\t\t\t\t\tvalue={datasetSchema}\n\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\tsetMeta( {\n\t\t\t\t\t\t\t\t...meta,\n\t\t\t\t\t\t\t\tdataset_schema: value,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t\t{/* @TODO: WIP, Eventually I'd like to get all entities that reference this dataset, but we'll wait for the Supra-Block-Data-Store <PanelBody title=\"Dataset Posts\">\n\t\t\t\t\t<p>A list of posts that are calling this dataset...</p>\n\t\t\t\t</PanelBody> */}\n\t\t\t</PluginSidebar>\n\t\t\t<PluginPrePublishPanel>\n\t\t\t\t<PanelBody title=\"Review Dataset Options\">\n\t\t\t\t\t<MediaDropZone {...{\n\t\t\t\t\t\tattachmentId,\n\t\t\t\t\t\tdisabled: false,\n\t\t\t\t\t\tonUpdate: (attachment) => {\n\t\t\t\t\t\t\tsetMeta( {\n\t\t\t\t\t\t\t\t...meta,\n\t\t\t\t\t\t\t\t_download_attachment_id: attachment.id,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t},\n\t\t\t\t\t\teditButtonLabel: __('Edit Dataset File'),\n\t\t\t\t\t\tonClear: false,\n\t\t\t\t\t\tallowedTypes: ALLOWED_TYPES,\n\t\t\t\t\t\tlabel: __('Upload Dataset File (zip or pdf)'),\n\t\t\t\t\t\tsingularLabel: __('dataset'),\n\t\t\t\t\t}}/>\n\t\t\t\t\t<CardDivider />\n\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\tlabel=\"ATP Dataset\"\n\t\t\t\t\t\thelp=\"ATP datasets are bound by an opt-in to the ATP Terms of Service.\"\n\t\t\t\t\t\tchecked={isAtp}\n\t\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\t\tsetMeta( {\n\t\t\t\t\t\t\t\t...meta,\n\t\t\t\t\t\t\t\tis_atp: value,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</PanelBody>\n\t\t\t</PluginPrePublishPanel>\n\t\t</Fragment>\n\t);\n}\n\nregisterPlugin(PLUGIN_NAME, {\n\trender: DatasetOptionsPanel,\n});\n"],"names":["window","forwardRef","icon","size","props","ref","cloneElement","width","height","createElement","SVG","xmlns","viewBox","Path","d","PLUGIN_NAME","ALLOWED_TYPES","registerPlugin","render","postType","postId","useSelect","select","editorStore","getCurrentPostType","getCurrentPostId","meta","setMeta","useEntityProp","attachmentId","isAtp","datasetSchema","useMemo","console","log","Fragment","PluginSidebar","name","title","Icon","PanelBody","MediaDropZone","disabled","onUpdate","attachment","_download_attachment_id","id","editButtonLabel","__","onClear","allowedTypes","label","singularLabel","CardDivider","ToggleControl","help","checked","onChange","value","is_atp","TextareaControl","dataset_schema","PluginPrePublishPanel"],"sourceRoot":""}