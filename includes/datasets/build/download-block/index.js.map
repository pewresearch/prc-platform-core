{"version":3,"file":"download-block/index.js","mappings":"mBAAA,MAAM,EAA+BA,OAAW,GAAU,OCApD,EAA+BA,OAAc,MCA7C,EAA+BA,OAAW,GAAc,WCW9D,GANiB,IAAAC,eAAc,EAAAC,IAAK,CAClCC,MAAO,6BACPC,QAAS,cACR,IAAAH,eAAc,EAAAI,KAAM,CACrBC,EAAG,sGCTC,GCA+BN,OAAmB,WCAnBA,OAAiB,SCAjBA,OAAsB,cCAtBA,OAAW,GAAW,QJAtBA,OAAW,GAAe,aKoBzDO,EAAiB,CACtB,cACA,cAGKC,EAAW,CAAC,CAAC,cAAe,CAAC,I,+yBCQ3BC,KAAIA,GAAKC,EAEXC,EAAW,CAChBC,KAAI,EACJC,KDEc,UAAc,WAAEC,EAAU,cAAEC,IAC1C,MAAM,GAAEC,EAAE,UAAEC,EAAS,cAAEC,GAAkBJ,EAEnCK,GAAaC,EAAAA,EAAAA,iBAEbC,GAAmBC,EAAAA,EAAAA,qBACxB,CAAC,EACD,CACCJ,cAAeA,GAAiBX,EAChCgB,cAAc,EACdC,SAAUhB,IAIZ,OACCP,EAAAA,EAAAA,eAAA,UAASkB,IACRlB,EAAAA,EAAAA,eAAA,UAASoB,IAGZ,ECpBCI,KCXc,WACd,OAAOxB,EAAAA,EAAAA,eAACyB,EAAAA,YAAYC,QAAO,KAC5B,IDiBAC,EAAAA,EAAAA,mBAAmBnB,EAAM,IAAKC,KAAaC,G","sources":["webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"blocks\"]","webpack://@pewresearch/prc-platform-datasets/external window \"React\"","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"primitives\"]","webpack://@pewresearch/prc-platform-datasets/./node_modules/@wordpress/icons/build-module/library/download.js","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"blockEditor\"]","webpack://@pewresearch/prc-platform-datasets/external window \"classnames\"","webpack://@pewresearch/prc-platform-datasets/external window \"prcIcons\"","webpack://@pewresearch/prc-platform-datasets/external window \"prcBlockUtils\"","webpack://@pewresearch/prc-platform-datasets/external window [\"wp\",\"element\"]","webpack://@pewresearch/prc-platform-datasets/./src/download-block/edit.jsx","webpack://@pewresearch/prc-platform-datasets/./src/download-block/index.js","webpack://@pewresearch/prc-platform-datasets/./src/download-block/save.jsx"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst download = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M18 11.3l-1-1.1-4 4V3h-1.5v11.3L7 10.2l-1 1.1 6.2 5.8 5.8-5.8zm.5 3.7v3.5h-13V15H4v5h16v-5h-1.5z\"\n}));\nexport default download;\n//# sourceMappingURL=download.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"classnames\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcIcons\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcBlockUtils\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","/**\n * External Dependencies\n */\nimport classNames from 'classnames';\nimport { icons, Icon } from '@prc/icons';\nimport { getBlockGapSupportValue } from '@prc/block-utils';\n\n/**\n * WordPress Dependencies\n */\nimport { useState } from '@wordpress/element';\nimport {\n\tRichText,\n\tuseBlockProps,\n\tuseInnerBlocksProps,\n} from '@wordpress/block-editor';\n\n/**\n * Internal Dependencies\n */\nconst ALLOWED_BLOCKS = [\n\t'core/button',\n\t'core/group',\n];\n\nconst TEMPLATE = [['core/button', {}]];\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\n *\n * @param {Object}   props               Properties passed to the function.\n * @param {Object}   props.attributes    Available block attributes.\n * @param {Function} props.setAttributes Function that updates individual attributes.\n *\n * @return {WPElement} Element to render.\n */\nexport default function Edit({ attributes, setAttributes }) {\n\tconst { id, className, allowedBlocks } = attributes;\n\n\tconst blockProps = useBlockProps();\n\n\tconst innerBlocksProps = useInnerBlocksProps(\n\t\t{},\n\t\t{\n\t\t\tallowedBlocks: allowedBlocks || ALLOWED_BLOCKS,\n\t\t\ttemplateLock: false,\n\t\t\ttemplate: TEMPLATE,\n\t\t},\n\t);\n\n\treturn (\n\t\t<div {...blockProps}>\n\t\t\t<div {...innerBlocksProps} />\n\t\t</div>\n\t);\n}\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\n\n/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\nimport { download as icon } from '@wordpress/icons';\n\n\n/**\n * Internal Dependencies\n */\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * All files containing `style` keyword are bundled together. The code used\n * gets applied both to the front of your site and to the editor. All other files\n * get applied to the editor only.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport edit from './edit';\nimport save from './save';\nimport metadata from './block.json';\n\nconst { name } = metadata;\n\nconst settings = {\n\ticon,\n\tedit,\n\tsave,\n};\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType( name, { ...metadata, ...settings } );\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport { InnerBlocks } from '@wordpress/block-editor';\n\n/**\n * The save function defines the way in which the different attributes should\n * be combined into the final markup, which is then serialized by the block\n * editor into `post_content`.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#save\n *\n * @param {Object} props            Properties passed to the function.\n * @param {Object} props.attributes Available block attributes.\n * @return {WPElement} Element to render.\n */\nexport default function Save() {\n\treturn <InnerBlocks.Content />;\n}\n"],"names":["window","createElement","SVG","xmlns","viewBox","Path","d","ALLOWED_BLOCKS","TEMPLATE","name","metadata","settings","icon","edit","attributes","setAttributes","id","className","allowedBlocks","blockProps","useBlockProps","innerBlocksProps","useInnerBlocksProps","templateLock","template","save","InnerBlocks","Content","registerBlockType"],"sourceRoot":""}