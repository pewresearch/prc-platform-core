{"version":3,"file":"download-block/view.js","mappings":"2CACA,IAAIA,EAAsB,CCA1BA,EAAwB,CAACC,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXF,EAAoBI,EAAEF,EAAYC,KAASH,EAAoBI,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDH,EAAwB,CAACS,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,ICIlF,MAAM,GAJGI,EAI8B,CAAE,WAAgB,IAAOC,EAAwE,WAAG,WAAgB,IAAOA,EAAwE,WAAG,MAAW,IAAOA,EAAmE,OAH7TC,EAAI,CAAC,EAAGhB,EAAoBiB,EAAED,EAAGF,GAAWE,ICK3C,QAAEE,IAAYC,EAAAA,EAAAA,OAAM,gCAAiC,CAC1DD,QAAS,CACRE,gBAAiBA,CAACC,EAAWC,EAAQC,KACpCC,QAAQC,IACLC,SAAS,CACVC,KAAO,gDAA+CN,IACtDO,OAAQ,OACRC,QAAS,CAER,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CACpBC,IAAKX,EACLC,gBAGDW,MAAMC,IAIFA,GAAUC,UACbZ,OAAOa,KAAKF,EAASC,SAAU,SAChC,IAEAE,OAAOC,IACPC,QAAQD,MAAM,kCAAmCA,EAAM,GACtD,EAEJE,cAAgBC,IACfA,EAAMC,iBACN,MAAMC,GAAUC,EAAAA,EAAAA,eACV,UAAExB,EAAS,MAAEyB,GAAUF,EAEvBG,GAAqBF,EAAAA,EAAAA,YAC1B,mCAEK,UAAEtB,EAAS,OAAED,GAAWyB,EAE9BP,QAAQQ,IACP,2DACAD,EACAxB,EACAD,EACAD,GAGGyB,GACHN,QAAQQ,IAAI,SACZ9B,EAAQ+B,SAAS3B,EAAQC,EAAWF,IAEpCH,EAAQE,gBAAgBC,EAAWC,EAAQC,EAC5C,EAED,cAAM0B,CAAS3B,EAAQC,EAAWF,GACjC,MAAM,IAAE6B,IAAQC,EAAAA,EAAAA,cAEVhB,QAAiBX,QAAQC,IAAIC,SAAS,CAC3CC,KAAO,kCACPC,OAAQ,OACRC,QAAS,CACR,eAAgB,oBAEjBC,KAAMC,KAAKC,UAAU,CACpBC,IAAKX,EACLC,iBAQF,GAJAiB,QAAQQ,IAAI,YAAab,IACrB,IAASA,GACZjB,EAAQE,gBAAgBC,EAAWC,EAAQC,IAExC,IAAUY,EAAU,CACvB,MAAMiB,EACLF,EAAIG,cAAcA,cAAcA,cAAcC,aAC7C,OAEMpC,QAASqC,EAAcC,MAAOC,IAAetC,EAAAA,EAAAA,OACpD,8BAEDqB,QAAQQ,IAAI,MAAOS,EAAYL,GAC/BG,EAAalB,KAAK,KAAMe,EACzB,CACD,KDzFM,IAACtC,EACJE","sources":["webpack://@pewresearch/prc-platform-datasets/webpack/bootstrap","webpack://@pewresearch/prc-platform-datasets/webpack/runtime/define property getters","webpack://@pewresearch/prc-platform-datasets/webpack/runtime/hasOwnProperty shorthand","webpack://@pewresearch/prc-platform-datasets/external module \"@wordpress/interactivity\"","webpack://@pewresearch/prc-platform-datasets/./src/download-block/view.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var x = (y) => {\n\tvar x = {}; __webpack_require__.d(x, y); return x\n} \nvar y = (x) => (() => (x))\nconst __WEBPACK_NAMESPACE_OBJECT__ = x({ [\"getContext\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getContext), [\"getElement\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.getElement), [\"store\"]: () => (__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__.store) });","/**\n * WordPress Dependencies\n */\n\nimport { store, getContext, getElement } from '@wordpress/interactivity';\n\nconst { actions } = store('prc-platform/dataset-download', {\n\tactions: {\n\t\tdownloadDataset: (datasetId, userId, userToken) => {\n\t\t\twindow?.wp\n\t\t\t\t?.apiFetch({\n\t\t\t\t\tpath: `/prc-api/v3/datasets/get-download/?datasetId=${datasetId}`,\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t// 'X-WP-Nonce': window.wpApiSettings.nonce,\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tuid: userId,\n\t\t\t\t\t\tuserToken,\n\t\t\t\t\t}),\n\t\t\t\t})\n\t\t\t\t.then((response) => {\n\t\t\t\t\t// If there's a file_url in the response, download it...\n\t\t\t\t\t// ooooo that felt... bad to type\n\t\t\t\t\t// should run a file check here? only pdfs and zips? not sure theres an attack vector here\n\t\t\t\t\tif (response?.file_url) {\n\t\t\t\t\t\twindow.open(response.file_url, '_blank');\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((error) => {\n\t\t\t\t\tconsole.error('Error fetching dataset download', error);\n\t\t\t\t});\n\t\t},\n\t\tonButtonClick: (event) => {\n\t\t\tevent.preventDefault();\n\t\t\tconst context = getContext();\n\t\t\tconst { datasetId, isATP } = context;\n\n\t\t\tconst contentGateContext = getContext(\n\t\t\t\t'prc-user-accounts/content-gate'\n\t\t\t);\n\t\t\tconst { userToken, userId } = contentGateContext;\n\n\t\t\tconsole.log(\n\t\t\t\t'onButtonClick: \"Hit the api with this information...\" ->',\n\t\t\t\tcontentGateContext,\n\t\t\t\tuserToken,\n\t\t\t\tuserId,\n\t\t\t\tdatasetId\n\t\t\t);\n\n\t\t\tif (isATP) {\n\t\t\t\tconsole.log('isATP');\n\t\t\t\tactions.checkATP(userId, userToken, datasetId);\n\t\t\t} else {\n\t\t\t\tactions.downloadDataset(datasetId, userId, userToken);\n\t\t\t}\n\t\t},\n\t\tasync checkATP(userId, userToken, datasetId) {\n\t\t\tconst { ref } = getElement();\n\n\t\t\tconst response = await window?.wp?.apiFetch({\n\t\t\t\tpath: `/prc-api/v3/datasets/check-atp/`,\n\t\t\t\tmethod: 'POST',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t},\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tuid: userId,\n\t\t\t\t\tuserToken,\n\t\t\t\t}),\n\t\t\t});\n\n\t\t\tconsole.log('CHECK ATP', response);\n\t\t\tif (true === response) {\n\t\t\t\tactions.downloadDataset(datasetId, userId, userToken);\n\t\t\t}\n\t\t\tif (false === response) {\n\t\t\t\tconst popupID =\n\t\t\t\t\tref.parentElement.parentElement.parentElement.getAttribute(\n\t\t\t\t\t\t'id'\n\t\t\t\t\t);\n\t\t\t\tconst { actions: popupActions, state: popupState } = store(\n\t\t\t\t\t'prc-block/popup-controller'\n\t\t\t\t);\n\t\t\t\tconsole.log('POP', popupState, popupID);\n\t\t\t\tpopupActions.open(null, popupID);\n\t\t\t}\n\t\t},\n\t},\n});\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","y","__WEBPACK_EXTERNAL_MODULE__wordpress_interactivity_8e89b257__","x","d","actions","store","downloadDataset","datasetId","userId","userToken","window","wp","apiFetch","path","method","headers","body","JSON","stringify","uid","then","response","file_url","open","catch","error","console","onButtonClick","event","preventDefault","context","getContext","isATP","contentGateContext","log","checkATP","ref","getElement","popupID","parentElement","getAttribute","popupActions","state","popupState"],"sourceRoot":""}