import*as t from"@wordpress/interactivity";var e={d:(t,o)=>{for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e)};const o=(a={getContext:()=>t.getContext,getElement:()=>t.getElement,store:()=>t.store},r={},e.d(r,a),r),{actions:n}=(0,o.store)("prc-platform/dataset-download",{actions:{downloadDataset:(t,e,o)=>{window?.wp?.apiFetch({path:`/prc-api/v3/datasets/get-download/?datasetId=${t}`,method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({uid:e,userToken:o})}).then((t=>{t?.file_url&&window.open(t.file_url,"_blank")})).catch((t=>{console.error("Error fetching dataset download",t)}))},onButtonClick:t=>{t.preventDefault();const e=(0,o.getContext)(),{datasetId:a,isATP:r}=e,s=(0,o.getContext)("prc-user-accounts/content-gate"),{userToken:i,userId:c}=s;console.log('onButtonClick: "Hit the api with this information..." ->',s,i,c,a),r?(console.log("isATP"),n.checkATP(c,i,a)):n.downloadDataset(a,c,i)},async checkATP(t,e,a){const{ref:r}=(0,o.getElement)(),s=await(window?.wp?.apiFetch({path:"/prc-api/v3/datasets/check-atp/",method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({uid:t,userToken:e})}));if(console.log("CHECK ATP",s),!0===s&&n.downloadDataset(a,t,e),!1===s){const t=r.parentElement.parentElement.parentElement.getAttribute("id"),{actions:e,state:n}=(0,o.store)("prc-block/popup-controller");console.log("POP",n,t),e.open(null,t)}}}});var a,r;
//# sourceMappingURL=view.js.map