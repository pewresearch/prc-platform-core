{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@pewresearch/prc-platform-block-area-modules/webpack/runtime/chunk loaded","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"blocks\"]","webpack://@pewresearch/prc-platform-block-area-modules/external window \"React\"","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"element\"]","webpack://@pewresearch/prc-platform-block-area-modules/./node_modules/@wordpress/icons/build-module/icon/index.js","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"primitives\"]","webpack://@pewresearch/prc-platform-block-area-modules/./node_modules/@wordpress/icons/build-module/library/symbol-filled.js","webpack://@pewresearch/prc-platform-block-area-modules/./src/icon.jsx","webpack://@pewresearch/prc-platform-block-area-modules/external window \"prcComponents\"","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"blockEditor\"]","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"data\"]","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"coreData\"]","webpack://@pewresearch/prc-platform-block-area-modules/./src/constants.js","webpack://@pewresearch/prc-platform-block-area-modules/external window \"prcHooks\"","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"i18n\"]","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"components\"]","webpack://@pewresearch/prc-platform-block-area-modules/./src/inspector-controls/block-area.jsx","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"url\"]","webpack://@pewresearch/prc-platform-block-area-modules/./src/functions/create-block-module.js","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-module-create.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/inspector-controls/block-module.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/inspector-controls/taxonomy.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/inspector-controls/index.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-area-wizard/steps/_step.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-area-wizard/steps/intro.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-area-wizard/steps/query-a.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-area-wizard/steps/query-b.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-area-wizard/steps/query-c.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/functions/create-block-area.js","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-area-wizard/steps/create-a.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-area-wizard/steps/select-a.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-area-wizard/index.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/variations.js","webpack://@pewresearch/prc-platform-block-area-modules/./src/index.js","webpack://@pewresearch/prc-platform-block-area-modules/./src/edit.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/hooks/use-taxonomy-info.js","webpack://@pewresearch/prc-platform-block-area-modules/./src/hooks/use-block-modules.js","webpack://@pewresearch/prc-platform-block-area-modules/./src/deprecated.js","webpack://@pewresearch/prc-platform-block-area-modules/webpack/bootstrap","webpack://@pewresearch/prc-platform-block-area-modules/webpack/runtime/hasOwnProperty shorthand","webpack://@pewresearch/prc-platform-block-area-modules/webpack/runtime/jsonp chunk loading","webpack://@pewresearch/prc-platform-block-area-modules/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","/**\n * WordPress dependencies\n */\nimport { cloneElement, forwardRef } from '@wordpress/element';\n\n/** @typedef {{icon: JSX.Element, size?: number} & import('@wordpress/primitives').SVGProps} IconProps */\n\n/**\n * Return an SVG icon.\n *\n * @param {IconProps}                                 props icon is the SVG component to render\n *                                                          size is a number specifiying the icon size in pixels\n *                                                          Other props will be passed to wrapped SVG component\n * @param {import('react').ForwardedRef<HTMLElement>} ref   The forwarded ref to the SVG element.\n *\n * @return {JSX.Element}  Icon component\n */\nfunction Icon({\n  icon,\n  size = 24,\n  ...props\n}, ref) {\n  return cloneElement(icon, {\n    width: size,\n    height: size,\n    ...props,\n    ref\n  });\n}\nexport default forwardRef(Icon);\n//# sourceMappingURL=index.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst symbolFilled = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M21.3 10.8l-5.6-5.6c-.7-.7-1.8-.7-2.5 0l-5.6 5.6c-.7.7-.7 1.8 0 2.5l5.6 5.6c.3.3.8.5 1.2.5s.9-.2 1.2-.5l5.6-5.6c.8-.7.8-1.9.1-2.5zm-17.6 1L10 5.5l-1-1-6.3 6.3c-.7.7-.7 1.8 0 2.5L9 19.5l1.1-1.1-6.3-6.3c-.2 0-.2-.2-.1-.3z\"\n}));\nexport default symbolFilled;\n//# sourceMappingURL=symbol-filled.js.map","/**\n * External Dependencies\n */\nimport { symbolFilled, Icon } from '@wordpress/icons';\n\nexport default function IconSymbolFilled({color = '#02b5d5'}) {\n\treturn <Icon icon={ symbolFilled } style={{\n\t\tcolor\n\t}}/>;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcComponents\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","// Taxonomy\nexport const TAXONOMY = 'block_area';\nexport const TAXONOMY_LABEL = 'Block Area';\nexport const TAXONOMY_REST_BASE = 'block_area';\n// Post Type\nexport const POST_TYPE = 'block_module';\nexport const POST_TYPE_LABEL = 'Block Module';\nexport const POST_TYPE_REST_BASE = 'block_module';\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcHooks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","/**\n * WordPress Dependencies\n */\nimport { Fragment, useEffect } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { useEntityProp } from '@wordpress/core-data';\nimport {\n\tTextControl,\n\tButton,\n\tToggleControl,\n\tFlexBlock,\n} from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport { TAXONOMY, TAXONOMY_LABEL } from '../constants';\n\nexport default function BlockAreaControl({\n\tattributes,\n\tsetAttributes,\n\tblockArea,\n\tpostStatus,\n\tsetPostStatus,\n}) {\n\tconst { metadata, ref } = attributes;\n\n\tconst { id, name, slug } = blockArea;\n\n\t// Block Area:\n\tconst [blockAreaName, setBlockAreaName] = useEntityProp(\n\t\t'taxonomy',\n\t\tTAXONOMY,\n\t\t'name',\n\t\tid\n\t);\n\n\t// This will check if the block area already has a label in the block editor and if not, it will set it to the block area name.\n\tuseEffect(() => {\n\t\tif (!metadata?.name && blockAreaName) {\n\t\t\tsetAttributes({\n\t\t\t\tmetadata: {\n\t\t\t\t\t...metadata,\n\t\t\t\t\tname: blockAreaName,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}, [metadata, blockAreaName]);\n\n\tif (!id) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<FlexBlock>\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={`${TAXONOMY_LABEL} Name`}\n\t\t\t\t\tvalue={blockAreaName}\n\t\t\t\t\tonChange={setBlockAreaName}\n\t\t\t\t/>\n\t\t\t</FlexBlock>\n\t\t\t<FlexBlock>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel={__(\n\t\t\t\t\t\t'Preview Latest Draft Module',\n\t\t\t\t\t\t'prc-platform-core'\n\t\t\t\t\t)}\n\t\t\t\t\tchecked={'draft' === postStatus}\n\t\t\t\t\thelp={__(\n\t\t\t\t\t\t'This will allow you to preview and edit the latest draft module in the block area. This will not be visible on the front end, the latest published module will always be visible.',\n\t\t\t\t\t\t'prc-platform-core'\n\t\t\t\t\t)}\n\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\tsetPostStatus(value ? 'draft' : 'publish');\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</FlexBlock>\n\t\t\t<FlexBlock>\n\t\t\t\t<Button\n\t\t\t\t\tisDestructive\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\tref: null,\n\t\t\t\t\t\t\tblockAreaSlug: null,\n\t\t\t\t\t\t\tcategorySlug: null,\n\t\t\t\t\t\t\tinheritCategory: null,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{__('Reset Block Area')}\n\t\t\t\t</Button>\n\t\t\t</FlexBlock>\n\t\t</Fragment>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"url\"];","/**\n * WordPress Dependencies\n */\nimport { store as coreStore } from '@wordpress/core-data';\nimport { dispatch } from '@wordpress/data';\n\n/**\n * Internal Dependencies\n */\nimport {\n\tPOST_TYPE,\n\tPOST_TYPE_LABEL,\n\tTAXONOMY,\n\tTAXONOMY_REST_BASE,\n} from '../constants';\n\nexport default async function createBlockModule(\n\tblockModuleTitle,\n\tblockAreaId,\n\ttaxonomyName,\n\ttaxonomyTermId,\n\tstatus = 'publish'\n) {\n\tconst args = {\n\t\ttitle: blockModuleTitle,\n\t\tstatus,\n\t};\n\tif (blockAreaId) {\n\t\targs[TAXONOMY_REST_BASE] = [blockAreaId];\n\t}\n\tif (taxonomyTermId) {\n\t\targs[taxonomyName] = [taxonomyTermId];\n\t}\n\n\tconst { saveEntityRecord } = dispatch(coreStore);\n\n\tconst newBlockModule = await saveEntityRecord('postType', POST_TYPE, args);\n\n\tif (newBlockModule) {\n\t\tconsole.log('onCreateBlockModule', newBlockModule);\n\t\treturn newBlockModule;\n\t}\n\n\treturn false;\n}\n","/**\n * External Dependencies\n */\nimport { EntityCreateNewModal } from '@prc/components';\n\n/**\n * WordPress Dependencies\n */\nimport { useState, Fragment } from '@wordpress/element';\nimport { Button } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport { createBlockModule } from './functions';\n\nexport default function BlockModuleCreate({\n\tblockAreaId,\n\ttaxonomyName,\n\ttaxonomyTermId,\n\tsetAttributes,\n}) {\n\tconst [displayModal, setDisplayModal] = useState(false);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Button\n\t\t\t\tvariant=\"secondary\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetDisplayModal(!displayModal);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tCreate New Block Module\n\t\t\t</Button>\n\t\t\t{displayModal && (\n\t\t\t\t<EntityCreateNewModal\n\t\t\t\t\t{...{\n\t\t\t\t\t\tdefaultTitle: 'Block Module',\n\t\t\t\t\t\tonClose: () => {\n\t\t\t\t\t\t\tsetDisplayModal(false);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonSubmit: (newTitle) => {\n\t\t\t\t\t\t\tcreateBlockModule(\n\t\t\t\t\t\t\t\tnewTitle,\n\t\t\t\t\t\t\t\tblockAreaId,\n\t\t\t\t\t\t\t\ttaxonomyName,\n\t\t\t\t\t\t\t\ttaxonomyTermId,\n\t\t\t\t\t\t\t\t'publish'\n\t\t\t\t\t\t\t).then((response) => {\n\t\t\t\t\t\t\t\tconsole.log('then...', response);\n\t\t\t\t\t\t\t\tsetAttributes({ ref: response.id });\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n}\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { Fragment } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { TextControl, FlexBlock } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport { POST_TYPE, POST_TYPE_LABEL } from '../constants';\nimport BlockModuleCreate from '../block-module-create';\n\nexport default function BlockModuleControl({\n\tattributes,\n\tsetAttributes,\n\tblockArea,\n\ttaxonomy,\n\tblockModule,\n}) {\n\tconst { taxonomyName } = attributes;\n\tconst { id, name, slug } = blockModule;\n\n\tconst blockAreaId = blockArea?.id;\n\tconst taxonomyId = taxonomy?.id;\n\n\t// Block Module:\n\tconst [blockModuleTitle, setBlockModuleTitle] = useEntityProp(\n\t\t'postType',\n\t\tPOST_TYPE,\n\t\t'title',\n\t\tid\n\t);\n\tconst [blockModuleLink] = useEntityProp('postType', POST_TYPE, 'link', id);\n\n\tif (!id) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<FlexBlock>\n\t\t\t\t<TextControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tlabel={`${POST_TYPE_LABEL} Title`}\n\t\t\t\t\tvalue={blockModuleTitle}\n\t\t\t\t\tonChange={setBlockModuleTitle}\n\t\t\t\t/>\n\t\t\t</FlexBlock>\n\t\t\t<FlexBlock>\n\t\t\t\t<BlockModuleCreate\n\t\t\t\t\t{...{\n\t\t\t\t\t\tblockAreaId,\n\t\t\t\t\t\ttaxonomyName,\n\t\t\t\t\t\ttaxonomyTermId: taxonomyId,\n\t\t\t\t\t\tsetAttributes,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</FlexBlock>\n\t\t</Fragment>\n\t);\n}\n","/**\n * External Dependencies\n */\nimport { TermSelect } from '@prc/components';\n\n/**\n * WordPress Dependencies\n */\nimport { useMemo } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { ToggleControl, FlexBlock } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\n\nexport default function TaxonomyControl({\n\tattributes,\n\tsetAttributes,\n\ttaxonomy,\n}) {\n\tconst { id, name, slug } = taxonomy;\n\tconst { inheritTermFromTemplate, taxonomyName, taxonomyTermSlug } =\n\t\tattributes;\n\n\tconst termValue = useMemo(() => {\n\t\tif (!id) {\n\t\t\treturn [];\n\t\t}\n\t\treturn [\n\t\t\t{\n\t\t\t\tvalue: slug,\n\t\t\t\ttitle: name,\n\t\t\t},\n\t\t];\n\t}, [id, name, slug]);\n\n\treturn (\n\t\t<FlexBlock>\n\t\t\t<ToggleControl\n\t\t\t\tlabel={__('Inherit Term From Template', 'prc-platform-core')}\n\t\t\t\tchecked={inheritTermFromTemplate}\n\t\t\t\tonChange={(value) => {\n\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\tinheritTermFromTemplate: value,\n\t\t\t\t\t\ttaxonomyTermSlug:\n\t\t\t\t\t\t\ttrue === value ? null : taxonomyTermSlug,\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{!inheritTermFromTemplate && (\n\t\t\t\t<TermSelect\n\t\t\t\t\t{...{\n\t\t\t\t\t\tonChange: (value) => {\n\t\t\t\t\t\t\tconsole.log('onChange...', value);\n\t\t\t\t\t\t\t// if empty set term slug to empty as well\n\t\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\t\tsetAttributes({ taxonomyTermSlug: null });\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsetAttributes({ taxonomyTermSlug: value.slug });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\ttaxonomy: taxonomyName,\n\t\t\t\t\t\tvalue: termValue,\n\t\t\t\t\t\tmaxTerms: 1,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</FlexBlock>\n\t);\n}\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { Fragment, useEffect } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { useEntityProp } from '@wordpress/core-data';\nimport {\n\tButton,\n\tTextControl,\n\tPanelBody,\n\tExternalLink,\n\tFlex,\n\tFlexBlock,\n\tFlexItem,\n\tCardDivider,\n} from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport BlockAreaControl from './block-area';\nimport BlockModuleControl from './block-module';\nimport TaxonomyControl from './taxonomy';\n\nexport default function Controls({\n\tattributes,\n\tsetAttributes,\n\tclientId,\n\tblockArea,\n\ttaxonomy,\n\tblockModule,\n\tpostStatus,\n\tsetPostStatus,\n}) {\n\tconst { ref } = attributes;\n\treturn (\n\t\t<InspectorControls>\n\t\t\t{!ref && (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<PanelBody title={__('Block Area')} initialOpen={true}>\n\t\t\t\t\t\t<Flex direction=\"column\" gap=\"10px\">\n\t\t\t\t\t\t\t<BlockAreaControl\n\t\t\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\t\t\tattributes,\n\t\t\t\t\t\t\t\t\tsetAttributes,\n\t\t\t\t\t\t\t\t\tblockArea,\n\t\t\t\t\t\t\t\t\tblockModule,\n\t\t\t\t\t\t\t\t\tpostStatus,\n\t\t\t\t\t\t\t\t\tsetPostStatus,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t\t<PanelBody title={__('Taxonomy')} initialOpen={true}>\n\t\t\t\t\t\t<Flex direction=\"column\" gap=\"10px\">\n\t\t\t\t\t\t\t<TaxonomyControl\n\t\t\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\t\t\tattributes,\n\t\t\t\t\t\t\t\t\tsetAttributes,\n\t\t\t\t\t\t\t\t\ttaxonomy,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</Fragment>\n\t\t\t)}\n\t\t\t<PanelBody title={__('Block Module')} initialOpen={true}>\n\t\t\t\t<Flex direction=\"column\" gap=\"10px\">\n\t\t\t\t\t<BlockModuleControl\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\tattributes,\n\t\t\t\t\t\t\tsetAttributes,\n\t\t\t\t\t\t\tblockArea,\n\t\t\t\t\t\t\ttaxonomy,\n\t\t\t\t\t\t\tblockModule,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Flex>\n\t\t\t</PanelBody>\n\t\t</InspectorControls>\n\t);\n}\n","export default function Step({ children }) {\n\treturn <div className=\"block-area-edit__step\">{children}</div>;\n}\n","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Button, Spinner } from '@wordpress/components';\n\nimport Step from './_step';\n\nexport default function Intro({ isResolving, blockModules = [], setNextStep }) {\n\treturn (\n\t\t<Step>\n\t\t\t<p>\n\t\t\t\tYou can configure a block area to dynamically query the latest\n\t\t\t\tmodule by the block area and/or an additional taxonomy.\n\t\t\t\tAlternatively, you can statically insert an existing block\n\t\t\t\tmodule or create a new blank one.\n\t\t\t</p>\n\t\t\t{isResolving && <Spinner />}\n\t\t\t{!isResolving && (\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tonClick={() => setNextStep('query-a')}\n\t\t\t\t>\n\t\t\t\t\t{__('Configure Block Area')}\n\t\t\t\t</Button>\n\t\t\t)}\n\n\t\t\t{!isResolving && !!blockModules.length && (\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tonClick={() => setNextStep('select-a')}\n\t\t\t\t>\n\t\t\t\t\t{__('Choose Existing Module')}\n\t\t\t\t</Button>\n\t\t\t)}\n\n\t\t\t{!isResolving && (\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tonClick={() => setNextStep('create-a')}\n\t\t\t\t>\n\t\t\t\t\t{__('Start New Module')}\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</Step>\n\t);\n}\n","/**\n * External Dependencies\n */\nimport { WPEntitySearch } from '@prc/components';\nimport { useDebounce, useTaxonomy } from '@prc/hooks';\n\n/**\n * WordPress Dependencies\n */\nimport { useState, useEffect } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { Button, TextControl } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport Step from './_step';\nimport { TAXONOMY, TAXONOMY_LABEL } from '../../constants';\n\nconst CreateNewButton = ({\n\tsetButtonState,\n\tbuttonState,\n\tsetCreateNewBlockArea,\n}) => {\n\tuseEffect(() => {\n\t\tsetButtonState({\n\t\t\t...buttonState,\n\t\t\ttext: 'Create New Block Area',\n\t\t\tdisabled: false,\n\t\t\tonClick: () => setCreateNewBlockArea(true),\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<span>\n\t\t\tNo Block Area could be found with that name, please create a new\n\t\t\tone.\n\t\t</span>\n\t);\n};\n\nconst CreateNewField = ({\n\tsetNewBlockAreaName,\n\tsetNextStep,\n\tsetButtonState,\n\tbuttonState,\n}) => {\n\tconst [newBlockAreaName, setBlockAreaName] = useState('');\n\tconst debouncedBlockAreaName = useDebounce(newBlockAreaName, 500);\n\n\tuseEffect(() => {\n\t\tif (debouncedBlockAreaName.length < 3) {\n\t\t\tsetButtonState({\n\t\t\t\t...buttonState,\n\t\t\t\tdisabled: true,\n\t\t\t});\n\t\t} else {\n\t\t\tsetButtonState({\n\t\t\t\t...buttonState,\n\t\t\t\ttext: 'Continue...',\n\t\t\t\tdisabled: false,\n\t\t\t\tonClick: () => {\n\t\t\t\t\tsetNewBlockAreaName(debouncedBlockAreaName);\n\t\t\t\t\tsetNextStep('query-b');\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}, [debouncedBlockAreaName]);\n\n\treturn (\n\t\t<TextControl\n\t\t\tlabel={__('New Block Area Name', 'prc-platform-core')}\n\t\t\tvalue={newBlockAreaName}\n\t\t\tonChange={(value) => setBlockAreaName(value)}\n\t\t/>\n\t);\n};\n\n/**\n * Search for, select, or create a new block area.\n * @param {Object}   props\n * @param {string}   props.blockAreaSlug       The current block area slug.\n * @param {Function} props.setBlockAreaSlug    Set the block area slug.\n * @param {Function} props.setNewBlockAreaName Set the new block area name.\n * @param {Function} props.setNextStep         Set the next step.\n * @param {Object}   props.buttonState         The button state.\n * @param {Function} props.setButtonState      Set the button state.\n */\nexport default function QueryA({\n\tblockAreaSlug,\n\tsetBlockAreaSlug,\n\tsetNewBlockAreaName,\n\tsetNextStep,\n\tbuttonState,\n\tsetButtonState,\n}) {\n\tconst [tempBlockAreaSlug, setTempBlockAreaSlug] = useState(blockAreaSlug);\n\tconst [blockAreaId, blockAreaName] = useTaxonomy(TAXONOMY, blockAreaSlug);\n\n\tconst [createNewBlockArea, setCreateNewBlockArea] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst buttonArgs = {\n\t\t\t...buttonState,\n\t\t\ttext: 'Next',\n\t\t\tdisabled: true,\n\t\t\tonClick: () => {\n\t\t\t\tsetBlockAreaSlug(tempBlockAreaSlug);\n\t\t\t\tsetNextStep('query-b');\n\t\t\t},\n\t\t};\n\t\tif (tempBlockAreaSlug && tempBlockAreaSlug.length > 0) {\n\t\t\tbuttonArgs.disabled = false;\n\t\t}\n\t\tsetButtonState(buttonArgs);\n\t}, [tempBlockAreaSlug]);\n\n\tconst createNewButton = (\n\t\t<CreateNewButton\n\t\t\t{...{\n\t\t\t\tbuttonState,\n\t\t\t\tsetButtonState,\n\t\t\t\tsetCreateNewBlockArea,\n\t\t\t}}\n\t\t/>\n\t);\n\n\treturn (\n\t\t<Step>\n\t\t\t{false === createNewBlockArea && (\n\t\t\t\t<WPEntitySearch\n\t\t\t\t\tplaceholder={__(\n\t\t\t\t\t\t'Search for an existing block area, or create a new one',\n\t\t\t\t\t\t'prc-platform-core'\n\t\t\t\t\t)}\n\t\t\t\t\tsearchLabel={`Search for ${TAXONOMY_LABEL}`}\n\t\t\t\t\tentityType=\"taxonomy\"\n\t\t\t\t\tentitySubType={TAXONOMY}\n\t\t\t\t\tentityId={blockAreaId || false}\n\t\t\t\t\tsearchValue={blockAreaName || ''}\n\t\t\t\t\tonSelect={(entity) => {\n\t\t\t\t\t\tconsole.log('Block Area Entity: ', entity);\n\t\t\t\t\t\tsetTempBlockAreaSlug(entity.slug);\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyEnter={() => {\n\t\t\t\t\t\tconsole.log('Enter Key Pressed');\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyESC={() => {\n\t\t\t\t\t\tconsole.log('ESC Key Pressed');\n\t\t\t\t\t}}\n\t\t\t\t\tperPage={10}\n\t\t\t\t\tshowExcerpt={true}\n\t\t\t\t\tcreateNew={createNewButton}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{true === createNewBlockArea && (\n\t\t\t\t<CreateNewField\n\t\t\t\t\t{...{\n\t\t\t\t\t\tsetNewBlockAreaName,\n\t\t\t\t\t\tsetNextStep,\n\t\t\t\t\t\tsetButtonState,\n\t\t\t\t\t\tbuttonState,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</Step>\n\t);\n}\n","/* eslint-disable max-lines-per-function */\n/**\n * External Dependencies\n */\nimport { WPEntitySearch } from '@prc/components';\nimport { useTaxonomy } from '@prc/hooks';\n\n/**\n * WordPress Dependencies\n */\nimport { Fragment, useEffect } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { BaseControl, ToggleControl } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport { TAXONOMY_LABEL } from '../../constants';\n\n/**\n * Search for and select a taxonomy, or inherit from the template.\n *\n * @param {Object}   props                              Component props.\n * @param {string}   props.categorySlug                 The category slug.\n * @param {string}   props.templateSlug                 The template slug.\n * @param {boolean}  props.allowCategorySelection       Allow category selection.\n * @param {boolean}  props.inheritCategory              Inherit category from template.\n * @param {Function} props.toggleAllowCategorySelection Toggle category selection.\n * @param {Function} props.setInheritCategory           Set inherit category.\n * @param {Function} props.setCategorySlug              Set category slug.\n * @param {Object}   props.buttonState                  The button state.\n * @param {Function} props.setButtonState               Set button state.\n * @param {Function} props.setNextStep                  Set the next step.\n * @param            props.taxonomyName\n * @param            props.setTaxonomyName\n * @param            props.taxonomyTermSlug\n * @param            props.setTaxonomyTermSlug\n * @param            props.allowTaxonomySelection\n * @param            props.inheritTermFromTemplate\n * @param            props.toggleAllowTaxonomySelection\n * @param            props.setInheritTermFromTemplate\n * @return {*} The component.\n */\nexport default function QueryB({\n\ttaxonomyName,\n\tsetTaxonomyName,\n\ttaxonomyTermSlug,\n\tsetTaxonomyTermSlug,\n\ttemplateSlug,\n\tallowTaxonomySelection,\n\tinheritTermFromTemplate,\n\ttoggleAllowTaxonomySelection,\n\tsetInheritTermFromTemplate,\n\tbuttonState,\n\tsetButtonState,\n\tsetNextStep,\n}) {\n\tconsole.log('taxonomyName', taxonomyName, templateSlug);\n\tconst isTaxonomyTemplate =\n\t\tundefined !== templateSlug && templateSlug?.includes(`${taxonomyName}`);\n\tconst templateSlugCleaned = templateSlug?.replace(`${taxonomyName}-`, '');\n\n\tconst [templateTermId, templateTermName] = useTaxonomy(\n\t\ttaxonomyName,\n\t\ttemplateSlugCleaned\n\t);\n\tconst [termId, termName] = useTaxonomy(taxonomyName, taxonomyTermSlug);\n\n\tuseEffect(() => {\n\t\tconst newButtonargs = {\n\t\t\t...buttonState,\n\t\t\ttext: 'Next',\n\t\t\tdisabled: true,\n\t\t\tonClick: () => setNextStep('query-c'),\n\t\t};\n\t\tif (!allowTaxonomySelection) {\n\t\t\tnewButtonargs.disabled = false;\n\t\t} else {\n\t\t\tif (!inheritTermFromTemplate && !taxonomyTermSlug) {\n\t\t\t\tnewButtonargs.disabled = true;\n\t\t\t} else {\n\t\t\t\tnewButtonargs.disabled = false;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tisTaxonomyTemplate &&\n\t\t\t\t!inheritTermFromTemplate &&\n\t\t\t\t!taxonomyTermSlug\n\t\t\t) {\n\t\t\t\tnewButtonargs.disabled = true;\n\t\t\t} else {\n\t\t\t\tnewButtonargs.disabled = false;\n\t\t\t}\n\t\t\tif (!isTaxonomyTemplate && !taxonomyTermSlug) {\n\t\t\t\tnewButtonargs.disabled = true;\n\t\t\t} else {\n\t\t\t\tnewButtonargs.disabled = false;\n\t\t\t}\n\t\t\tconsole.log('templateSlug', templateSlug);\n\t\t}\n\t\tsetButtonState(newButtonargs);\n\t}, [\n\t\tallowTaxonomySelection,\n\t\tinheritTermFromTemplate,\n\t\ttaxonomyTermSlug,\n\t\ttemplateSlug,\n\t]);\n\n\treturn (\n\t\t<div>\n\t\t\t<BaseControl\n\t\t\t\tlabel={__('Query by Taxonomy?', 'prc-platform-core')}\n\t\t\t\tid=\"query-by-taxonomy-boolean\"\n\t\t\t>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel={__('Query by Taxonomy')}\n\t\t\t\t\tchecked={allowTaxonomySelection}\n\t\t\t\t\tonChange={() => toggleAllowTaxonomySelection()}\n\t\t\t\t/>\n\t\t\t</BaseControl>\n\t\t\t{allowTaxonomySelection && (\n\t\t\t\t<Fragment>\n\t\t\t\t\t{isTaxonomyTemplate && (\n\t\t\t\t\t\t<BaseControl\n\t\t\t\t\t\t\tlabel={__(\n\t\t\t\t\t\t\t\t'Inherit Taxonomy Term from Template?',\n\t\t\t\t\t\t\t\t'prc-platform-core'\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\tid=\"inherit-taxonomy-term-boolean\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\t\tlabel={\n\t\t\t\t\t\t\t\t\tinheritTermFromTemplate\n\t\t\t\t\t\t\t\t\t\t? __('Yes', 'prc-platform-core')\n\t\t\t\t\t\t\t\t\t\t: __('No', 'prc-platform-core')\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchecked={inheritTermFromTemplate}\n\t\t\t\t\t\t\t\tonChange={() =>\n\t\t\t\t\t\t\t\t\tsetInheritTermFromTemplate(\n\t\t\t\t\t\t\t\t\t\t!inheritTermFromTemplate\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</BaseControl>\n\t\t\t\t\t)}\n\t\t\t\t\t{true !== inheritTermFromTemplate && (\n\t\t\t\t\t\t<WPEntitySearch\n\t\t\t\t\t\t\tplaceholder={`Search for a taxonomy term to filter ${TAXONOMY_LABEL} by`}\n\t\t\t\t\t\t\tsearchLabel={`Search for a taxonomy term to filter ${TAXONOMY_LABEL} by`}\n\t\t\t\t\t\t\tentityType=\"taxonomy\"\n\t\t\t\t\t\t\tentitySubType={taxonomyName}\n\t\t\t\t\t\t\tentityId={templateTermId || termId || false}\n\t\t\t\t\t\t\tsearchValue={templateTermName || termName || ''}\n\t\t\t\t\t\t\tonSelect={(entity) => {\n\t\t\t\t\t\t\t\tconsole.log('Taxonomy Entity: ', entity);\n\t\t\t\t\t\t\t\tsetTaxonomyTermSlug(entity.slug);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonKeyEnter={() => {\n\t\t\t\t\t\t\t\tconsole.log('Enter Key Pressed');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonKeyESC={() => {\n\t\t\t\t\t\t\t\tconsole.log('ESC Key Pressed');\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tperPage={10}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</Fragment>\n\t\t\t)}\n\t\t</div>\n\t);\n}\n","/**\n * WordPress Dependencies\n */\nimport { useState, useEffect } from '@wordpress/element';\n\n/**\n * Internal Dependencies\n */\nimport Step from './_step';\nimport { createBlockArea } from '../../functions';\n\n/**\n * Confirm Block Area and other taxonomy options are correct\n * @param {Object}   props\n * @param {string}   props.blockAreaSlug    The block area slug\n * @param {string}   props.categorySlug     The category slug\n * @param {boolean}  props.inheritCategory  Inherit category from context\n * @param {string}   props.newBlockAreaName The new block area name\n * @param {Function} props.setAttributes    Set the attributes\n * @param {Function} props.setNextStep      Set the next step\n * @param {Object}   props.buttonState      The button state\n * @param {Function} props.setButtonState   Set the button state\n */\nexport default function QueryC({\n\tblockAreaSlug,\n\ttaxonomyName,\n\ttaxonomyTermSlug,\n\tinheritTermFromTemplate,\n\tnewBlockAreaName,\n\tsetAttributes,\n\tsetNextStep,\n\tbuttonState,\n\tsetButtonState,\n}) {\n\tconst [preConfirm, setPreConfirm] = useState(false);\n\tconst [confirm, setConfirm] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst newButtonargs = {\n\t\t\t...buttonState,\n\t\t\ttext: 'Confirm Settings',\n\t\t\tdisabled: false,\n\t\t\tonClick: () => setPreConfirm(true),\n\t\t};\n\t\tsetButtonState(newButtonargs);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (preConfirm) {\n\t\t\tconst newButtonargs = {\n\t\t\t\t...buttonState,\n\t\t\t\ttext: 'Insert Block Area',\n\t\t\t\tdisabled: false,\n\t\t\t\tvariant: 'primary',\n\t\t\t\tonClick: () => setConfirm(true),\n\t\t\t};\n\t\t\tsetButtonState(newButtonargs);\n\t\t}\n\t}, [preConfirm]);\n\n\tuseEffect(() => {\n\t\tif (confirm) {\n\t\t\tconst newAttrs = {\n\t\t\t\tinheritTermFromTemplate,\n\t\t\t};\n\t\t\tif (taxonomyTermSlug) {\n\t\t\t\tnewAttrs.taxonomyTermSlug = taxonomyTermSlug;\n\t\t\t}\n\t\t\tif (newBlockAreaName) {\n\t\t\t\tcreateBlockArea(newBlockAreaName).then((newBlockAreaSlug) => {\n\t\t\t\t\tnewAttrs.blockAreaSlug = newBlockAreaSlug;\n\t\t\t\t\tconsole.log('New Block Area Slug:', newBlockAreaSlug, newAttrs);\n\t\t\t\t\tsetAttributes(newAttrs);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (blockAreaSlug) {\n\t\t\t\t\tnewAttrs.blockAreaSlug = blockAreaSlug;\n\t\t\t\t}\n\t\t\t\tconsole.log('New Attributes:', newAttrs);\n\t\t\t\tsetAttributes(newAttrs);\n\t\t\t}\n\t\t}\n\t}, [confirm]);\n\n\t// if confirm is true then we're going to double check the below and if we're good great then well proceed, otherwise we'll setNextStep('create-a') and tell them to create a new block module.\n\n\t// Now that we have these values we're going to set them in the attributes. We're also going to do a quick query of the block modules and if we don't find one we're going to setNextStep('create-a') and tell them to create a new block module. That create-a step will need to look for categorySlug and blockAreaSlug and pass those values along to the newly created block_module post type...\n\n\t// Once we confirm the values we're going to create the block area if needs be.\n\n\treturn (\n\t\t<Step>\n\t\t\t<h5 className=\"block-area-edit__review-settings-heading\">\n\t\t\t\tReview Block Area Settings:\n\t\t\t</h5>\n\t\t\t{!newBlockAreaName && (\n\t\t\t\t<p>\n\t\t\t\t\tThis area will render the latest public{' '}\n\t\t\t\t\t<pre>block_module</pre> that is in the{' '}\n\t\t\t\t\t<pre>{blockAreaSlug}</pre> block area\n\t\t\t\t\t{taxonomyTermSlug && (\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\tand <pre>{taxonomyTermSlug}</pre> {taxonomyName}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t\t{true === inheritTermFromTemplate && (\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\tand will <pre>inherit the {taxonomyName}</pre> from\n\t\t\t\t\t\t\tavailable context\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t\t.\n\t\t\t\t</p>\n\t\t\t)}\n\t\t\t{newBlockAreaName && (\n\t\t\t\t<p>\n\t\t\t\t\tThis area will render the latest public{' '}\n\t\t\t\t\t<pre>block_module</pre> that is in the new{' '}\n\t\t\t\t\t<pre>{newBlockAreaName}</pre> block area\n\t\t\t\t\t{taxonomyTermSlug && (\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{' '}\n\t\t\t\t\t\t\tand <pre>{taxonomyTermSlug}</pre> {taxonomyName}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t)}\n\t\t\t\t\t.\n\t\t\t\t</p>\n\t\t\t)}\n\t\t</Step>\n\t);\n}\n","/**\n * WordPress Dependencies\n */\nimport { store as coreStore } from '@wordpress/core-data';\nimport { dispatch } from '@wordpress/data';\nimport { cleanForSlug } from '@wordpress/url';\n\n/**\n * Internal Dependencies\n */\nimport { TAXONOMY, TAXONOMY_LABEL, POST_TYPE_LABEL } from '../constants';\n\nexport default async function createBlockArea(blockAreaName) {\n\tconst { saveEntityRecord } = dispatch(coreStore);\n\tconst slug = cleanForSlug(blockAreaName);\n\n\tconst newBlockArea = await saveEntityRecord('taxonomy', TAXONOMY, {\n\t\tname: blockAreaName,\n\t\tslug,\n\t});\n\tif (newBlockArea) {\n\t\tconsole.log('createBlockArea ->', newBlockArea);\n\t\treturn newBlockArea?.slug;\n\t}\n\n\treturn false;\n}\n","/**\n * External Dependencies\n */\nimport { EntityCreateNewModal } from '@prc/components';\n\n/**\n * Internal Dependencies\n */\nimport { createBlockModule } from '../../functions';\n\nexport default function CreateA({\n\tdefaultTitle = 'Block Module',\n\tblockAreaId,\n\tcategoryId,\n\tonCreate = () => {},\n\tsetNextStep,\n}) {\n\treturn (\n\t\t<EntityCreateNewModal\n\t\t\t{...{\n\t\t\t\tdefaultTitle,\n\t\t\t\tonClose: () => {\n\t\t\t\t\tsetNextStep('intro');\n\t\t\t\t},\n\t\t\t\tonSubmit: (newTitle) => {\n\t\t\t\t\tcreateBlockModule(\n\t\t\t\t\t\tnewTitle,\n\t\t\t\t\t\tblockAreaId,\n\t\t\t\t\t\tcategoryId,\n\t\t\t\t\t\t'publish'\n\t\t\t\t\t).then((response) => {\n\t\t\t\t\t\tconsole.log('then...', response);\n\t\t\t\t\t\tonCreate(response.id);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t}}\n\t\t/>\n\t);\n}\n","/**\n * External Dependencies\n */\nimport { EntityPatternModal } from '@prc/components';\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal Dependencies\n */\nimport { POST_TYPE, POST_TYPE_LABEL } from '../../constants';\n\n/**\n * Select a block module to statically display.\n * @param {Object}   props            Component props.\n * @param {Function} props.onSelect   Callback function to select a block module.\n * @param {Function} props.onClose    Callback function to close the modal.\n * @param {number}   props.selectedId The selected block module ID.\n * @param {number}   props.clientId   The block client ID.\n */\nexport default function SelectA({\n\tonSelect = () => {},\n\tonClose = () => {},\n\tselectedId = null,\n\tclientId,\n}) {\n\treturn (\n\t\t<EntityPatternModal\n\t\t\t{...{\n\t\t\t\ttitle: __('Choose a block module', 'prc-platform-core'),\n\t\t\t\tinstructions: __(\n\t\t\t\t\t'Choosing a block module will always display it, overriding any block area or category queries.',\n\t\t\t\t\t'prc-platform-core'\n\t\t\t\t),\n\t\t\t\tentityType: POST_TYPE,\n\t\t\t\tentityTypeLabel: POST_TYPE_LABEL,\n\t\t\t\tonSelect,\n\t\t\t\tonClose,\n\t\t\t\tclientId,\n\t\t\t\tselectedId,\n\t\t\t}}\n\t\t/>\n\t);\n}\n","/* eslint-disable max-lines-per-function */\n/**\n * WordPress Dependencies\n */\nimport { useMemo, useState } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { Button, Placeholder } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport { Intro, QueryA, QueryB, QueryC, SelectA, CreateA } from './steps';\nimport Icon from '../icon';\n\nconst STEPS = [\n\t'intro', // Choose \"Query by Block Area\", \"Select Specific Block Module\", or \"Create New Module\"\n\t'query-a', // We enter the query block area setup, first we either select or create a new block area slug.\n\t'query-b', // We either select the category slug, select inheirt category, or no category and thus we'd just pick whatever is most recent in the block area.\n\t'query-c', // We review the settings and then click finish.\n\t'create-a', // We enter the block module setup, we can give it a title and select whether it should publish immediately or at a future date (draft).\n\t'create-b', // We enter the block area setup, first we either select or create a new block area slug or we determine we don't want a block area, we explain that means we will only pull in this block module and then we set the ref.\n\t'create-c', // We review the settings and then click finish.\n\t'select-a', // We open a modal with the templateparts like selector. There is no revie stage here, we immediately set the ref and load the block module.\n];\n\nexport default function BlockAreaWizard({\n\tattributes,\n\tsetAttributes,\n\tblockModules,\n\tisResolving,\n\tcontext,\n\tclientId,\n}) {\n\tconst { templateSlug } = context;\n\tconst [blockAreaSlug, setBlockAreaSlug] = useState(\n\t\tattributes?.blockAreaSlug\n\t);\n\tconst [taxonomyName, setTaxonomyName] = useState(attributes?.taxonomyName);\n\tconst [taxonomyTermSlug, setTaxonomyTermSlug] = useState(\n\t\tattributes?.taxonomyTermSlug\n\t);\n\tconst [inheritTermFromTemplate, setInheritTermFromTemplate] = useState(\n\t\tattributes?.inheritTermFromTemplate\n\t);\n\tconst [allowTaxonomySelection, setAllowTaxonomySelection] = useState(false);\n\tconst toggleAllowTaxonomySelection = () => {\n\t\tsetAllowTaxonomySelection(!allowTaxonomySelection);\n\t};\n\n\tconst [activeStep, setActiveStep] = useState('intro');\n\tconst setNextStep = (nextStep) => {\n\t\tsetActiveStep(nextStep);\n\t};\n\tconst [buttonState, setButtonState] = useState({\n\t\tvariant: 'secondary',\n\t\tisLoading: false,\n\t\ttext: 'Next',\n\t\tonClick: null,\n\t\tdisabled: false,\n\t});\n\n\tconst [newBlockAreaName, setNewBlockAreaName] = useState(false);\n\n\tconst allowPrevious = useMemo(() => {\n\t\tswitch (activeStep) {\n\t\t\tcase 'intro':\n\t\t\t\treturn null;\n\t\t\tcase 'query-a':\n\t\t\t\treturn true;\n\t\t\tcase 'query-b':\n\t\t\t\treturn true;\n\t\t\tcase 'query-c':\n\t\t\t\treturn true;\n\t\t\tcase 'create-a':\n\t\t\t\treturn true;\n\t\t\tcase 'create-b':\n\t\t\t\treturn true;\n\t\t\tcase 'select-a':\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t}, [activeStep]);\n\n\treturn (\n\t\t<Placeholder\n\t\t\tlabel={__('Block Area', 'prc-platform-core')}\n\t\t\tisColumnLayout={true}\n\t\t\ticon={() => <Icon color={null} />}\n\t\t>\n\t\t\t<div className=\"block-area-edit__placeholder-inner\">\n\t\t\t\t{['intro', 'create-a'].includes(activeStep) && (\n\t\t\t\t\t<Intro\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\tisResolving,\n\t\t\t\t\t\t\tblockModules,\n\t\t\t\t\t\t\tbuttonState,\n\t\t\t\t\t\t\tsetButtonState,\n\t\t\t\t\t\t\tsetNextStep,\n\t\t\t\t\t\t\tisResolving,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{activeStep === 'query-a' && (\n\t\t\t\t\t<QueryA\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\tblockAreaSlug,\n\t\t\t\t\t\t\tsetBlockAreaSlug,\n\t\t\t\t\t\t\tnewBlockAreaName,\n\t\t\t\t\t\t\tsetNewBlockAreaName,\n\t\t\t\t\t\t\tsetNextStep,\n\t\t\t\t\t\t\tbuttonState,\n\t\t\t\t\t\t\tsetButtonState,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{activeStep === 'query-b' && (\n\t\t\t\t\t<QueryB\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\ttaxonomyName,\n\t\t\t\t\t\t\tsetTaxonomyName,\n\t\t\t\t\t\t\ttaxonomyTermSlug,\n\t\t\t\t\t\t\tsetTaxonomyTermSlug,\n\t\t\t\t\t\t\ttemplateSlug,\n\t\t\t\t\t\t\tallowTaxonomySelection,\n\t\t\t\t\t\t\tinheritTermFromTemplate,\n\t\t\t\t\t\t\ttoggleAllowTaxonomySelection,\n\t\t\t\t\t\t\tsetInheritTermFromTemplate,\n\t\t\t\t\t\t\tbuttonState,\n\t\t\t\t\t\t\tsetButtonState,\n\t\t\t\t\t\t\tsetNextStep,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{activeStep === 'query-c' && (\n\t\t\t\t\t<QueryC\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\tblockAreaSlug,\n\t\t\t\t\t\t\ttaxonomyName,\n\t\t\t\t\t\t\ttaxonomyTermSlug,\n\t\t\t\t\t\t\tinheritTermFromTemplate,\n\t\t\t\t\t\t\tnewBlockAreaName,\n\t\t\t\t\t\t\tsetAttributes,\n\t\t\t\t\t\t\tsetNextStep,\n\t\t\t\t\t\t\tbuttonState,\n\t\t\t\t\t\t\tsetButtonState,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{activeStep === 'select-a' && (\n\t\t\t\t\t<SelectA\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\tclientId,\n\t\t\t\t\t\t\tonSelect: ({ id }) => {\n\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\tref: id,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tonClose: () => {\n\t\t\t\t\t\t\t\tsetNextStep('intro');\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{activeStep === 'create-a' && (\n\t\t\t\t\t<CreateA\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\tonCreate: (id) => {\n\t\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\t\tref: id,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tsetNextStep,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{!['intro', 'create-a'].includes(activeStep) && (\n\t\t\t\t\t<div className=\"block-area-edit__toolbar\">\n\t\t\t\t\t\t{null !== allowPrevious && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\tdisabled={!allowPrevious}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tif (null !== allowPrevious) {\n\t\t\t\t\t\t\t\t\t\t// if activeStep is query-a we're going back to intro, if its query-b we're going back to query-a, if its query-c we're going back to query-b.\n\t\t\t\t\t\t\t\t\t\t// if activestep is create-a we're going back to intro, if its create-b we're going back to create-a.\n\t\t\t\t\t\t\t\t\t\t// if activeStep is select-a we're going back to intro.\n\t\t\t\t\t\t\t\t\t\tif ('intro' === activeStep) {\n\t\t\t\t\t\t\t\t\t\t\tsetActiveStep('intro');\n\t\t\t\t\t\t\t\t\t\t} else if ('query-a' === activeStep) {\n\t\t\t\t\t\t\t\t\t\t\tsetActiveStep('intro');\n\t\t\t\t\t\t\t\t\t\t} else if ('query-b' === activeStep) {\n\t\t\t\t\t\t\t\t\t\t\tsetActiveStep('query-a');\n\t\t\t\t\t\t\t\t\t\t} else if ('query-c' === activeStep) {\n\t\t\t\t\t\t\t\t\t\t\tsetActiveStep('query-b');\n\t\t\t\t\t\t\t\t\t\t} else if ('create-a' === activeStep) {\n\t\t\t\t\t\t\t\t\t\t\tsetActiveStep('intro');\n\t\t\t\t\t\t\t\t\t\t} else if ('create-b' === activeStep) {\n\t\t\t\t\t\t\t\t\t\t\tsetActiveStep('create-a');\n\t\t\t\t\t\t\t\t\t\t} else if ('select-a' === activeStep) {\n\t\t\t\t\t\t\t\t\t\t\tsetActiveStep('intro');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={buttonState.variant}\n\t\t\t\t\t\t\tdisabled={buttonState.disabled}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (null !== buttonState.onClick) {\n\t\t\t\t\t\t\t\t\tbuttonState.onClick();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{buttonState.text}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Placeholder>\n\t);\n}\n","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nexport default [\n\t{\n\t\tname: 'topic-block-area',\n\t\tisDefault: true,\n\t\ttitle: __('Topic Block Area'),\n\t\tdescription: __('The default block area, queries by topic category.'),\n\t\tattributes: { taxonomyName: 'category' },\n\t\tscope: ['inserter', 'transform'],\n\t\tisActive: (blockAttributes, variationAttributes) =>\n\t\t\tvariationAttributes.taxonomyName === blockAttributes.taxonomyName,\n\t},\n\t{\n\t\tname: 'regions-countries-block-area',\n\t\ttitle: __('Regions Countries Block Area'),\n\t\tdescription: __(\n\t\t\t'This block area queries by regions and countries taxonomy.'\n\t\t),\n\t\tattributes: { taxonomyName: 'regions-countries' },\n\t\tscope: ['inserter', 'transform'],\n\t\tisActive: (blockAttributes, variationAttributes) =>\n\t\t\tvariationAttributes.taxonomyName === blockAttributes.taxonomyName,\n\t},\n\t{\n\t\tname: 'collections-block-area',\n\t\ttitle: __('Collections Block Area'),\n\t\tdescription: __(\n\t\t\t'This block area queries by collections and countries taxonomy.'\n\t\t),\n\t\tattributes: { taxonomyName: 'collection' },\n\t\tscope: ['inserter', 'transform'],\n\t\tisActive: (blockAttributes, variationAttributes) =>\n\t\t\tvariationAttributes.taxonomyName === blockAttributes.taxonomyName,\n\t},\n];\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\n\n/**\n * WordPress Dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\nimport './editor.scss';\nimport './style.scss';\nimport deprecated from './deprecated';\nimport icon from './icon';\nimport edit from './edit';\nimport variations from './variations';\nimport metadata from './block.json';\n\nconst { name } = metadata;\n\nconst settings = {\n\ticon,\n\tedit,\n\tvariations,\n\tdeprecated,\n};\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType(name, { ...metadata, ...settings });\n","/* eslint-disable max-lines-per-function */\n/* eslint-disable @wordpress/no-unsafe-wp-apis */\n/**\n * External Dependencies\n */\nimport { InnerBlocksAsSyncedContent } from '@prc/components';\n\n/**\n * WordPress Dependencies\n */\nimport { useMemo, useState } from '@wordpress/element';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport { useDispatch } from '@wordpress/data';\n\n/**\n * Internal Dependencies\n */\nimport { useBlockModules, useTaxonomyInfo } from './hooks';\nimport { POST_TYPE, POST_TYPE_LABEL } from './constants';\n\nimport InspectorControls from './inspector-controls';\nimport BlockAreaWizard from './block-area-wizard';\nimport BlockModuleCreate from './block-module-create';\n\nexport default function Edit({ attributes, setAttributes, clientId, context }) {\n\tconst {\n\t\tref,\n\t\tblockAreaSlug,\n\t\ttaxonomyName,\n\t\ttaxonomyTermSlug,\n\t\tinheritTermFromTemplate,\n\t} = attributes;\n\tconst { templateSlug } = context;\n\n\tconst [postStatus, setPostStatus] = useState('publish');\n\tconst { setPostIds } = useDispatch('prc-platform/block-area-context');\n\n\t// Theres a lot going on here so we want to optimize performance as much as possible. Below are a lot of useMemo calls to memoize the values these happen in the order they are used in the component, do not change the order.\n\n\tconst isTaxonomyTemplate = useMemo(() => {\n\t\treturn (\n\t\t\tundefined !== templateSlug &&\n\t\t\ttemplateSlug.includes(`${taxonomyName}-`)\n\t\t);\n\t}, [templateSlug]);\n\n\t// If we are inheriting the term from the template we need to set the term slug to the template slug.\n\tconst taxTermSlug = useMemo(() => {\n\t\tif (\n\t\t\ttrue === inheritTermFromTemplate &&\n\t\t\t!taxonomyTermSlug &&\n\t\t\tisTaxonomyTemplate\n\t\t) {\n\t\t\treturn templateSlug.replace(`${taxonomyName}-`, '');\n\t\t}\n\t\treturn taxonomyTermSlug || false;\n\t}, [\n\t\tinheritTermFromTemplate,\n\t\tisTaxonomyTemplate,\n\t\ttemplateSlug,\n\t\ttaxonomyTermSlug,\n\t]);\n\n\tconst { blockAreaName, blockAreaId, taxonomyTermName, taxonomyTermId } =\n\t\tuseTaxonomyInfo(blockAreaSlug, taxonomyName, taxTermSlug);\n\n\tconst blockArea = useMemo(() => {\n\t\treturn {\n\t\t\tid: blockAreaId,\n\t\t\tname: blockAreaName,\n\t\t\tslug: blockAreaSlug,\n\t\t};\n\t}, [blockAreaId, blockAreaName, blockAreaSlug]);\n\n\tconst taxonomy = useMemo(() => {\n\t\treturn {\n\t\t\tid: taxonomyTermId,\n\t\t\tname: taxonomyTermName,\n\t\t\tslug: taxonomyTermSlug,\n\t\t};\n\t}, [taxonomyTermId, taxonomyTermName, taxonomyTermSlug]);\n\n\tconst { blockModules, hasResolved, isResolving } = useBlockModules({\n\t\tenabled: true,\n\t\tblockAreaId: blockArea?.id,\n\t\ttaxonomyTermId: taxonomy?.id,\n\t\ttaxonomyName,\n\t\tref,\n\t\targs: { status: postStatus },\n\t});\n\n\t/**\n\t * This gets the first id from the blockModules array and sets it as the blockModuleId.\n\t */\n\tconst blockModuleId = useMemo(() => {\n\t\tif (blockModules && blockModules.length) {\n\t\t\treturn blockModules[0].id;\n\t\t}\n\t\treturn null;\n\t}, [blockModules]);\n\n\tconst blockModule = useMemo(() => {\n\t\tif (blockModuleId) {\n\t\t\tconst match = blockModules.find(\n\t\t\t\t(blockModule) => blockModule.id === blockModuleId\n\t\t\t);\n\t\t\tconsole.log('Matching block_module :', match, blockModules);\n\t\t\treturn {\n\t\t\t\tid: blockModuleId,\n\t\t\t\tname: match?.title?.rendered,\n\t\t\t\tslug: match?.slug,\n\t\t\t};\n\t\t}\n\t\treturn null;\n\t}, [blockModuleId, blockModules]);\n\n\tconst blockProps = useBlockProps();\n\n\tconst isInSetup = useMemo(() => {\n\t\tconsole.log(\n\t\t\t'isInSetup',\n\t\t\tblockModuleId,\n\t\t\tref,\n\t\t\tblockAreaSlug,\n\t\t\ttaxonomyName,\n\t\t\ttaxonomyTermSlug,\n\t\t\tattributes\n\t\t);\n\t\tif (null !== blockModuleId && ref) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!blockAreaSlug) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}, [hasResolved, blockModuleId, blockAreaSlug, taxonomyTermSlug, ref]);\n\n\tif (isInSetup) {\n\t\treturn (\n\t\t\t<div {...blockProps}>\n\t\t\t\t<BlockAreaWizard\n\t\t\t\t\t{...{\n\t\t\t\t\t\tattributes,\n\t\t\t\t\t\tsetAttributes,\n\t\t\t\t\t\tblockModules,\n\t\t\t\t\t\tisResolving,\n\t\t\t\t\t\tclientId,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\tisTaxonomyTemplate,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<InnerBlocksAsSyncedContent\n\t\t\t{...{\n\t\t\t\tpostId: blockModuleId,\n\t\t\t\tpostType: POST_TYPE,\n\t\t\t\tpostTypeLabel: POST_TYPE_LABEL,\n\t\t\t\tblockProps,\n\t\t\t\tclientId,\n\t\t\t\tallowDetach: true,\n\t\t\t\tisMissingChildren: () => (\n\t\t\t\t\t<BlockModuleCreate\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\tblockAreaId,\n\t\t\t\t\t\t\ttaxonomyName,\n\t\t\t\t\t\t\ttaxonomyTermId,\n\t\t\t\t\t\t\tsetAttributes,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t),\n\t\t\t\tcollector: (newRecord) => {\n\t\t\t\t\t// The collector prop runs after all records have been fetched and can be used to pass data back up to the parent component or for this example post meta back up into the editor global data-store.\n\t\t\t\t\tif (newRecord) {\n\t\t\t\t\t\tconst storyItemIds = newRecord?._story_item_ids;\n\t\t\t\t\t\tsetPostIds(storyItemIds);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t}}\n\t\t>\n\t\t\t<InspectorControls\n\t\t\t\t{...{\n\t\t\t\t\tattributes,\n\t\t\t\t\tsetAttributes,\n\t\t\t\t\tclientId,\n\t\t\t\t\tblockArea,\n\t\t\t\t\ttaxonomy,\n\t\t\t\t\tblockModule,\n\t\t\t\t\tpostStatus,\n\t\t\t\t\tsetPostStatus,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</InnerBlocksAsSyncedContent>\n\t);\n}\n","/**\n * External Dependencies\n */\nimport { useTaxonomy } from '@prc/hooks';\n\n/**\n * Internal Dependencies\n */\nimport { TAXONOMY } from '../constants';\n\n/**\n * Given a block area slug and category slug this function\n * returns the block area id and name as well as the given taxonomies id and name.\n * @param {string} blockAreaSlug    The block area slug.\n * @param {string} taxonomyName     The taxonomy name.\n * @param {string} taxonomyTermSlug The taxonomy term slug.\n * @return {Object} The block area id and name as well as the taxonomy id and name.\n */\nexport default function useTaxonomyInfo(\n\tblockAreaSlug = null,\n\ttaxonomyName = null,\n\ttaxonomyTermSlug = null\n) {\n\tlet taxRestName = taxonomyName;\n\tif (taxonomyName === 'category') {\n\t\ttaxRestName = 'categories';\n\t}\n\tconst [taxId, taxName] = useTaxonomy(taxRestName, taxonomyTermSlug);\n\tconst [blockAreaId, blockAreaName] = useTaxonomy(TAXONOMY, blockAreaSlug);\n\tconsole.log(\n\t\t'useTaxonomyInfo',\n\t\tblockAreaSlug,\n\t\ttaxonomyName,\n\t\ttaxonomyTermSlug,\n\t\ttaxId,\n\t\ttaxName,\n\t\tblockAreaId,\n\t\tblockAreaName\n\t);\n\n\treturn {\n\t\tblockAreaId,\n\t\tblockAreaName,\n\t\ttaxonomyTermId: taxId,\n\t\ttaxonomyTermName: taxName,\n\t};\n}\n","/**\n * External dependencies\n */\n\n/**\n * WordPress dependencies\n */\nimport { useEntityRecords } from '@wordpress/core-data';\nimport { useMemo } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { POST_TYPE_REST_BASE, TAXONOMY } from '../constants';\n\n/**\n * Retrieves all available block modules. Optionally excludes a single block module by id.\n * @param {Object}  options                Options object.\n * @param {number}  options.blockAreaId    The block area id.\n * @param {number}  options.taxonomyTermId The term id.\n * @param {string}  options.taxonomy       The taxonomy name.\n * @param {number}  options.ref            The block module id to include.\n * @param {number}  options.excludeId      The block module id to exclude.\n * @param {boolean} options.enabled        Whether the hook is enabled.\n * @param {Object}  options.args           Additional query arguments.\n * @param           options.categoryId\n * @param           options.taxonomyName\n * @return {Object} The block modules and related data.\n */\nexport default function useBlockModules({\n\tblockAreaId = null,\n\ttaxonomyTermId = null,\n\ttaxonomyName = null,\n\tref = null,\n\texcludeId = null,\n\tenabled = false,\n\targs = {},\n}) {\n\tconst queryArgs = {\n\t\tcontext: 'view',\n\t\torderby: 'date',\n\t\torder: 'desc',\n\t\tper_page: 25,\n\t};\n\tif (null !== blockAreaId) {\n\t\tqueryArgs[TAXONOMY] = [blockAreaId];\n\t}\n\tif (null !== taxonomyTermId) {\n\t\tlet taxName = taxonomyName;\n\t\tif (taxonomyName === 'category') {\n\t\t\ttaxName = 'categories';\n\t\t}\n\t\tqueryArgs[taxName] = [taxonomyTermId];\n\t}\n\tif (blockAreaId && taxonomyTermId) {\n\t\tqueryArgs.tax_relation = 'AND';\n\t}\n\tif (null !== ref) {\n\t\tqueryArgs.include = [ref];\n\t}\n\n\tconsole.log('postStatus', queryArgs, {taxonomyName, taxonomyTermId, blockAreaId});\n\n\tconst { hasResolved, isResolving, records, status } = useEntityRecords(\n\t\t'postType',\n\t\tPOST_TYPE_REST_BASE,\n\t\t{ ...queryArgs, ...args },\n\t\t{ enabled }\n\t);\n\n\t// Filter out any block modules that have the same id as the excluded block module.\n\tconst filteredBlockModules = useMemo(() => {\n\t\tif (!records) {\n\t\t\treturn [];\n\t\t}\n\t\treturn (\n\t\t\trecords.filter((blockModule) => blockModule.id !== excludeId) || []\n\t\t);\n\t}, [records, excludeId]);\n\n\treturn {\n\t\tblockModules: filteredBlockModules,\n\t\tisResolving,\n\t\thasResolved,\n\t};\n}\n","/**\n * Use this file to upgrade block attributes from older versions of the block.\n */\nconst deprecated = [\n\t{\n\t\tattributes: {\n\t\t\tcategorySlug: {\n\t\t\t\ttype: 'string',\n\t\t\t},\n\t\t\tinheritCategory: {\n\t\t\t\ttype: 'boolean',\n\t\t\t},\n\t\t},\n\t\tmigrate({ categorySlug, inheritCategory }) {\n\t\t\treturn {\n\t\t\t\ttaxonomyName: 'category',\n\t\t\t\ttaxonomyTermSlug: categorySlug,\n\t\t\t\tinheritFromTemplate: inheritCategory,\n\t\t\t};\n\t\t},\n\t},\n];\n\nexport default deprecated;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t57: 0,\n\t350: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunk_pewresearch_prc_platform_block_area_modules\"] = globalThis[\"webpackChunk_pewresearch_prc_platform_block_area_modules\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [350], () => (__webpack_require__(432)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","window","forwardRef","icon","size","props","ref","cloneElement","width","height","createElement","SVG","xmlns","viewBox","Path","d","IconSymbolFilled","color","Icon","symbolFilled","style","TAXONOMY","TAXONOMY_LABEL","TAXONOMY_REST_BASE","POST_TYPE","POST_TYPE_LABEL","BlockAreaControl","attributes","setAttributes","blockArea","postStatus","setPostStatus","metadata","id","name","slug","blockAreaName","setBlockAreaName","useEntityProp","useEffect","Fragment","FlexBlock","TextControl","label","value","onChange","ToggleControl","__","checked","help","Button","isDestructive","variant","onClick","blockAreaSlug","categorySlug","inheritCategory","async","createBlockModule","blockModuleTitle","blockAreaId","taxonomyName","taxonomyTermId","status","args","title","saveEntityRecord","dispatch","coreStore","newBlockModule","console","log","BlockModuleCreate","displayModal","setDisplayModal","useState","EntityCreateNewModal","defaultTitle","onClose","onSubmit","newTitle","then","response","BlockModuleControl","taxonomy","blockModule","taxonomyId","setBlockModuleTitle","blockModuleLink","__nextHasNoMarginBottom","TaxonomyControl","inheritTermFromTemplate","taxonomyTermSlug","termValue","useMemo","TermSelect","maxTerms","Controls","clientId","InspectorControls","PanelBody","initialOpen","Flex","direction","gap","Step","children","className","Intro","isResolving","blockModules","setNextStep","Spinner","length","CreateNewButton","setButtonState","buttonState","setCreateNewBlockArea","text","disabled","CreateNewField","setNewBlockAreaName","newBlockAreaName","debouncedBlockAreaName","useDebounce","QueryA","setBlockAreaSlug","tempBlockAreaSlug","setTempBlockAreaSlug","useTaxonomy","createNewBlockArea","buttonArgs","createNewButton","WPEntitySearch","placeholder","searchLabel","entityType","entitySubType","entityId","searchValue","onSelect","entity","onKeyEnter","onKeyESC","perPage","showExcerpt","createNew","QueryB","setTaxonomyName","setTaxonomyTermSlug","templateSlug","allowTaxonomySelection","toggleAllowTaxonomySelection","setInheritTermFromTemplate","isTaxonomyTemplate","undefined","includes","templateSlugCleaned","replace","templateTermId","templateTermName","termId","termName","newButtonargs","BaseControl","QueryC","preConfirm","setPreConfirm","confirm","setConfirm","newAttrs","cleanForSlug","newBlockArea","createBlockArea","newBlockAreaSlug","CreateA","categoryId","onCreate","SelectA","selectedId","EntityPatternModal","instructions","entityTypeLabel","BlockAreaWizard","context","setAllowTaxonomySelection","activeStep","setActiveStep","nextStep","isLoading","allowPrevious","Placeholder","isColumnLayout","isDefault","description","scope","isActive","blockAttributes","variationAttributes","settings","edit","setPostIds","useDispatch","taxTermSlug","taxonomyTermName","taxRestName","taxId","taxName","useTaxonomyInfo","hasResolved","excludeId","enabled","queryArgs","orderby","order","per_page","tax_relation","include","records","useEntityRecords","filter","useBlockModules","blockModuleId","match","find","rendered","blockProps","useBlockProps","InnerBlocksAsSyncedContent","postId","postType","postTypeLabel","allowDetach","isMissingChildren","collector","newRecord","storyItemIds","_story_item_ids","variations","deprecated","type","migrate","inheritFromTemplate","registerBlockType","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","o","obj","prop","prototype","hasOwnProperty","call","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","globalThis","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}