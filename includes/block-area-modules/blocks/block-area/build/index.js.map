{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"blocks\"]","webpack://@pewresearch/prc-platform-block-area-modules/external window \"React\"","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"element\"]","webpack://@pewresearch/prc-platform-block-area-modules/./node_modules/@wordpress/icons/build-module/icon/index.js","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"primitives\"]","webpack://@pewresearch/prc-platform-block-area-modules/./node_modules/@wordpress/icons/build-module/library/symbol-filled.js","webpack://@pewresearch/prc-platform-block-area-modules/./src/icon.jsx","webpack://@pewresearch/prc-platform-block-area-modules/external window \"prcComponents\"","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"i18n\"]","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"blockEditor\"]","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"data\"]","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"coreData\"]","webpack://@pewresearch/prc-platform-block-area-modules/./src/constants.js","webpack://@pewresearch/prc-platform-block-area-modules/external window \"prcHooks\"","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"components\"]","webpack://@pewresearch/prc-platform-block-area-modules/./src/inspector-controls/block-area.jsx","webpack://@pewresearch/prc-platform-block-area-modules/external window [\"wp\",\"url\"]","webpack://@pewresearch/prc-platform-block-area-modules/./src/functions/create-block-module.js","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-module-create.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/inspector-controls/block-module.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/inspector-controls/category.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/inspector-controls/index.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-area-wizard/steps/_step.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-area-wizard/steps/intro.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-area-wizard/steps/query-a.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-area-wizard/steps/query-b.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-area-wizard/steps/query-c.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/functions/create-block-area.js","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-area-wizard/steps/create-a.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-area-wizard/steps/select-a.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/block-area-wizard/index.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/index.js","webpack://@pewresearch/prc-platform-block-area-modules/./src/edit.jsx","webpack://@pewresearch/prc-platform-block-area-modules/./src/hooks/use-taxonomy-info.js","webpack://@pewresearch/prc-platform-block-area-modules/./src/hooks/use-block-modules.js"],"sourcesContent":["const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blocks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"element\"];","/**\n * WordPress dependencies\n */\nimport { cloneElement, forwardRef } from '@wordpress/element';\n\n/** @typedef {{icon: JSX.Element, size?: number} & import('@wordpress/primitives').SVGProps} IconProps */\n\n/**\n * Return an SVG icon.\n *\n * @param {IconProps}                                 props icon is the SVG component to render\n *                                                          size is a number specifiying the icon size in pixels\n *                                                          Other props will be passed to wrapped SVG component\n * @param {import('react').ForwardedRef<HTMLElement>} ref   The forwarded ref to the SVG element.\n *\n * @return {JSX.Element}  Icon component\n */\nfunction Icon({\n  icon,\n  size = 24,\n  ...props\n}, ref) {\n  return cloneElement(icon, {\n    width: size,\n    height: size,\n    ...props,\n    ref\n  });\n}\nexport default forwardRef(Icon);\n//# sourceMappingURL=index.js.map","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"primitives\"];","import { createElement } from \"react\";\n/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nconst symbolFilled = createElement(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\"\n}, createElement(Path, {\n  d: \"M21.3 10.8l-5.6-5.6c-.7-.7-1.8-.7-2.5 0l-5.6 5.6c-.7.7-.7 1.8 0 2.5l5.6 5.6c.3.3.8.5 1.2.5s.9-.2 1.2-.5l5.6-5.6c.8-.7.8-1.9.1-2.5zm-17.6 1L10 5.5l-1-1-6.3 6.3c-.7.7-.7 1.8 0 2.5L9 19.5l1.1-1.1-6.3-6.3c-.2 0-.2-.2-.1-.3z\"\n}));\nexport default symbolFilled;\n//# sourceMappingURL=symbol-filled.js.map","/**\n * External Dependencies\n */\nimport { symbolFilled, Icon } from '@wordpress/icons';\n\nexport default function IconSymbolFilled({color = '#02b5d5'}) {\n\treturn <Icon icon={ symbolFilled } style={{\n\t\tcolor\n\t}}/>;\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcComponents\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"i18n\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"blockEditor\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"data\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"coreData\"];","// Taxonomy\nexport const TAXONOMY = 'block_area';\nexport const TAXONOMY_LABEL = 'Block Area';\nexport const TAXONOMY_REST_BASE = 'block_area';\n// Post Type\nexport const POST_TYPE = 'block_module';\nexport const POST_TYPE_LABEL = 'Block Module';\nexport const POST_TYPE_REST_BASE = 'block_module';\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"prcHooks\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"components\"];","/**\n * WordPress Dependencies\n */\nimport { Fragment, useEffect } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { TextControl, Button, ToggleControl, FlexBlock, FlexItem, CardDivider } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport { TAXONOMY, TAXONOMY_LABEL } from '../constants';\n\nexport default function BlockAreaControl({\n\tattributes,\n\tsetAttributes,\n\tblockArea,\n\tpostStatus,\n\tsetPostStatus\n}) {\n\tconst { metadata, ref } = attributes;\n\n\tconst {id, name, slug} = blockArea;\n\n\t// Block Area:\n\tconst [blockAreaName, setBlockAreaName] = useEntityProp('taxonomy', TAXONOMY, 'name', id);\n\n\t// This will check if the block area already has a label in the block editor and if not, it will set it to the block area name.\n\tuseEffect(() => {\n\t\tif (! metadata?.name && blockAreaName) {\n\t\t\tsetAttributes({\n\t\t\t\tmetadata: {\n\t\t\t\t\t...metadata,\n\t\t\t\t\tname: blockAreaName,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}, [metadata, blockAreaName]);\n\n\tif (!id) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<FlexBlock>\n\t\t\t\t<TextControl\n\t\t\t\t\tlabel={__(`${TAXONOMY_LABEL} Name`)}\n\t\t\t\t\tvalue={blockAreaName}\n\t\t\t\t\tonChange={setBlockAreaName}\n\t\t\t\t/>\n\t\t\t</FlexBlock>\n\t\t\t<FlexBlock>\n\t\t\t\t<ToggleControl\n\t\t\t\t\tlabel={__('Preview Latest Draft Module', 'prc-platform-core')}\n\t\t\t\t\tchecked={'draft' === postStatus}\n\t\t\t\t\thelp={__('This will allow you to preview and edit the latest draft module in the block area. This will not be visible on the front end, the latest published module will always be visible.', 'prc-platform-core')}\n\t\t\t\t\tonChange={(value) => {\n\t\t\t\t\t\tsetPostStatus(value ? 'draft' : 'publish');\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</FlexBlock>\n\t\t\t<FlexBlock>\n\t\t\t\t<Button\n\t\t\t\t\tisDestructive\n\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\tref: null,\n\t\t\t\t\t\t\tblockAreaSlug: null,\n\t\t\t\t\t\t\tcategorySlug: null,\n\t\t\t\t\t\t\tinheritCategory: null,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t{__('Reset Block Area')}\n\t\t\t\t</Button>\n\t\t\t</FlexBlock>\n\t\t</Fragment>\n\t);\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"wp\"][\"url\"];","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { dispatch } from '@wordpress/data';\n\n/**\n * Internal Dependencies\n */\nimport { POST_TYPE, POST_TYPE_LABEL, TAXONOMY, TAXONOMY_REST_BASE } from '../constants';\n\nexport default async function createBlockModule(blockModuleTitle, blockAreaId, categoryId, status = 'publish') {\n\tconst args = {\n\t\ttitle: blockModuleTitle,\n\t\tstatus,\n\t};\n\tif (blockAreaId) {\n\t\targs[TAXONOMY_REST_BASE] = [blockAreaId];\n\t}\n\tif (categoryId) {\n\t\targs['categories'] = [categoryId];\n\t}\n\n\tconst { saveEntityRecord } = dispatch(coreStore);\n\n\tconst newBlockModule = await saveEntityRecord(\n\t\t'postType',\n\t\tPOST_TYPE,\n\t\targs\n\t);\n\n\tif ( newBlockModule ) {\n\t\tconsole.log('onCreateBlockModule', newBlockModule);\n\t\treturn newBlockModule;\n\t}\n\n\treturn false;\n}\n","/**\n * External Dependencies\n */\nimport { EntityCreateNewModal } from '@prc/components';\n\n/**\n * WordPress Dependencies\n */\nimport { useState, Fragment } from 'react';\nimport { Button, ButtonGroup } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport { createBlockModule } from './functions';\n\nexport default function BlockModuleCreate({\n\tblockAreaId,\n\tcategoryId,\n\tsetAttributes,\n}){\n\tconst [displayModal, setDisplayModal] = useState(false);\n\n\treturn(\n\t\t<Fragment>\n\t\t\t<Button\n\t\t\t\tvariant=\"secondary\"\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetDisplayModal(!displayModal);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tCreate New Block Module\n\t\t\t</Button>\n\t\t\t{displayModal && (\n\t\t\t\t<EntityCreateNewModal {...{\n\t\t\t\t\tdefaultTitle: 'Block Module',\n\t\t\t\t\tonClose: () => {\n\t\t\t\t\t\tsetDisplayModal(false);\n\t\t\t\t\t},\n\t\t\t\t\tonSubmit: (newTitle) => {\n\t\t\t\t\t\tcreateBlockModule(newTitle, blockAreaId, categoryId, 'publish').then((response) => {\n\t\t\t\t\t\t\tconsole.log(\"then...\", response);\n\t\t\t\t\t\t\tsetAttributes({ref: response.id});\n\t\t\t\t\t\t});\n\t\t\t\t\t},\n\t\t\t\t}}/>\n\t\t\t)}\n\t\t</Fragment>\n\t);\n}\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { Fragment, useEffect } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { Button, TextControl, PanelBody, ExternalLink, Flex, FlexBlock, FlexItem, CardDivider } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport { POST_TYPE, POST_TYPE_LABEL } from '../constants';\nimport BlockModuleCreate from '../block-module-create';\n\nexport default function BlockModuleControl({\n\tsetAttributes,\n\tblockArea,\n\tcategory,\n\tblockModule\n}) {\n\tconst {id, name, slug} = blockModule;\n\n\tconst blockAreaId = blockArea?.id;\n\tconst categoryId = category?.id;\n\n\t// Block Module:\n\tconst [blockModuleTitle, setBlockModuleTitle] = useEntityProp('postType', POST_TYPE, 'title', id);\n\tconst [blockModuleLink] = useEntityProp('postType', POST_TYPE, 'link', id);\n\n\tif (!id) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<FlexBlock>\n\t\t\t\t<TextControl\n\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\tlabel={__(`${POST_TYPE_LABEL} Title`)}\n\t\t\t\t\tvalue={blockModuleTitle}\n\t\t\t\t\tonChange={setBlockModuleTitle}\n\t\t\t\t/>\n\t\t\t</FlexBlock>\n\t\t\t<FlexBlock>\n\t\t\t\t<BlockModuleCreate\n\t\t\t\t\t{...{\n\t\t\t\t\t\tblockAreaId,\n\t\t\t\t\t\tcategoryId,\n\t\t\t\t\t\tsetAttributes,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</FlexBlock>\n\t\t</Fragment>\n\t);\n}\n","/**\n * External Dependencies\n */\nimport { TermSelect } from '@prc/components';\n\n/**\n * WordPress Dependencies\n */\nimport { Fragment, useEffect, useMemo } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { TextControl, ToggleControl, ExternalLink, Flex, FlexBlock, FlexItem, CardDivider } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\n\nexport default function CategoryControl({\n\tattributes,\n\tsetAttributes,\n\tcategory\n}) {\n\tconst {id, name, slug} = category;\n\n\tconst {inheritCategory, categorySlug} = attributes;\n\n\tconst categoryValue = useMemo(() => {\n\t\tif (!id) {\n\t\t\treturn [];\n\t\t}\n\t\treturn [\n\t\t\t{\n\t\t\t\tvalue: slug,\n\t\t\t\ttitle: name,\n\t\t\t}\n\t\t];\n\t}, [id, name, slug]);\n\n\treturn (\n\t\t<FlexBlock>\n\t\t\t<ToggleControl\n\t\t\t\tlabel={__('Inherit Category', 'prc-platform-core')}\n\t\t\t\tchecked={inheritCategory}\n\t\t\t\tonChange={(value) => {\n\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\tinheritCategory: value,\n\t\t\t\t\t\tcategorySlug: true === value ? null : categorySlug,\n\t\t\t\t\t});\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t{!inheritCategory && (\n\t\t\t\t<TermSelect {...{\n\t\t\t\t\tonChange: (value) => {\n\t\t\t\t\t\tconsole.log(\"onChange...\", value);\n\t\t\t\t\t\t// if value is empty we shoudl setCategory to null\n\t\t\t\t\t\tif (!value) {\n\t\t\t\t\t\t\tsetAttributes({categorySlug: null});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsetAttributes({categorySlug: value.slug});\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\ttaxonomy: 'category',\n\t\t\t\t\tvalue: categoryValue,\n\t\t\t\t\tmaxTerms: 1,\n\t\t\t\t}}/>\n\t\t\t)}\n\t\t</FlexBlock>\n\t);\n}\n","/**\n * External Dependencies\n */\n\n/**\n * WordPress Dependencies\n */\nimport { Fragment, useEffect } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport { InspectorControls } from '@wordpress/block-editor';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { Button, TextControl, PanelBody, ExternalLink, Flex, FlexBlock, FlexItem, CardDivider } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport BlockAreaControl from './block-area';\nimport BlockModuleControl from './block-module';\nimport CategoryControl from './category';\n\nexport default function Controls({\n\tattributes,\n\tsetAttributes,\n\tclientId,\n\tblockArea,\n\tcategory,\n\tblockModule,\n\tpostStatus,\n\tsetPostStatus,\n}) {\n\tconst {ref} = attributes;\n\treturn (\n\t\t<InspectorControls>\n\t\t\t{!ref && (\n\t\t\t\t<Fragment>\n\t\t\t\t\t<PanelBody title={__('Block Area')} initialOpen={true}>\n\t\t\t\t\t\t<Flex direction=\"column\" gap={'10px'}>\n\t\t\t\t\t\t\t<BlockAreaControl\n\t\t\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\t\t\tattributes,\n\t\t\t\t\t\t\t\t\tsetAttributes,\n\t\t\t\t\t\t\t\t\tblockArea,\n\t\t\t\t\t\t\t\t\tblockModule,\n\t\t\t\t\t\t\t\t\tpostStatus,\n\t\t\t\t\t\t\t\t\tsetPostStatus,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t\t<PanelBody title={__('Category')} initialOpen={true}>\n\t\t\t\t\t\t<Flex direction=\"column\" gap={'10px'}>\n\t\t\t\t\t\t\t<CategoryControl\n\t\t\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\t\t\tattributes,\n\t\t\t\t\t\t\t\t\tsetAttributes,\n\t\t\t\t\t\t\t\t\tcategory,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</PanelBody>\n\t\t\t\t</Fragment>\n\t\t\t)}\n\t\t\t<PanelBody title={__('Block Module')} initialOpen={true}>\n\t\t\t\t<Flex direction=\"column\" gap={'10px'}>\n\t\t\t\t\t<BlockModuleControl\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\tsetAttributes,\n\t\t\t\t\t\t\tblockArea,\n\t\t\t\t\t\t\tcategory,\n\t\t\t\t\t\t\tblockModule,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Flex>\n\t\t\t</PanelBody>\n\t\t</InspectorControls>\n\t);\n}\n","export default function Step(props) {\n\treturn(\n\t\t<div className='block-area-edit__step'>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n}\n","/**\n * WordPress Dependencies\n */\nimport { Fragment, useEffect, useMemo, useState } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport { Button, Spinner } from '@wordpress/components';\n\nimport Step from './_step';\n\nexport default function Intro({\n\tisResolving,\n\tblockModules = [],\n\tsetNextStep,\n}) {\n\treturn(\n\t\t<Step>\n\t\t\t<p>You can configure a block area to dynamically query the latest module. You can also restrict it by category. Alternatively, you can choose an existing block module or create a new one.</p>\n\t\t\t{ isResolving && <Spinner /> }\n\t\t\t{ ! isResolving && (\n\t\t\t\t<Button variant=\"primary\" onClick={ () => setNextStep('query-a') }>\n\t\t\t\t\t{ __( 'Configure Area' ) }\n\t\t\t\t</Button>\n\t\t\t) }\n\n\t\t\t{ ! isResolving &&\n\t\t\t\t!! ( blockModules.length ) && (\n\t\t\t\t\t<Button variant=\"secondary\" onClick={ () => setNextStep('select-a') }>\n\t\t\t\t\t\t{ __( 'Choose Module' ) }\n\t\t\t\t\t</Button>\n\t\t\t\t) }\n\n\t\t\t{ ! isResolving && (\n\t\t\t\t<Button variant=\"secondary\" onClick={ () => setNextStep('create-a') }>\n\t\t\t\t\t{ __( 'Start Blank Module' ) }\n\t\t\t\t</Button>\n\t\t\t) }\n\t\t</Step>\n\t);\n}\n","/**\n * External Dependencies\n */\nimport { WPEntitySearch } from '@prc/components';\nimport { useDebounce } from '@prc/hooks';\nimport { useTaxonomy } from '@prc/hooks';\n\n/**\n * WordPress Dependencies\n */\nimport { useState, useEffect } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport { Button, TextControl } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport Step from './_step';\nimport { TAXONOMY, TAXONOMY_LABEL } from '../../constants';\n\nconst CreateNewButton = ({setButtonState, buttonState, setCreateNewBlockArea}) => {\n\tuseEffect(() => {\n\t\tsetButtonState({\n\t\t\t...buttonState,\n\t\t\ttext: 'Create New Block Area',\n\t\t\tdisabled: false,\n\t\t\tonClick: () => setCreateNewBlockArea(true),\n\t\t});\n\t}, []);\n\n\treturn(\n\t\t<span>No Block Area could be found with that name, please create a new one.</span>\n\t);\n};\n\nconst CreateNewField = ({setNewBlockAreaName, setNextStep, setButtonState, buttonState}) => {\n\tconst [newBlockAreaName, setBlockAreaName] = useState('');\n\tconst debouncedBlockAreaName = useDebounce(newBlockAreaName, 500);\n\n\tuseEffect(() => {\n\t\tif (debouncedBlockAreaName.length < 3) {\n\t\t\tsetButtonState({\n\t\t\t\t...buttonState,\n\t\t\t\tdisabled: true,\n\t\t\t});\n\t\t} else {\n\t\t\tsetButtonState({\n\t\t\t\t...buttonState,\n\t\t\t\ttext: 'Continue...',\n\t\t\t\tdisabled: false,\n\t\t\t\tonClick: () => {\n\t\t\t\t\tsetNewBlockAreaName(debouncedBlockAreaName);\n\t\t\t\t\tsetNextStep('query-b');\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}, [debouncedBlockAreaName]);\n\n\treturn(\n\t\t<TextControl\n\t\t\tlabel={__('New Block Area Name', 'prc-platform-core')}\n\t\t\tvalue={newBlockAreaName}\n\t\t\tonChange={( value ) => setBlockAreaName( value )}\n\t\t/>\n\t);\n}\n\n/**\n * Search for a block area,\n * @param {*} param0\n * @returns\n */\nexport default function QueryA({\n\tblockAreaSlug,\n\tsetBlockAreaSlug,\n\tsetNewBlockAreaName,\n\tsetNextStep,\n\tbuttonState,\n\tsetButtonState,\n}) {\n\tconst [tempBlockAreaSlug, setTempBlockAreaSlug] = useState(blockAreaSlug);\n\tconst [blockAreaId, blockAreaName] = useTaxonomy(TAXONOMY, blockAreaSlug);\n\n\tconst [createNewBlockArea, setCreateNewBlockArea] = useState(false);\n\n\tuseEffect(()=>{\n\t\tconst buttonArgs = {\n\t\t\t...buttonState,\n\t\t\ttext: 'Next',\n\t\t\tdisabled: true,\n\t\t\tonClick: () => {\n\t\t\t\tsetBlockAreaSlug(tempBlockAreaSlug);\n\t\t\t\tsetNextStep('query-b');\n\t\t\t}\n\t\t};\n\t\tif (tempBlockAreaSlug && tempBlockAreaSlug.length > 0) {\n\t\t\tbuttonArgs.disabled = false;\n\t\t}\n\t\tsetButtonState(buttonArgs);\n\t}, [tempBlockAreaSlug]);\n\n\treturn (\n\t\t<Step>\n\t\t\t{false === createNewBlockArea && (\n\t\t\t\t<WPEntitySearch\n\t\t\t\t\tplaceholder={__('Search for an existing block area, or create a new one', 'prc-platform-core')}\n\t\t\t\t\tsearchLabel={__(`Search for ${TAXONOMY_LABEL}`)}\n\t\t\t\t\tentityType=\"taxonomy\"\n\t\t\t\t\tentitySubType={TAXONOMY}\n\t\t\t\t\tentityId={blockAreaId || false}\n\t\t\t\t\tsearchValue={blockAreaName || ''}\n\t\t\t\t\tonSelect={(entity) => {\n\t\t\t\t\t\tconsole.log('Block Area Entity: ', entity);\n\t\t\t\t\t\tsetTempBlockAreaSlug(entity.slug);\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyEnter={() => {\n\t\t\t\t\t\tconsole.log(\"Enter Key Pressed\");\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyESC={() => {\n\t\t\t\t\t\tconsole.log(\"ESC Key Pressed\");\n\t\t\t\t\t}}\n\t\t\t\t\tperPage={10}\n\t\t\t\t\tshowExcerpt={true}\n\t\t\t\t\tcreateNew={() => {\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t<CreateNewButton {...{buttonState, setButtonState, setCreateNewBlockArea}}/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{true === createNewBlockArea && (\n\t\t\t\t<CreateNewField {...{setNewBlockAreaName, setNextStep, setButtonState, buttonState}}/>\n\t\t\t)}\n\t\t</Step>\n\t);\n}\n","/**\n * External Dependencies\n */\nimport { WPEntitySearch } from '@prc/components';\nimport { useTaxonomy } from '@prc/hooks';\n\n/**\n * WordPress Dependencies\n */\nimport { Fragment, useState, useEffect } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport { BaseControl, ToggleControl } from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport { TAXONOMY_LABEL } from '../../constants';\n\nexport default function QueryB({\n\tcategorySlug,\n\ttemplateSlug,\n\tallowCategorySelection,\n\tinheritCategory,\n\ttoggleAllowCategorySelection = () => {},\n\tsetInheritCategory = () => {},\n\tsetCategorySlug = () => {},\n\tbuttonState,\n\tsetButtonState,\n\tsetNextStep,\n}) {\n\tconst isCategoryTemplate = undefined !== templateSlug && templateSlug?.includes('category');\n\tconst templateSlugCleaned = templateSlug?.replace( 'category-', '' );\n\n\tconst [templateCatId, templateCatName] = useTaxonomy('category', templateSlugCleaned);\n\tconst [catId, catName] = useTaxonomy('category', categorySlug);\n\n\tuseEffect(()=> {\n\t\tconst newButtonargs = {\n\t\t\t...buttonState,\n\t\t\ttext: 'Next',\n\t\t\tdisabled: true,\n\t\t\tonClick: () => setNextStep('query-c'),\n\t\t}\n\t\tif (!allowCategorySelection) {\n\t\t\tnewButtonargs.disabled = false;\n\t\t} else {\n\t\t\tif ( !inheritCategory && !categorySlug ) {\n\t\t\t\tnewButtonargs.disabled = true;\n\t\t\t} else {\n\t\t\t\tnewButtonargs.disabled = false;\n\t\t\t}\n\t\t\tif ( isCategoryTemplate && !inheritCategory && !categorySlug ) {\n\t\t\t\tnewButtonargs.disabled = true;\n\t\t\t} else {\n\t\t\t\tnewButtonargs.disabled = false;\n\t\t\t}\n\t\t\tif ( !isCategoryTemplate && !categorySlug ) {\n\t\t\t\tnewButtonargs.disabled = true;\n\t\t\t} else {\n\t\t\t\tnewButtonargs.disabled = false;\n\t\t\t}\n\t\t\tconsole.log(\"templateSlug\", templateSlug);\n\t\t}\n\t\tsetButtonState(newButtonargs);\n\t}, [allowCategorySelection, inheritCategory, categorySlug, templateSlug]);\n\n\treturn (\n\t\t<div>\n\t\t<BaseControl label={__('Query by Category?', 'prc-platform-core')}>\n\t\t\t<ToggleControl\n\t\t\t\tlabel={ __('Query by Category') }\n\t\t\t\tchecked={ allowCategorySelection }\n\t\t\t\tonChange={ () => toggleAllowCategorySelection() }\n\t\t\t/>\n\t\t</BaseControl>\n\t\t{ allowCategorySelection && (\n\t\t\t<Fragment>\n\t\t\t\t{ isCategoryTemplate && (\n\t\t\t\t\t<BaseControl label={__('Inherit Category from Template?', 'prc-platform-core')}>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={ inheritCategory ? __('Yes', 'prc-platform-core') : __('No', 'prc-platform-core') }\n\t\t\t\t\t\t\tchecked={ inheritCategory }\n\t\t\t\t\t\t\tonChange={ () => setInheritCategory(!inheritCategory) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</BaseControl>\n\t\t\t\t) }\n\t\t\t\t{ (true !== inheritCategory) && (\n\t\t\t\t\t<WPEntitySearch\n\t\t\t\t\t\tplaceholder={__(`Search for a category to filter ${TAXONOMY_LABEL} by`)}\n\t\t\t\t\t\tsearchLabel={__(`Search for a category to filter ${TAXONOMY_LABEL} by`)}\n\t\t\t\t\t\tentityType=\"taxonomy\"\n\t\t\t\t\t\tentitySubType=\"category\"\n\t\t\t\t\t\tentityId={templateCatId || catId || false}\n\t\t\t\t\t\tsearchValue={templateCatName || catName || ''}\n\t\t\t\t\t\tonSelect={(entity) => {\n\t\t\t\t\t\t\tconsole.log('Category Entity: ', entity);\n\t\t\t\t\t\t\tsetCategorySlug(entity.slug);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonKeyEnter={() => {\n\t\t\t\t\t\t\tconsole.log(\"Enter Key Pressed\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonKeyESC={() => {\n\t\t\t\t\t\t\tconsole.log(\"ESC Key Pressed\");\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tperPage={10}\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</Fragment>\n\t\t)}\n\t\t</div>\n\t);\n}\n","/**\n * WordPress Dependencies\n */\n\nimport { __ } from '@wordpress/i18n';\nimport { Fragment, useState, useEffect } from 'react';\n\n/**\n * Internal Dependencies\n */\nimport Step from './_step';\nimport { createBlockArea, createBlockModule } from '../../functions';\n\nexport default function QueryC({\n\tblockAreaSlug,\n\tcategorySlug,\n\tinheritCategory,\n\tnewBlockAreaName,\n\tsetAttributes,\n\tsetNextStep,\n\tbuttonState,\n\tsetButtonState,\n}){\n\tconst [preConfirm, setPreConfirm] = useState(false);\n\tconst [confirm, setConfirm] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst newButtonargs = {\n\t\t\t...buttonState,\n\t\t\ttext: 'Confirm Settings',\n\t\t\tdisabled: false,\n\t\t\tonClick: () => setPreConfirm(true),\n\t\t}\n\t\tsetButtonState(newButtonargs);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tif (preConfirm) {\n\t\t\tconst newButtonargs = {\n\t\t\t\t...buttonState,\n\t\t\t\ttext: 'Insert Block Area',\n\t\t\t\tdisabled: false,\n\t\t\t\tvariant: 'primary',\n\t\t\t\tonClick: () => setConfirm(true),\n\t\t\t}\n\t\t\tsetButtonState(newButtonargs);\n\t\t}\n\t}, [preConfirm]);\n\n\tuseEffect(() => {\n\t\tif (confirm) {\n\t\t\tconst newAttrs = {\n\t\t\t\tinheritCategory,\n\t\t\t};\n\t\t\tif (categorySlug) {\n\t\t\t\tnewAttrs.categorySlug = categorySlug;\n\t\t\t}\n\t\t\tif (newBlockAreaName) {\n\t\t\t\tcreateBlockArea(newBlockAreaName).then((newBlockAreaSlug) => {\n\t\t\t\t\tnewAttrs.blockAreaSlug = newBlockAreaSlug;\n\t\t\t\t\tsetAttributes(newAttrs);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif (blockAreaSlug) {\n\t\t\t\t\tnewAttrs.blockAreaSlug = blockAreaSlug;\n\t\t\t\t}\n\t\t\t\tsetAttributes(newAttrs);\n\t\t\t}\n\t\t}\n\t}, [confirm]);\n\n\t// if confirm is true then we're going to double check the below and if we're good great then well proceed, otherwise we'll setNextStep('create-a') and tell them to create a new block module.\n\n\t// Now that we have these values we're going to set them in the attributes. We're also going to do a quick query of the block modules and if we don't find one we're going to setNextStep('create-a') and tell them to create a new block module. That create-a step will need to look for categorySlug and blockAreaSlug and pass those values along to the newly created block_module post type...\n\n\t// Once we confirm the values we're going to create the block area if needs be.\n\n\treturn(\n\t\t<Step>\n\t\t\t<h5 className=\"block-area-edit__review-settings-heading\">Review Block Area Settings:</h5>\n\t\t\t{!newBlockAreaName && <p>This area will render the latest public <pre>block_module</pre> that is in the <pre>{blockAreaSlug}</pre> block area{categorySlug && <span> and <pre>{categorySlug}</pre> category</span>}{true === inheritCategory && <span> and will <pre>inherit the category</pre> from available context</span>}.</p>}\n\t\t\t{newBlockAreaName && <p>This area will render the latest public <pre>block_module</pre> that is in the new <pre>{newBlockAreaName}</pre> block area{categorySlug && <span> and <pre>{categorySlug}</pre> category</span>}.</p>}\n\t\t</Step>\n\t);\n}\n","/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { store as coreStore } from '@wordpress/core-data';\nimport { dispatch } from '@wordpress/data';\nimport { cleanForSlug } from '@wordpress/url';\n\n/**\n * Internal Dependencies\n */\nimport { TAXONOMY, TAXONOMY_LABEL, POST_TYPE_LABEL } from '../constants';\n\nexport default async function createBlockArea(blockAreaName) {\n\tconst {saveEntityRecord} = dispatch(coreStore);\n\tconst slug = cleanForSlug(blockAreaName);\n\n\tconst newBlockArea = await saveEntityRecord(\n\t\t'taxonomy',\n\t\tTAXONOMY,\n\t\t{\n\t\t\tname: blockAreaName,\n\t\t\tslug,\n\t\t}\n\t);\n\tif ( newBlockArea ) {\n\t\tconsole.log('createBlockArea ->', newBlockArea);\n\t\treturn newBlockArea?.slug;\n\t}\n\n\treturn false;\n}\n","/**\n * External Dependencies\n */\nimport { EntityCreateNewModal } from '@prc/components';\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\nimport { Fragment } from '@wordpress/element';\n\n/**\n * Internal Dependencies\n */\nimport { createBlockModule } from '../../functions';\n\nexport default function CreateA( {\n\tdefaultTitle = 'Block Module',\n\tblockAreaId,\n\tcategoryId,\n\tonCreate = () => {},\n\tsetNextStep,\n} ) {\n\treturn(\n\t\t<Fragment>\n\t\t\t<EntityCreateNewModal {...{\n\t\t\t\tdefaultTitle,\n\t\t\t\tonClose: () => {\n\t\t\t\t\tsetNextStep('intro');\n\t\t\t\t},\n\t\t\t\tonSubmit: (newTitle) => {\n\t\t\t\t\tcreateBlockModule(newTitle, blockAreaId, categoryId, 'publish').then((response) => {\n\t\t\t\t\t\tconsole.log(\"then...\", response);\n\t\t\t\t\t\tonCreate(response.id);\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t}}/>\n\t\t</Fragment>\n\t);\n}\n","/**\n * External Dependencies\n */\nimport { EntityPatternModal } from '@prc/components';\n\n/**\n * WordPress Dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n\n/**\n * Internal Dependencies\n */\nimport { POST_TYPE, POST_TYPE_LABEL } from '../../constants';\n\nexport default function SelectA( {\n\tonSelect = () => {},\n\tonClose = () => {},\n\tselectedId = null,\n\tclientId,\n} ) {\n\treturn(\n\t\t<EntityPatternModal {...{\n\t\t\ttitle: __('Choose a block module', 'prc-platform-core'),\n\t\t\tinstructions: __('Choosing a block module will always display it, overriding any block area or category queries.', 'prc-platform-core'),\n\t\t\tentityType: POST_TYPE,\n\t\t\tentityTypeLabel: POST_TYPE_LABEL,\n\t\t\tonSelect,\n\t\t\tonClose,\n\t\t\tclientId,\n\t\t\tselectedId,\n\t\t}}/>\n\t);\n}\n","/**\n * WordPress Dependencies\n */\nimport { useMemo, useState } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport {\n\tButtonGroup,\n\tButton,\n\tPlaceholder\n} from '@wordpress/components';\n\n/**\n * Internal Dependencies\n */\nimport { Intro, QueryA, QueryB, QueryC, SelectA, CreateA } from './steps';\nimport Icon from '../icon';\n\nconst STEPS = [\n\t'intro', // Choose \"Query by Block Area\", \"Select Specific Block Module\", or \"Create New Module\"\n\t'query-a', // We enter the query block area setup, first we either select or create a new block area slug.\n\t'query-b', // We either select the category slug, select inheirt category, or no category and thus we'd just pick whatever is most recent in the block area.\n\t'query-c', // We review the settings and then click finish.\n\t'create-a', // We enter the block module setup, we can give it a title and select whether it should publish immediately or at a future date (draft).\n\t'create-b', // We enter the block area setup, first we either select or create a new block area slug or we determine we don't want a block area, we explain that means we will only pull in this block module and then we set the ref.\n\t'create-c', // We review the settings and then click finish.\n\t'select-a', // We open a modal with the templateparts like selector. There is no revie stage here, we immediately set the ref and load the block module.\n];\n\nexport default function BlockAreaWizard({\n\tattributes,\n\tsetAttributes,\n\tblockModules,\n\tisResolving,\n\tcontext,\n\tclientId,\n}) {\n\tconst { templateSlug } = context;\n\tconst [blockAreaSlug, setBlockAreaSlug] = useState(attributes?.blockAreaSlug);\n\tconst [categorySlug, setCategorySlug] = useState(attributes?.categorySlug);\n\tconst [inheritCategory, setInheritCategory] = useState(attributes?.inheritCategory);\n\tconst [allowCategorySelection, setAllowCategorySelection] = useState(false);\n\tconst toggleAllowCategorySelection = () => {\n\t\tsetAllowCategorySelection(!allowCategorySelection);\n\t}\n\n\tconst [activeStep, setActiveStep] = useState('intro');\n\tconst setNextStep = (nextStep) => {\n\t\tsetActiveStep(nextStep);\n\t}\n\tconst [buttonState, setButtonState] = useState({\n\t\tvariant: 'secondary',\n\t\tisLoading: false,\n\t\ttext: 'Next',\n\t\tonClick: null,\n\t\tdisabled: false,\n\t});\n\n\tconst [newBlockAreaName, setNewBlockAreaName] = useState(false);\n\n\tconst allowPrevious = useMemo(() => {\n\t\tswitch (activeStep) {\n\t\t\tcase 'intro':\n\t\t\t\treturn null;\n\t\t\tcase 'query-a':\n\t\t\t\treturn true;\n\t\t\tcase 'query-b':\n\t\t\t\treturn true;\n\t\t\tcase 'query-c':\n\t\t\t\treturn true;\n\t\t\tcase 'create-a':\n\t\t\t\treturn true;\n\t\t\tcase 'create-b':\n\t\t\t\treturn true;\n\t\t\tcase 'select-a':\n\t\t\t\treturn true;\n\t\t\tdefault:\n\t\t\t\treturn true;\n\t\t}\n\t}, [activeStep]);\n\n\treturn (\n\t\t<Placeholder\n\t\t\tlabel={__('Block Area', 'prc-platform-core')}\n\t\t\tisColumnLayout={true}\n\t\t\ticon={() => <Icon color={null}/>}\n\t\t>\n\t\t\t<div className=\"block-area-edit__placeholder-inner\">\n\t\t\t\t{['intro','create-a'].includes(activeStep) && (\n\t\t\t\t\t<Intro\n\t\t\t\t\t{...{\n\t\t\t\t\t\tisResolving,\n\t\t\t\t\t\tblockModules,\n\t\t\t\t\t\tbuttonState,\n\t\t\t\t\t\tsetButtonState,\n\t\t\t\t\t\tsetNextStep,\n\t\t\t\t\t\tisResolving,\n\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{activeStep === 'query-a' && (\n\t\t\t\t\t<QueryA\n\t\t\t\t\t{...{\n\t\t\t\t\t\tblockAreaSlug,\n\t\t\t\t\t\tsetBlockAreaSlug,\n\t\t\t\t\t\tnewBlockAreaName,\n\t\t\t\t\t\tsetNewBlockAreaName,\n\t\t\t\t\t\tsetNextStep,\n\t\t\t\t\t\tbuttonState,\n\t\t\t\t\t\tsetButtonState\n\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{activeStep === 'query-b' && (\n\t\t\t\t\t<QueryB\n\t\t\t\t\t{...{\n\t\t\t\t\t\tcategorySlug,\n\t\t\t\t\t\tsetCategorySlug,\n\t\t\t\t\t\ttemplateSlug,\n\t\t\t\t\t\tallowCategorySelection,\n\t\t\t\t\t\tinheritCategory,\n\t\t\t\t\t\ttoggleAllowCategorySelection,\n\t\t\t\t\t\tsetInheritCategory,\n\t\t\t\t\t\tbuttonState,\n\t\t\t\t\t\tsetButtonState,\n\t\t\t\t\t\tsetNextStep,\n\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{activeStep === 'query-c' && (\n\t\t\t\t\t<QueryC {...{\n\t\t\t\t\t\tblockAreaSlug,\n\t\t\t\t\t\tcategorySlug,\n\t\t\t\t\t\tinheritCategory,\n\t\t\t\t\t\tnewBlockAreaName,\n\t\t\t\t\t\tsetAttributes,\n\t\t\t\t\t\tsetNextStep,\n\t\t\t\t\t\tbuttonState,\n\t\t\t\t\t\tsetButtonState\n\t\t\t\t\t}}/>\n\t\t\t\t)}\n\t\t\t\t{activeStep === 'select-a' && (\n\t\t\t\t\t<SelectA {...{\n\t\t\t\t\t\tclientId,\n\t\t\t\t\t\tonSelect: ({id}) => {\n\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\tref: id,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tonClose: () => {\n\t\t\t\t\t\t\tsetNextStep('intro');\n\t\t\t\t\t\t},\n\t\t\t\t\t}}/>\n\t\t\t\t)}\n\t\t\t\t{activeStep === 'create-a' && (\n\t\t\t\t\t<CreateA {...{\n\t\t\t\t\t\tonCreate: (id) => {\n\t\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\t\tref: id,\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsetNextStep,\n\t\t\t\t\t}}/>\n\t\t\t\t)}\n\t\t\t\t{!['intro', 'create-a'].includes(activeStep) && (\n\t\t\t\t\t<div className=\"block-area-edit__toolbar\">\n\t\t\t\t\t\t{null !== allowPrevious && (\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"secondary\"\n\t\t\t\t\t\t\t\tdisabled={!allowPrevious}\n\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\tif (null !== allowPrevious) {\n\t\t\t\t\t\t\t\t\t\t// if activeStep is query-a we're going back to intro, if its query-b we're going back to query-a, if its query-c we're going back to query-b.\n\t\t\t\t\t\t\t\t\t\t// if activestep is create-a we're going back to intro, if its create-b we're going back to create-a.\n\t\t\t\t\t\t\t\t\t\t// if activeStep is select-a we're going back to intro.\n\t\t\t\t\t\t\t\t\t\tif ('intro' === activeStep) {\n\t\t\t\t\t\t\t\t\t\t\tsetActiveStep('intro');\n\t\t\t\t\t\t\t\t\t\t} else if ('query-a' === activeStep) {\n\t\t\t\t\t\t\t\t\t\t\tsetActiveStep('intro');\n\t\t\t\t\t\t\t\t\t\t} else if ('query-b' === activeStep) {\n\t\t\t\t\t\t\t\t\t\t\tsetActiveStep('query-a');\n\t\t\t\t\t\t\t\t\t\t} else if ('query-c' === activeStep) {\n\t\t\t\t\t\t\t\t\t\t\tsetActiveStep('query-b');\n\t\t\t\t\t\t\t\t\t\t} else if ('create-a' === activeStep) {\n\t\t\t\t\t\t\t\t\t\t\tsetActiveStep('intro');\n\t\t\t\t\t\t\t\t\t\t} else if ('create-b' === activeStep) {\n\t\t\t\t\t\t\t\t\t\t\tsetActiveStep('create-a');\n\t\t\t\t\t\t\t\t\t\t} else if ('select-a' === activeStep) {\n\t\t\t\t\t\t\t\t\t\t\tsetActiveStep('intro');\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tBack\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={buttonState.variant}\n\t\t\t\t\t\t\tdisabled={buttonState.disabled}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (null !== buttonState.onClick) {\n\t\t\t\t\t\t\t\t\tbuttonState.onClick();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{buttonState.text}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Placeholder>\n\t);\n}\n","/**\n * Registers a new block provided a unique name and an object defining its behavior.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\n\n/**\n * WordPress Dependencies\n */\nimport { registerBlockType } from '@wordpress/blocks';\n\n/**\n * Internal Dependencies\n */\nimport './editor.scss';\nimport icon from './icon';\nimport edit from './edit';\nimport metadata from './block.json';\n\nconst { name } = metadata;\n\nconst settings = {\n\ticon,\n\tedit,\n};\n\n/**\n * Every block starts by registering a new block type definition.\n *\n * @see https://developer.wordpress.org/block-editor/developers/block-api/#registering-a-block\n */\nregisterBlockType(name, { ...metadata, ...settings });\n","/* eslint-disable @wordpress/no-unsafe-wp-apis */\n/**\n * External Dependencies\n */\nimport { InnerBlocksAsSyncedContent } from '@prc/components';\n\n/**\n * WordPress Dependencies\n */\nimport { useMemo, useState } from 'react';\nimport { __ } from '@wordpress/i18n';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport { useDispatch } from '@wordpress/data';\n\n/**\n * Internal Dependencies\n */\nimport { useBlockModules, useTaxonomyInfo } from './hooks';\nimport { POST_TYPE, POST_TYPE_LABEL } from './constants';\n\nimport InspectorControls from './inspector-controls';\nimport BlockAreaWizard from './block-area-wizard';\nimport BlockModuleCreate from './block-module-create';\n\nexport default function Edit({\n\tattributes,\n\tsetAttributes,\n\tclientId,\n\tcontext,\n}) {\n\tconst { ref, blockAreaSlug, categorySlug: categorySlugRaw, inheritCategory } = attributes;\n\tconst {templateSlug} = context;\n\n\tconst [postStatus, setPostStatus] = useState('publish');\n\tconst {setPostIds} = useDispatch('prc-platform/block-area-context');\n\n\t// Theres a lot going on here so we want to optimize performance as much as possible. Below are a lot of useMemo calls to memoize the values these happen in the order they are used in the component, do not change the order.\n\n\tconst isCategoryTemplate = useMemo(() => {\n\t\treturn undefined !== templateSlug && templateSlug.includes('category-');\n\t}, [templateSlug]);\n\n\t// Get the category, either from the category slug from the attributes or from the current template via site editor context.\n\tconst categorySlug = useMemo(() => {\n\t\tif (true === inheritCategory && !categorySlugRaw && isCategoryTemplate) {\n\t\t\treturn templateSlug.replace('category-', '');\n\t\t}\n\t\treturn categorySlugRaw || false;\n\t}, [inheritCategory, categorySlugRaw, isCategoryTemplate, templateSlug]);\n\n\tconst { blockAreaName, blockAreaId, categoryName, categoryId } = useTaxonomyInfo(\n\t\tblockAreaSlug,\n\t\tcategorySlug\n\t);\n\n\tconst blockArea = useMemo(() => {\n\t\treturn {\n\t\t\tid: blockAreaId,\n\t\t\tname: blockAreaName,\n\t\t\tslug: blockAreaSlug,\n\t\t}\n\t}, [blockAreaId, blockAreaName, blockAreaSlug]);\n\n\tconst category = useMemo(() => {\n\t\treturn {\n\t\t\tid: categoryId,\n\t\t\tname: categoryName,\n\t\t\tslug: categorySlug,\n\t\t}\n\t}, [categoryId, categoryName, categorySlug]);\n\n\tconst {blockModules, hasResolved, isResolving} = useBlockModules({\n\t\tenabled: true,\n\t\tblockAreaId: blockArea?.id,\n\t\tcategoryId: category?.id,\n\t\tref,\n\t\targs: { status: postStatus }\n\t});\n\n\t/**\n\t * This gets the first id from the blockModules array and sets it as the blockModuleId.\n\t */\n\tconst blockModuleId = useMemo(() => {\n\t\tif (blockModules && blockModules.length) {\n\t\t\treturn blockModules[0].id;\n\t\t}\n\t\treturn null;\n\t}, [blockModules]);\n\n\tconst blockModule = useMemo(() => {\n\t\tif (blockModuleId) {\n\t\t\tconst match = blockModules.find((blockModule) => blockModule.id === blockModuleId);\n\t\t\tconsole.log(\"Matching block_module :\", match, blockModules);\n\t\t\treturn {\n\t\t\t\tid: blockModuleId,\n\t\t\t\tname: match?.title?.rendered,\n\t\t\t\tslug: match?.slug,\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}, [blockModuleId, blockModules]);\n\n\tconst blockProps = useBlockProps();\n\n\tconst isInSetup = useMemo(() => {\n\t\tconsole.log(\"isInSetup\", blockModuleId, ref, blockAreaSlug, categorySlug, attributes);\n\t\tif (null !== blockModuleId && ref) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!blockAreaSlug) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}, [hasResolved, blockModuleId, blockAreaSlug, categorySlug, ref]);\n\n\tif (isInSetup) {\n\t\treturn(\n\t\t\t<div {...blockProps}>\n\t\t\t\t<BlockAreaWizard\n\t\t\t\t\t{...{\n\t\t\t\t\t\tattributes,\n\t\t\t\t\t\tsetAttributes,\n\t\t\t\t\t\tblockModules,\n\t\t\t\t\t\tisResolving,\n\t\t\t\t\t\tclientId,\n\t\t\t\t\t\tcontext,\n\t\t\t\t\t\tisCategoryTemplate,\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<InnerBlocksAsSyncedContent {...{\n\t\t\tpostId: blockModuleId,\n\t\t\tpostType: POST_TYPE,\n\t\t\tpostTypeLabel: POST_TYPE_LABEL,\n\t\t\tblockProps,\n\t\t\tclientId,\n\t\t\tallowDetach: true,\n\t\t\tisMissingChildren: () => {\n\t\t\t\treturn(\n\t\t\t\t\t<BlockModuleCreate\n\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\tblockAreaId,\n\t\t\t\t\t\t\tcategoryId,\n\t\t\t\t\t\t\tsetAttributes,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t},\n\t\t\tcollector: (newRecord) => {\n\t\t\t\t// The collector prop runs after all records have been fetched and can be used to pass data back up to the parent component or for this example post meta back up into the editor global data-store.\n\t\t\t\tif (newRecord) {\n\t\t\t\t\tconst storyItemIds = newRecord?._story_item_ids;\n\t\t\t\t\tsetPostIds(storyItemIds);\n\t\t\t\t}\n\t\t\t}\n\t\t}}>\n\t\t\t<InspectorControls\n\t\t\t\t{...{\n\t\t\t\t\tattributes,\n\t\t\t\t\tsetAttributes,\n\t\t\t\t\tclientId,\n\t\t\t\t\tblockArea,\n\t\t\t\t\tcategory,\n\t\t\t\t\tblockModule,\n\t\t\t\t\tpostStatus,\n\t\t\t\t\tsetPostStatus,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</InnerBlocksAsSyncedContent>\n\t);\n}\n","/**\n * External Dependencies\n */\nimport { useTaxonomy } from '@prc/hooks';\n\n/**\n * Internal Dependencies\n */\nimport { TAXONOMY } from '../constants';\n\n/**\n * Given a block area slug and category slug, returns the block area id and name and category id and name.\n * @param {*} blockAreaSlug\n * @param {*} categorySlug\n * @returns\n */\nexport default function useTaxonomyInfo(blockAreaSlug = null, categorySlug =  null) {\n\tconst [categoryId, categoryName] = useTaxonomy('category', categorySlug);\n\tconst [blockAreaId, blockAreaName] = useTaxonomy(TAXONOMY, blockAreaSlug);\n\n\treturn {\n\t\tblockAreaId,\n\t\tblockAreaName,\n\t\tcategoryId,\n\t\tcategoryName,\n\t}\n}\n","/**\n * External dependencies\n */\n\n/**\n * WordPress dependencies\n */\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { useEntityRecords } from '@wordpress/core-data';\nimport { useMemo } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { POST_TYPE_REST_BASE, TAXONOMY } from '../constants';\n\n/**\n * Retrieves all available block modules. Optionally excludes a single block module by id.\n *\n * @param {string} excludedId Block Module ID to exclude.\n *\n * @return {{ blockModules: Array, isResolving: boolean, hasResolved: boolean }} array of block modules.\n */\nexport default function useBlockModules( {\n\tblockAreaId = null,\n\tcategoryId = null,\n\tref = null,\n\texcludeId = null,\n\tenabled = false,\n\targs = {},\n} ) {\n\tconst queryArgs = {\n\t\tcontext: 'view',\n\t\torderby: 'date',\n\t\torder: 'desc',\n\t\tper_page: 25,\n\t};\n\tif (null !== blockAreaId) {\n\t\tqueryArgs[TAXONOMY] = [blockAreaId];\n\t}\n\tif (null !== categoryId) {\n\t\tqueryArgs['categories'] = [categoryId];\n\t}\n\tif (blockAreaId && categoryId) {\n\t\tqueryArgs['tax_relation'] = 'AND';\n\t}\n\tif (null !== ref) {\n\t\tqueryArgs['include'] = [ref];\n\t}\n\n\tconsole.log('postStatus', queryArgs);\n\n\tconst {hasResolved, isResolving, records, status} = useEntityRecords(\n\t\t'postType',\n\t\tPOST_TYPE_REST_BASE,\n\t\t{ ...queryArgs, ...args },\n\t\t{ enabled }\n\t);\n\n\t// Filter out any block modules that have the same id as the excluded block module.\n\tconst filteredBlockModules = useMemo( () => {\n\t\tif ( ! records ) {\n\t\t\treturn [];\n\t\t}\n\t\treturn (\n\t\t\trecords.filter(\n\t\t\t\t( blockModule ) => blockModule.id !== excludeId\n\t\t\t) || []\n\t\t);\n\t}, [ records, excludeId ] );\n\n\treturn {\n\t\tblockModules: filteredBlockModules,\n\t\tisResolving,\n\t\thasResolved,\n\t};\n}\n"],"names":["window","forwardRef","icon","size","props","ref","cloneElement","width","height","createElement","SVG","xmlns","viewBox","Path","d","IconSymbolFilled","color","Icon","symbolFilled","style","TAXONOMY","TAXONOMY_LABEL","TAXONOMY_REST_BASE","POST_TYPE","POST_TYPE_LABEL","BlockAreaControl","attributes","setAttributes","blockArea","postStatus","setPostStatus","metadata","id","name","slug","blockAreaName","setBlockAreaName","useEntityProp","useEffect","Fragment","FlexBlock","TextControl","label","__","value","onChange","ToggleControl","checked","help","Button","isDestructive","variant","onClick","blockAreaSlug","categorySlug","inheritCategory","async","createBlockModule","blockModuleTitle","blockAreaId","categoryId","status","args","title","saveEntityRecord","dispatch","coreStore","newBlockModule","console","log","BlockModuleCreate","displayModal","setDisplayModal","useState","EntityCreateNewModal","defaultTitle","onClose","onSubmit","newTitle","then","response","BlockModuleControl","category","blockModule","setBlockModuleTitle","blockModuleLink","__nextHasNoMarginBottom","CategoryControl","categoryValue","useMemo","TermSelect","taxonomy","maxTerms","Controls","clientId","InspectorControls","PanelBody","initialOpen","Flex","direction","gap","Step","className","children","Intro","isResolving","blockModules","setNextStep","Spinner","length","CreateNewButton","setButtonState","buttonState","setCreateNewBlockArea","text","disabled","CreateNewField","setNewBlockAreaName","newBlockAreaName","debouncedBlockAreaName","useDebounce","QueryA","setBlockAreaSlug","tempBlockAreaSlug","setTempBlockAreaSlug","useTaxonomy","createNewBlockArea","buttonArgs","WPEntitySearch","placeholder","searchLabel","entityType","entitySubType","entityId","searchValue","onSelect","entity","onKeyEnter","onKeyESC","perPage","showExcerpt","createNew","QueryB","templateSlug","allowCategorySelection","toggleAllowCategorySelection","setInheritCategory","setCategorySlug","isCategoryTemplate","undefined","includes","templateSlugCleaned","replace","templateCatId","templateCatName","catId","catName","newButtonargs","BaseControl","QueryC","preConfirm","setPreConfirm","confirm","setConfirm","newAttrs","cleanForSlug","newBlockArea","createBlockArea","newBlockAreaSlug","CreateA","onCreate","SelectA","selectedId","EntityPatternModal","instructions","entityTypeLabel","BlockAreaWizard","context","setAllowCategorySelection","activeStep","setActiveStep","nextStep","isLoading","allowPrevious","Placeholder","isColumnLayout","settings","edit","categorySlugRaw","setPostIds","useDispatch","categoryName","useTaxonomyInfo","hasResolved","excludeId","enabled","queryArgs","orderby","order","per_page","records","useEntityRecords","filter","useBlockModules","blockModuleId","match","find","rendered","blockProps","useBlockProps","InnerBlocksAsSyncedContent","postId","postType","postTypeLabel","allowDetach","isMissingChildren","collector","newRecord","storyItemIds","_story_item_ids","registerBlockType"],"sourceRoot":""}